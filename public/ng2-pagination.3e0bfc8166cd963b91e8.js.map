{"version":3,"sources":["webpack:///ng2-pagination.3e0bfc8166cd963b91e8.js","webpack:///webpack/bootstrap 3e0bfc8166cd963b91e8?03bd***","webpack:///./~/ng2-pagination/index.js","webpack:///./~/@angular/common/bundles/common.umd.js?d980*","webpack:///./~/@angular/core/bundles/core.umd.js?e2a5*","webpack:///./~/rxjs/Subject.js?c1c6*","webpack:///./~/rxjs/Observable.js?4e06*","webpack:///./~/rxjs/util/root.js?93c3*","webpack:///./~/rxjs/util/toSubscriber.js?f8fe*","webpack:///./~/rxjs/Subscriber.js?215e*","webpack:///./~/rxjs/util/isFunction.js?51c0*","webpack:///./~/rxjs/Subscription.js?5c58*","webpack:///./~/rxjs/util/isArray.js?b0ea*","webpack:///./~/rxjs/util/isObject.js?aa2e*","webpack:///./~/rxjs/util/tryCatch.js?7694*","webpack:///./~/rxjs/util/errorObject.js?f49b*","webpack:///./~/rxjs/util/UnsubscriptionError.js?bc9d*","webpack:///./~/rxjs/Observer.js?f098*","webpack:///./~/rxjs/symbol/rxSubscriber.js?112c*","webpack:///./~/rxjs/symbol/observable.js?1f24*","webpack:///./~/rxjs/util/ObjectUnsubscribedError.js?e559*","webpack:///./~/rxjs/SubjectSubscription.js?d351*","webpack:///./~/ng2-pagination/dist/ng2-pagination.js","webpack:///./~/ng2-pagination/dist/paginate.pipe.js","webpack:///./~/ng2-pagination/dist/pagination.service.js","webpack:///./~/ng2-pagination/dist/pagination-controls.component.js","webpack:///./~/ng2-pagination/dist/template.js","webpack:///./~/ng2-pagination/dist/pagination-controls.directive.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","__export","hasOwnProperty","1","global","factory","this","_angular_core","getTypeNameForDebugging","type","isPresent","obj","isBlank","isDate","Date","isNaN","valueOf","stringify","token","overriddenName","name","res","toString","newLineIndex","indexOf","substring","isJsObject","o","getSymbolIterator","_symbolIterator","globalScope","Symbol","iterator","keys","Object","getOwnPropertyNames","Map","prototype","i","length","key","_stripBaseHref","baseHref","url","startsWith","_stripIndexHtml","test","getPluralCategory","value","cases","ngLocalization","nbCase","getPluralCase","locale","nLike","parseInt","n","nDecimal","replace","Math","floor","abs","v","f","t","lang","split","toLowerCase","Plural","One","Other","Zero","Two","Few","Many","isListLikeIterable","Array","isArray","digitModifier","inner","date","result","hourClockExtractor","hourExtractor","intlDateFormat","options","Intl","DateTimeFormat","format","timeZoneGetter","timezone","hour","hour12","timeZoneName","hour12Modify","digitCondition","prop","len","nameCondition","combine","_a","assign","apply","concat","datePartGetterFactory","ret","dateFormatter","fn","PATTERN_ALIASES","parts","DATE_FORMATTER_CACHE","get","match","DATE_FORMATS_SPLIT","exec","slice","pop","push","set","reduce","text","part","DATE_FORMATS","partToTime","isBlank$1","formatNumber","pipe","style","digits","currency","currencyAsSymbol","NumberWrapper","isNumeric","InvalidPipeArgumentError","minInt","minFraction","maxFraction","NumberFormatStyle","Currency","_NUMBER_FORMAT_REGEXP","Error","parseIntAutoRadix","NumberFormatter","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","PlatformLocation","defineProperty","enumerable","configurable","LocationStrategy","APP_BASE_HREF","OpaqueToken","window","_global","assert","condition","parseFloat","Location","platformStrategy","_this","_subject","EventEmitter","_platformStrategy","browserBaseHref","getBaseHref","_baseHref","stripTrailingSlash","onPopState","ev","emit","path","includeHash","normalize","isCurrentPathEqualTo","query","normalizeQueryParams","prepareExternalUrl","go","pushState","replaceState","forward","back","subscribe","onNext","onThrow","onReturn","next","error","complete","params","joinWithSlash","start","end","slashes","endsWith","decorators","Injectable","ctorParameters","__extends","d","b","__","constructor","create","HashLocationStrategy","_super","_platformLocation","onHashChange","hash","internal","state","title","queryParams","pathname","undefined","Optional","Inject","args","__extends$1","PathLocationStrategy","href","getBaseHrefFromDOM","search","externalUrl","__extends$2","NgLocalization","NgLocaleLocalization","_locale","plural","LOCALE_ID","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_initialClasses","_applyInitialClasses","_applyClasses","_rawClass","_cleanupClasses","_iterableDiffer","_keyValueDiffer","find","ngDoCheck","changes","diff","_applyIterableChanges","_applyKeyValueChanges","rawClassVal","forEachAddedItem","record","_toggleClass","currentValue","forEachChangedItem","forEachRemovedItem","previousValue","item","isCleanup","forEach","klass","Set","enabled","trim","setElementClass","nativeElement","Directive","selector","IterableDiffers","KeyValueDiffers","ElementRef","Renderer","propDecorators","Input","ngClass","NgForRow","$implicit","index","count","even","NgFor","_viewContainer","_template","_differs","_cdr","_differ","ngOnChanges","ngForTrackBy","e","ngForOf","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","view","createEmbeddedView","tuple","RecordViewTuple","remove","move","_perViewChange","ilen","viewRef","context","forEachIdentityChange","ViewContainerRef","TemplateRef","ChangeDetectorRef","ngForTemplate","NgIf","_hasView","clear","ngIf","SwitchView","_viewContainerRef","_templateRef","_created","destroy","enforceState","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","newValue","_ngSwitch","_updateDefaultCases","_addCase","_addDefault","_defaultViews","_matchCase","matched","useDefault","defaultView","ngSwitch","NgSwitchCase","viewContainer","templateRef","_view","ngSwitchCase","Host","NgSwitchDefault","NgPlural","_localization","_caseViews","_switchValue","_updateView","addCase","switchView","_clearViews","_activateView","_activeView","ngPlural","NgPluralCase","template","Attribute","NgStyle","_ngStyle","_setStyle","nameAndUnit","unit","setElementStyle","ngStyle","NgTemplateOutlet","_context","_viewRef","ngOutletContext","ngTemplateOutlet","COMMON_DIRECTIVES","isPromise","__core_private__","__extends$4","BaseError","message","nativeError","_nativeError","stack","__extends$3","WrappedError","originalError","ObservableStrategy","createSubscription","async","updateLatestValue","dispose","subscription","unsubscribe","onDestroy","PromiseStrategy","then","_promiseStrategy","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","ngOnDestroy","_dispose","transform","WrappedValue","wrap","_subscribe","_selectStrategy","_updateLatestValue","markForCheck","Pipe","pure","num","_b","_c","currencyDisplay","NumberFormat","yMMMdjms","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","yMd","jms","jm","yyyy","yy","y","MMMM","MMM","MM","M","LLLL","L","dd","HH","H","hh","h","jj","j","mm","ss","s","sss","EEEE","EEE","EE","E","a","Z","z","ww","w","G","GG","GGG","GGGG","DateFormatter","pattern","DatePipe","map","val","_ALIASES","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","JSON","LowerCasePipe","DecimalPipe","Decimal","PercentPipe","Percent","CurrencyPipe","currencyCode","symbolDisplay","SlicePipe","supports","UpperCasePipe","toUpperCase","COMMON_PIPES","CommonModule","NgModule","declarations","providers","provide","useClass","2","rxjs_Subject","rxjs_Observable","scheduleMicroTask","Zone","current","looseIdentical","print","console","log","warn","isPrimitive","extractAnnotation","annotation","applyParams","fnOrArray","String","Function","Number","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","Reflect","defineMetadata","Class","clsDef","proto","extends","constructorName","_nextClassId","makeDecorator","props","parentClass","chainFn","DecoratorFactory","objOrType","getMetadata","metaCtor","annotationInstance","chainAnnotation","TypeDecorator","cls","getOwnMetadata","makeMetadataCtor","annotationCls","_i","arguments","argVal","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","bind","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","unimplemented","findFirstClosedCycle","constructResolvingPath","reversed","reverse","tokenStrs","k","join","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","resolveReflectiveFactory","provider","factoryFn","resolvedDeps","reflector","_dependenciesFor","useExisting","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","useFactory","constructDependencies","deps","useValue","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","multi","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","values","normalizedProvidersMap","existing","multiProvider","MixingMultiProvidersWithRegularProvidersError","resolvedFactories","resolvedProvider","Type","InvalidProviderError","typeOrFunc","dependencies","params_1","_extractToken","some","NoAnnotationError","metadata","depProps","optional","_createDependency","lowerBoundVisibility","upperBoundVisibility","paramMetadata","Self","SkipSelf","_mapProviders","injector","_proto","numberOfProviders","getProviderAtIndex","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","done","iterateListLike","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","_throwError","getPreviousIndex","addRemoveOffset","moveOffsets","moveOffset","devModeEqual","createRenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderComponentType","nextRenderComponentTypeId","addToArray","array","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","checkBinding","throwOnChange","oldValue","ExpressionChangedAfterItHasBeenCheckedError","castByValue","input","pureProxy1","v0","UNINITIALIZED","p0","pureProxy2","v1","p1","pureProxy3","v2","p2","pureProxy4","v3","p3","pureProxy5","v4","p4","pureProxy6","v5","p5","pureProxy7","v6","p6","pureProxy8","v7","p7","pureProxy9","v8","p8","pureProxy10","v9","p9","setBindingDebugInfoForChanges","renderer","el","setBindingDebugInfo","camelCaseToDashCase","CAMEL_CASE_REGEXP","createRenderElement","parentElement","attrs","debugInfo","createElement","setElementAttribute","selectOrCreateRenderHostElement","elementName","rootSelectorOrNode","hostElement","selectRootElement","subscribeToRenderElement","element","eventNamesAndTargets","listener","disposables","createEmptyInlineArray","eventName","eventTarget","disposable","listenGlobal","listen","disposeInlineArray","noop","ctor","InlineArray2","InlineArray4","InlineArray8","InlineArray16","InlineArrayDynamic","detectWTF","wtf","global$1","trace","events","createScope","signature","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlaformFactory","marker","extraProviders","getPlatform","ReflectiveInjector","resolveAndCreate","assertPlatform","requiredToken","platform","destroyPlatform","_callAndReportToErrorHandler","errorHandler","callback","catch","handleError","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","checkNotEmpty","modulePath","exportName","queueAnimationGlobally","player","_queuedAnimations","triggerQueuedAnimations","Promise","resolve","_triggerAnimations","play","asNativeElements","debugEls","_queryElementChildren","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","_reflector","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","animate","timing","stylesEntry","EMPTY_STYLE","AnimationStyleMetadata","AnimationAnimateMetadata","group","steps","AnimationGroupMetadata","sequence","AnimationSequenceMetadata","tokens","offset","entry","entryOffset","stateNameExpr","AnimationStateDeclarationMetadata","keyframes","AnimationKeyframesSequenceMetadata","transition","stateChangeExpr","animationData","AnimationStateTransitionMetadata","trigger","animation","AnimationEntryMetadata","prepareFinalAnimationStyles","previousStyles","newStyles","nullValue","finalStyles","AUTO_STYLE","balanceAnimationKeyframes","collectedStyles","finalStateStyles","limit","firstKeyframe","flatenedFirstKeyframeStyles","flattenStyles","extraFirstKeyframeStyles","hasExtraFirstStyles","keyframeCollectedStyles","StringMapWrapper","merge","finalKeyframe","flatenedFinalKeyframeStyles","extraFinalKeyframeStyles","hasExtraFinalStyles","clearStyles","collectAndResolveStyles","collection","stylesObj","FILL_STYLE_FLAG","renderStyles","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Query","ContentChildren","first","isViewQuery","descendants","read","ContentChild","ViewChildren","ViewChild","ChangeDetectorStatus","LifecycleHooks","inputs","outputs","host","exportAs","queries","Component","viewProviders","changeDetection","styleUrls","interpolation","entryComponents","Output","HostBinding","HostListener","LIFECYCLE_HOOKS_VALUES","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","imports","bootstrap","schemas","ViewEncapsulation","ViewMetadata","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","notFoundValue","Injector","NULL","AbstractProviderError","constructResolvingMessage","injectors","addKey","NoProviderError","CyclicDependencyError","InstantiationError","originalException","originalStack","_genMessage","parameter","OutOfBoundsError","provider1","provider2","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","ctorParam","fill","propMetadata","propDecorators_1","propMetadata_1","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resolveIdentifier","moduleUrl","runtime","resolveEnum","enumIdentifier","ReflectorReader","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","properties","_MAX_CONSTRUCTION_COUNTER","UNDEFINED","ReflectiveProtoInjectorInlineStrategy","protoEI","provider0","provider3","provider4","provider5","provider6","provider7","provider8","provider9","keyId0","keyId1","keyId2","keyId3","keyId4","keyId5","keyId6","keyId7","keyId8","keyId9","createInjectorStrategy","ReflectiveInjectorInlineStrategy","ReflectiveProtoInjectorDynamicStrategy","protoInj","keyIds","ei","ReflectiveInjectorDynamicStrategy","ReflectiveProtoInjector","fromResolvedProviders","protoStrategy","obj0","obj1","obj2","obj3","obj4","obj5","obj6","obj7","obj8","obj9","resetConstructionCounter","_constructionCounter","instantiateProvider","_new","getObjByKeyId","keyId","inj","getObjAtIndex","getMaxNumberOfObjects","objs","parent","ResolvedReflectiveProviders","ReflectiveInjector_","resolveAndCreateChild","createChildFromResolved","resolveAndInstantiate","instantiateResolved","_parent","_getByKey","getAt","_instantiateProvider","_instantiate","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","d10","d11","d12","d13","d14","d15","d16","d17","d18","d19","_getByReflectiveDependency","displayName","dep","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_throwOrNull","inj_","ErrorHandler","rethrowError","_console","_findOriginalError","_findOriginalStack","_findContext","_extractMessage","m1","m2","equals","k1","k2","ListWrapper","removeAll","list","items","splice","flatten","flat","flatItem","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","asyncInitPromises","initResult","_donePromise","all","APP_ID","APP_ID_RANDOM_PROVIDER","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","ComponentStillLoadingError","compType","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","DefaultIterableDifferFactory","cdRef","trackByFn","DefaultIterableDiffer","trackByIdentity","_trackByFn","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","forEachItem","_next","nextIt","nextRemove","adjPreviousIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","_nextAdded","forEachMovedItem","_nextMoved","_nextIdentityChange","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","CollectionChangeRecord","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","previous","additions","moves","removals","identityChanges","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","afterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_previousMapHead","_changesHead","_changesTail","_nextChanged","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","_forEach","newSeqRecord","_maybeAddToChanges","_removeFromSeq","KeyValueChangeRecord","_addToAdditions","_isInRemovals","_removeFromRemovals","lastRecord","rec","_addToChanges","factories","copied","extend","iterable","kv","wrapped","ValueUnwrapper","hasWrappedValue","unwrap","reset","SimpleChange","isFirstChange","keyValDiff","iterableDiff","RenderDebugInfo","RootRenderer","SecurityContext","ViewType","Sanitizer","__extends$6","currValue","msg","ViewWrappedError","source","ViewDestroyedError","details","ViewUtils","sanitizer","_nextCompTypeId","renderComponent","renderComponentType","EMPTY_ARRAY","EMPTY_MAP","InlineArray0","_v0","_v1","_v2","_v3","_v4","_v5","_v6","_v7","_v8","_v9","_v10","_v11","_v12","_v13","_v14","_v15","_values","EMPTY_INLINE_ARRAY","view_utils","freeze","__extends$5","ComponentRef","ComponentRef_","_index","_parentView","_nativeElement","_component","ref","detachAndDestroy","hostView","ComponentFactory","_viewClass","_componentType","projectableNodes","vu","createHostView","__extends$7","NoComponentFactoryError","component","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_factories","componentType","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","__extends$8","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","_hasPendingMicrotasks","_hasPendingMacrotasks","_isStable","_nesting","_onUnstable","_onMicrotaskEmpty","_onStable","_onErrorEvents","assertZonePatched","outer","fork","forkInnerZoneWithAngularBehavior","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runGuarded","runOutsideAngular","checkStable","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","setHasMicrotask","microTask","setHasMacrotask","macroTask","onHandleError","triggerError","hasMicrotasks","hasMacrotasks","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","onUnstable","onStable","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","isStable","hasPendingMacrotasks","whenStable","getPendingRequestCount","findBindings","using","exactMatch","findProviders","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","bootstrapModuleFactory","moduleFactory","bootstrapModule","compilerOptions","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","_bootstrapModuleFactoryWithZone","ngZone","ngZoneInjector","moduleRef","exceptionHandler","onError","initStatus","donePromise","_moduleDoBootstrap","_bootstrapModuleWithZone","componentFactoryCallback","compilerFactory","compiler","createCompiler","appRef","ApplicationRef","bootstrapFactories","compFactory","instance","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_testabilityRegistry","_testability","_bootstrapListeners","_rootComponents","_rootComponentTypes","_changeDetectorRefs","_runningTick","_enforceNoNewChanges","onMicrotaskEmpty","tick","registerChangeDetector","changeDetector","unregisterChangeDetector","componentOrFactory","componentFactory","compRef","_unloadComponent","location","_loadComponent","componentRef","changeDetectorRef","listeners","_tickScope","detector","detectChanges","checkNoChanges","__extends$9","NgModuleRef","NgModuleFactory","_injectorClass","_moduleType","parentInjector","_UNDEFINED","NgModuleInjector","createInternal","getInternal","destroyInternal","NgModuleFactoryLoader","QueryList","_dirty","_results","_emitter","filter","toArray","notifyOnChanges","setDirty","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","__extends$10","TemplateRef_","_nodeIndex","createEmbeddedViewInternal","ViewContainerRef_","_element","_createComponentInContainerScope","_insertScope","_removeScope","_detachScope","nestedViews","views","elementRef","insert","createComponent","contextInjector","viewRef_","attachView","internalView","moveView","detachView","detach","__extends$11","ViewRef","EmbeddedViewRef","ViewRef_","_originalMode","cdMode","flatRootNodes","markPathToRootAsCheckOnce","Detached","reattach","__extends$12","EventListener","DebugNode","_debugInfo","addChild","references","providerTokens","attributes","classes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","previousChildren","nextChildren","newChild","results","queryAll","queryAllNodes","triggerEventHandler","eventObj","_CORE_PLATFORM_PROVIDERS","platformCore","TRANSLATIONS","TRANSLATIONS_FORMAT","ApplicationModule","ANY_STATE","DEFAULT_STATE","EMPTY_STATE","AnimationGroupPlayer","_players","_onDoneFns","_onStartFns","_finished","_started","parentPlayer","total","_onFinish","onDone","onStart","hasStarted","pause","restart","finish","setPosition","getPosition","min","AnimationKeyframe","AnimationPlayer","NoOpAnimationPlayer","AnimationSequencePlayer","_currentIndex","_onNext","_activePlayer","__extends$13","definitions","AnimationStateMetadata","AnimationMetadata","timings","AnimationWithStepsMetadata","_steps","AnimationStyles","AnimationTransitionEvent","fromState","toState","totalTime","phaseName","AnimationTransition","_player","_fromState","_toState","_totalTime","_createEvent","event","DebugDomRootRenderer","_delegate","componentProto","DebugDomRenderer","selectorOrNode","nativeEl","debugEl","createViewRoot","createTemplateAnchor","comment","createText","projectNodes","nodes","debugParent","debugElement_1","attachViewAfter","viewRootNodes","debugNode","debugViewRootNodes_1","rootNode","destroyView","viewAllNodes","renderElement","setElementProperty","propertyName","propertyValue","attributeName","attributeValue","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode","startingStyles","duration","delay","easing","StaticNodeDebugInfo","componentToken","refTokens","DebugContext","_tplRow","_tplCol","staticNodeDebugInfos","staticNodeInfo","_staticNodeInfo","componentView","parentView","COMPONENT","allNodes","varValues","refs_1","refName","varValue","refToken","injectorGet","ViewAnimationMap","_map","_allPlayers","animationName","playersByAnimation","findAllPlayersByElement","existingEntry","getAllPlayers","AnimationViewContext","onAllActiveAnimationsDone","activeAnimationPlayers","queueAnimation","cancelActiveAnimation","removeAllAnimations","__extends$15","ElementInjector","__extends$14","_scope_check","EMPTY_CONTEXT$1","UNDEFINED$1","AppView","clazz","viewUtils","parentIndex","declaredViewContainer","numberOfChecks","HOST","_directRenderer","directRenderer","_animationContext","Destroyed","hostInjector","_hasExternalHostElement","_hostInjector","_hostProjectableNodes","templateNodeIndex","lastRootNode","dirtyParentQueriesInternal","nodeIndex","injectorGetInternal","notFoundResult","detachInternal","_renderDetach","projectedViews","visitRootNodesInternal","attachAfter","prevView","_renderAttach","moveAfter","prevNode","nextSibling","insertBefore","appendChild","ngContentIndex","visitProjectedNodes","cb","EMBEDDED","visitProjectableNodesInternal","Checked","Errored","throwDestroyedError","detectChangesInternal","CheckOnce","markAsCheckOnce","eventHandler","DebugAppView","_currentDebugContext","_resetDebug","_rethrowWithContext","debug","rowNum","colNum","superHandler","ViewContainer","detectChangesInNestedViews","destroyNestedViews","visitNestedViewRootNodes","mapNestedViews","nestedViewClass","nestedView","projectedView","viewIndex","3","Observable_1","Subscriber_1","Subscription_1","ObjectUnsubscribedError_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","destination","Subscriber","observers","closed","isStopped","hasError","thrownError","$$rxSubscriber","lift","operator","subject","AnonymousSubject","ObjectUnsubscribedError","copy","subscriber","Subscription","EMPTY","SubjectSubscription","asObservable","observable","Observable","4","root_1","toSubscriber_1","observable_1","_isScalar","observerOrNext","sink","toSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","PromiseCtor","root","Rx","reject","$$observable","5","objectTypes","boolean","function","object","number","string","self","freeGlobal","6","nextOrObserver","7","isFunction_1","Observer_1","destinationOrNext","empty","SafeSubscriber","_error","_complete","isFunction","__tryOrSetError","__tryOrUnsub","_unsubscribe","8","x","9","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","errors","hasErrors","_subscriptions","trial","tryCatch","errorObject","sub","isObject","UnsubscriptionError","teardown","subscriptions","subscriptionIndex","10","11","12","tryCatcher","tryCatchTarget","13","14","15","16","for","17","getSymbolObservable","18","19","subscriberIndex","254","core_1","common_1","paginate_pipe_1","pagination_service_1","pagination_controls_component_1","pagination_controls_directive_1","pagination_service_2","PaginationService","pagination_controls_component_2","PaginationControlsComponent","pagination_controls_directive_2","PaginationControlsDirective","paginate_pipe_2","PaginatePipe","Ng2PaginationModule","255","LARGE_NUMBER","MAX_SAFE_INTEGER","service","_id","defaultId","serverSideMode","totalItems","createInstance","perPage","itemsPerPage","register","currentPage","isIdentical","stateIsIdentical","saveState","checkConfig","required","missing","isMetaDataIdentical","every","256","instances","DEFAULT_ID","changed","updateInstance","getCurrentPage","setCurrentPage","page","maxPage","ceil","setTotalItems","setItemsPerPage","getInstance","clone","257","template_1","maxSize","pageChange","_directionLinks","_autoHide","DEFAULT_TEMPLATE","DEFAULT_STYLES","OnPush","directionLinks","autoHide","258","259","pages","changeSub","updatePageLinks","ngOnInit","setCurrent","getCurrent","isFirstPage","isLastPage","getLastPage","inst","correctedCurrentPage","outOfBoundCorrection","createPageArray","totalPages","paginationRange","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","label","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded"],"mappings":"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aACA2Z,aACAwlB;AACAD,mBACAE,2BACArB,wBACAkB,qBACA/sB,wDACAM,oDACAM,4BACAU,wBACAK,0BACAJ,gDACAiO,0BACAqe,mBACAnC,aACAC,iBACAC,eACAlqB,mBACAkO,8BACArvB,oBACA4tC,uBAGAxlD,GAAAgyB,8BACAhyB,EAAA8yB,8BACA9yB,EAAAizB,gCACAjzB,EAAA2yB,wBACA3yB,EAAAmyB,eACAnyB,EAAA06C,kBACA16C,EAAA4xB,8BACA5xB,EAAA+xB,oBACA/xB,EAAAuyB,4CACAvyB,EAAA4mC,UACA5mC,EAAA+mC,oBACA/mC,EAAAqyB,wBACAryB,EAAA8mC,0BACA9mC,EAAAomC,mBACApmC,EAAAqmC,yBACArmC,EAAA60B,gBACA70B,EAAAqhD,aACArhD,EAAAs0B,kCACAt0B,EAAAg1B,0BACAh1B,EAAAi3C,eACAj3C,EAAAq4C,uBACAr4C,EAAAyxB,0CACAzxB,EAAA4iD,gBACA5iD,EAAA6iD,uBACA7iD,EAAA8O,aACA9O,EAAA8iD,qBACA9iD,EAAAszC,kBACAtzC,EAAAuzC,YACAvzC,EAAAyzC,qBACAzzC,EAAA0zC,mBACA1zC,EAAAinB,QACAjnB,EAAA0K,gBACA1K,EAAAglC,gBACAhlC,EAAAmlD,4BACAnlD,EAAAqkD,mBACArkD,EAAAwvC,aACAxvC,EAAAk5B,+BACAl5B,EAAA8W,YACA9W,EAAAy5B,eACAz5B,EAAAo5B,kBACAp5B,EAAAm5B,QACAn5B,EAAA25B,YACA35B,EAAA05B,eACA15B,EAAAm6B,YACAn6B,EAAAkR,YACAlR,EAAA06B,cACA16B,EAAA26B,eACA36B,EAAAyR,QACAzR,EAAAy6B,SACAz6B,EAAAma,OACAna,EAAAk7B,sBACAl7B,EAAAi7B,mBACAj7B,EAAAo7B,mBACAp7B,EAAAm7B,gBACAn7B,EAAA+6B,UACA/6B,EAAAg7B,YACAh7B,EAAA86B,YACA96B,EAAA66B,SACA76B,EAAAq7B,yBACAr7B,EAAAs7B,mBACAt7B,EAAAsf,WACAtf,EAAAqhB,YACArhB,EAAA8jB,sBACA9jB,E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","file":"ng2-pagination.3e0bfc8166cd963b91e8.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(254));\r\n\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.0\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(2)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n\t}(this, function (exports,_angular_core) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * This class should not be used directly by an application developer. Instead, use\n\t     * {@link Location}.\n\t     *\n\t     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n\t     * agnostic.\n\t     * This means that we can have different implementation of `PlatformLocation` for the different\n\t     * platforms\n\t     * that angular supports. For example, the default `PlatformLocation` is {@link\n\t     * BrowserPlatformLocation},\n\t     * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.\n\t     *\n\t     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n\t     * when\n\t     * they need to interact with the DOM apis like pushState, popState, etc...\n\t     *\n\t     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n\t     * by\n\t     * the {@link Router} in order to navigate between routes. Since all interactions between {@link\n\t     * Router} /\n\t     * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n\t     * class\n\t     * they are all platform independent.\n\t     *\n\t     * @stable\n\t     */\n\t    var PlatformLocation = (function () {\n\t        function PlatformLocation() {\n\t        }\n\t        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return PlatformLocation;\n\t    }());\n\t\n\t    /**\n\t     * `LocationStrategy` is responsible for representing and reading route state\n\t     * from the browser's URL. Angular provides two strategies:\n\t     * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).\n\t     *\n\t     * This is used under the hood of the {@link Location} service.\n\t     *\n\t     * Applications should use the {@link Router} or {@link Location} services to\n\t     * interact with application route state.\n\t     *\n\t     * For instance, {@link HashLocationStrategy} produces URLs like\n\t     * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n\t     * `http://example.com/foo` as an equivalent URL.\n\t     *\n\t     * See these two classes for more.\n\t     *\n\t     * @stable\n\t     */\n\t    var LocationStrategy = (function () {\n\t        function LocationStrategy() {\n\t        }\n\t        return LocationStrategy;\n\t    }());\n\t    /**\n\t     * The `APP_BASE_HREF` token represents the base href to be used with the\n\t     * {@link PathLocationStrategy}.\n\t     *\n\t     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n\t     * representing the URL prefix that should be preserved when generating and recognizing\n\t     * URLs.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {APP_BASE_HREF} from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (false) {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var _global = globalScope;\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    _global.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    function isDate(obj) {\n\t        return obj instanceof Date && !isNaN(obj.valueOf());\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    var NumberWrapper = (function () {\n\t        function NumberWrapper() {\n\t        }\n\t        NumberWrapper.parseIntAutoRadix = function (text) {\n\t            var result = parseInt(text);\n\t            if (isNaN(result)) {\n\t                throw new Error('Invalid integer literal when parsing ' + text);\n\t            }\n\t            return result;\n\t        };\n\t        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n\t        return NumberWrapper;\n\t    }());\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    var _symbolIterator = null;\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (globalScope.Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        Map.prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t\n\t    /**\n\t     * `Location` is a service that applications can use to interact with a browser's URL.\n\t     * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n\t     * to the URL's path or the URL's hash segment.\n\t     *\n\t     * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n\t     * `Location` only if you need to interact with or create normalized URLs outside of\n\t     * routing.\n\t     *\n\t     * `Location` is responsible for normalizing the URL against the application's base href.\n\t     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n\t     * trailing slash:\n\t     * - `/my/app/user/123` is normalized\n\t     * - `my/app/user/123` **is not** normalized\n\t     * - `/my/app/user/123/` **is not** normalized\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component} from '@angular/core';\n\t     * import {Location} from '@angular/common';\n\t     *\n\t     * @Component({selector: 'app-component'})\n\t     * class AppCmp {\n\t     *   constructor(location: Location) {\n\t     *     location.go('/foo');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var Location = (function () {\n\t        function Location(platformStrategy) {\n\t            var _this = this;\n\t            /** @internal */\n\t            this._subject = new _angular_core.EventEmitter();\n\t            this._platformStrategy = platformStrategy;\n\t            var browserBaseHref = this._platformStrategy.getBaseHref();\n\t            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n\t            this._platformStrategy.onPopState(function (ev) {\n\t                _this._subject.emit({\n\t                    'url': _this.path(true),\n\t                    'pop': true,\n\t                    'type': ev.type,\n\t                });\n\t            });\n\t        }\n\t        /**\n\t         * Returns the normalized URL path.\n\t         */\n\t        // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n\t        // removed.\n\t        Location.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            return this.normalize(this._platformStrategy.path(includeHash));\n\t        };\n\t        /**\n\t         * Normalizes the given path and compares to the current normalized path.\n\t         */\n\t        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the normalized URL path without leading or\n\t         * trailing slashes.\n\t         */\n\t        Location.prototype.normalize = function (url) {\n\t            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n\t        };\n\t        /**\n\t         * Given a string representing a URL, returns the platform-specific external URL path.\n\t         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n\t         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n\t         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n\t         */\n\t        Location.prototype.prepareExternalUrl = function (url) {\n\t            if (url.length > 0 && !url.startsWith('/')) {\n\t                url = '/' + url;\n\t            }\n\t            return this._platformStrategy.prepareExternalUrl(url);\n\t        };\n\t        // TODO: rename this method to pushState\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n\t         * new item onto the platform's history.\n\t         */\n\t        Location.prototype.go = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.pushState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Changes the browsers URL to the normalized version of the given URL, and replaces\n\t         * the top item on the platform's history stack.\n\t         */\n\t        Location.prototype.replaceState = function (path, query) {\n\t            if (query === void 0) { query = ''; }\n\t            this._platformStrategy.replaceState(null, '', path, query);\n\t        };\n\t        /**\n\t         * Navigates forward in the platform's history.\n\t         */\n\t        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n\t        /**\n\t         * Navigates back in the platform's history.\n\t         */\n\t        Location.prototype.back = function () { this._platformStrategy.back(); };\n\t        /**\n\t         * Subscribe to the platform's `popState` events.\n\t         */\n\t        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n\t            if (onThrow === void 0) { onThrow = null; }\n\t            if (onReturn === void 0) { onReturn = null; }\n\t            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n\t        };\n\t        /**\n\t         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n\t         * is.\n\t         */\n\t        Location.normalizeQueryParams = function (params) {\n\t            return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n\t        };\n\t        /**\n\t         * Given 2 parts of a url, join them with a slash if needed.\n\t         */\n\t        Location.joinWithSlash = function (start, end) {\n\t            if (start.length == 0) {\n\t                return end;\n\t            }\n\t            if (end.length == 0) {\n\t                return start;\n\t            }\n\t            var slashes = 0;\n\t            if (start.endsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (end.startsWith('/')) {\n\t                slashes++;\n\t            }\n\t            if (slashes == 2) {\n\t                return start + end.substring(1);\n\t            }\n\t            if (slashes == 1) {\n\t                return start + end;\n\t            }\n\t            return start + '/' + end;\n\t        };\n\t        /**\n\t         * If url has a trailing slash, remove it, otherwise return url as is.\n\t         */\n\t        Location.stripTrailingSlash = function (url) {\n\t            if (/\\/$/g.test(url)) {\n\t                url = url.substring(0, url.length - 1);\n\t            }\n\t            return url;\n\t        };\n\t        Location.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Location.ctorParameters = [\n\t            { type: LocationStrategy, },\n\t        ];\n\t        return Location;\n\t    }());\n\t    function _stripBaseHref(baseHref, url) {\n\t        if (baseHref.length > 0 && url.startsWith(baseHref)) {\n\t            return url.substring(baseHref.length);\n\t        }\n\t        return url;\n\t    }\n\t    function _stripIndexHtml(url) {\n\t        if (/\\/index.html$/g.test(url)) {\n\t            // '/index.html'.length == 11\n\t            return url.substring(0, url.length - 11);\n\t        }\n\t        return url;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `HashLocationStrategy` is a {@link LocationStrategy} used to configure the\n\t     * {@link Location} service to represent its state in the\n\t     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n\t     * of the browser's URL.\n\t     *\n\t     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n\t     * `example.com#/foo`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * import {Component, NgModule} from '@angular/core';\n\t     * import {\n\t     *   LocationStrategy,\n\t     *   HashLocationStrategy\n\t     * } from '@angular/common';\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}]\n\t     * })\n\t     * class AppModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var HashLocationStrategy = (function (_super) {\n\t        __extends(HashLocationStrategy, _super);\n\t        function HashLocationStrategy(_platformLocation, _baseHref) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            this._baseHref = '';\n\t            if (isPresent(_baseHref)) {\n\t                this._baseHref = _baseHref;\n\t            }\n\t        }\n\t        HashLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        HashLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            // the hash value is always prefixed with a `#`\n\t            // and if it is empty then it will stay empty\n\t            var path = this._platformLocation.hash;\n\t            if (!isPresent(path))\n\t                path = '#';\n\t            return path.length > 0 ? path.substring(1) : path;\n\t        };\n\t        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            var url = Location.joinWithSlash(this._baseHref, internal);\n\t            return url.length > 0 ? ('#' + url) : url;\n\t        };\n\t        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n\t            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.pushState(state, title, url);\n\t        };\n\t        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n\t            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n\t            if (url.length == 0) {\n\t                url = this._platformLocation.pathname;\n\t            }\n\t            this._platformLocation.replaceState(state, title, url);\n\t        };\n\t        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        HashLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        HashLocationStrategy.ctorParameters = [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ];\n\t        return HashLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * `PathLocationStrategy` is a {@link LocationStrategy} used to configure the\n\t     * {@link Location} service to represent its state in the\n\t     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n\t     * browser's URL.\n\t     *\n\t     * `PathLocationStrategy` is the default binding for {@link LocationStrategy}\n\t     * provided in {@link ROUTER_PROVIDERS}.\n\t     *\n\t     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n\t     * or add a base element to the document. This URL prefix that will be preserved\n\t     * when generating and recognizing URLs.\n\t     *\n\t     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n\t     * `location.go('/foo')`, the browser's URL will become\n\t     * `example.com/my/app/foo`.\n\t     *\n\t     * @stable\n\t     */\n\t    var PathLocationStrategy = (function (_super) {\n\t        __extends$1(PathLocationStrategy, _super);\n\t        function PathLocationStrategy(_platformLocation, href) {\n\t            _super.call(this);\n\t            this._platformLocation = _platformLocation;\n\t            if (isBlank(href)) {\n\t                href = this._platformLocation.getBaseHrefFromDOM();\n\t            }\n\t            if (isBlank(href)) {\n\t                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n\t            }\n\t            this._baseHref = href;\n\t        }\n\t        PathLocationStrategy.prototype.onPopState = function (fn) {\n\t            this._platformLocation.onPopState(fn);\n\t            this._platformLocation.onHashChange(fn);\n\t        };\n\t        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n\t        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n\t            return Location.joinWithSlash(this._baseHref, internal);\n\t        };\n\t        PathLocationStrategy.prototype.path = function (includeHash) {\n\t            if (includeHash === void 0) { includeHash = false; }\n\t            var pathname = this._platformLocation.pathname +\n\t                Location.normalizeQueryParams(this._platformLocation.search);\n\t            var hash = this._platformLocation.hash;\n\t            return hash && includeHash ? \"\" + pathname + hash : pathname;\n\t        };\n\t        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n\t            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.pushState(state, title, externalUrl);\n\t        };\n\t        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n\t            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n\t            this._platformLocation.replaceState(state, title, externalUrl);\n\t        };\n\t        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n\t        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n\t        PathLocationStrategy.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PathLocationStrategy.ctorParameters = [\n\t            { type: PlatformLocation, },\n\t            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n\t        ];\n\t        return PathLocationStrategy;\n\t    }(LocationStrategy));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgLocalization = (function () {\n\t        function NgLocalization() {\n\t        }\n\t        return NgLocalization;\n\t    }());\n\t    /**\n\t     * Returns the plural category for a given value.\n\t     * - \"=value\" when the case exists,\n\t     * - the plural category otherwise\n\t     *\n\t     * @internal\n\t     */\n\t    function getPluralCategory(value, cases, ngLocalization) {\n\t        var nbCase = \"=\" + value;\n\t        return cases.indexOf(nbCase) > -1 ? nbCase : ngLocalization.getPluralCategory(value);\n\t    }\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgLocaleLocalization = (function (_super) {\n\t        __extends$2(NgLocaleLocalization, _super);\n\t        function NgLocaleLocalization(_locale) {\n\t            _super.call(this);\n\t            this._locale = _locale;\n\t        }\n\t        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n\t            var plural = getPluralCase(this._locale, value);\n\t            switch (plural) {\n\t                case Plural.Zero:\n\t                    return 'zero';\n\t                case Plural.One:\n\t                    return 'one';\n\t                case Plural.Two:\n\t                    return 'two';\n\t                case Plural.Few:\n\t                    return 'few';\n\t                case Plural.Many:\n\t                    return 'many';\n\t                default:\n\t                    return 'other';\n\t            }\n\t        };\n\t        NgLocaleLocalization.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        NgLocaleLocalization.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return NgLocaleLocalization;\n\t    }(NgLocalization));\n\t    // This is generated code DO NOT MODIFY\n\t    // see angular2/script/cldr/gen_plural_rules.js\n\t    /** @experimental */\n\t    var Plural;\n\t    (function (Plural) {\n\t        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n\t        Plural[Plural[\"One\"] = 1] = \"One\";\n\t        Plural[Plural[\"Two\"] = 2] = \"Two\";\n\t        Plural[Plural[\"Few\"] = 3] = \"Few\";\n\t        Plural[Plural[\"Many\"] = 4] = \"Many\";\n\t        Plural[Plural[\"Other\"] = 5] = \"Other\";\n\t    })(Plural || (Plural = {}));\n\t    /**\n\t     * Returns the plural case based on the locale\n\t     *\n\t     * @experimental\n\t     */\n\t    function getPluralCase(locale, nLike) {\n\t        // TODO(vicb): lazy compute\n\t        if (typeof nLike === 'string') {\n\t            nLike = parseInt(nLike, 10);\n\t        }\n\t        var n = nLike;\n\t        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n\t        var i = Math.floor(Math.abs(n));\n\t        var v = nDecimal.length;\n\t        var f = parseInt(nDecimal, 10);\n\t        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\t        var lang = locale.split('-')[0].toLowerCase();\n\t        switch (lang) {\n\t            case 'af':\n\t            case 'asa':\n\t            case 'az':\n\t            case 'bem':\n\t            case 'bez':\n\t            case 'bg':\n\t            case 'brx':\n\t            case 'ce':\n\t            case 'cgg':\n\t            case 'chr':\n\t            case 'ckb':\n\t            case 'ee':\n\t            case 'el':\n\t            case 'eo':\n\t            case 'es':\n\t            case 'eu':\n\t            case 'fo':\n\t            case 'fur':\n\t            case 'gsw':\n\t            case 'ha':\n\t            case 'haw':\n\t            case 'hu':\n\t            case 'jgo':\n\t            case 'jmc':\n\t            case 'ka':\n\t            case 'kk':\n\t            case 'kkj':\n\t            case 'kl':\n\t            case 'ks':\n\t            case 'ksb':\n\t            case 'ky':\n\t            case 'lb':\n\t            case 'lg':\n\t            case 'mas':\n\t            case 'mgo':\n\t            case 'ml':\n\t            case 'mn':\n\t            case 'nb':\n\t            case 'nd':\n\t            case 'ne':\n\t            case 'nn':\n\t            case 'nnh':\n\t            case 'nyn':\n\t            case 'om':\n\t            case 'or':\n\t            case 'os':\n\t            case 'ps':\n\t            case 'rm':\n\t            case 'rof':\n\t            case 'rwk':\n\t            case 'saq':\n\t            case 'seh':\n\t            case 'sn':\n\t            case 'so':\n\t            case 'sq':\n\t            case 'ta':\n\t            case 'te':\n\t            case 'teo':\n\t            case 'tk':\n\t            case 'tr':\n\t            case 'ug':\n\t            case 'uz':\n\t            case 'vo':\n\t            case 'vun':\n\t            case 'wae':\n\t            case 'xog':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'agq':\n\t            case 'bas':\n\t            case 'cu':\n\t            case 'dav':\n\t            case 'dje':\n\t            case 'dua':\n\t            case 'dyo':\n\t            case 'ebu':\n\t            case 'ewo':\n\t            case 'guz':\n\t            case 'kam':\n\t            case 'khq':\n\t            case 'ki':\n\t            case 'kln':\n\t            case 'kok':\n\t            case 'ksf':\n\t            case 'lrc':\n\t            case 'lu':\n\t            case 'luo':\n\t            case 'luy':\n\t            case 'mer':\n\t            case 'mfe':\n\t            case 'mgh':\n\t            case 'mua':\n\t            case 'mzn':\n\t            case 'nmg':\n\t            case 'nus':\n\t            case 'qu':\n\t            case 'rn':\n\t            case 'rw':\n\t            case 'sbp':\n\t            case 'twq':\n\t            case 'vai':\n\t            case 'yav':\n\t            case 'yue':\n\t            case 'zgh':\n\t            case 'ak':\n\t            case 'ln':\n\t            case 'mg':\n\t            case 'pa':\n\t            case 'ti':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'am':\n\t            case 'as':\n\t            case 'bn':\n\t            case 'fa':\n\t            case 'gu':\n\t            case 'hi':\n\t            case 'kn':\n\t            case 'mr':\n\t            case 'zu':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ar':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'ast':\n\t            case 'ca':\n\t            case 'de':\n\t            case 'en':\n\t            case 'et':\n\t            case 'fi':\n\t            case 'fy':\n\t            case 'gl':\n\t            case 'it':\n\t            case 'nl':\n\t            case 'sv':\n\t            case 'sw':\n\t            case 'ur':\n\t            case 'yi':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'be':\n\t                if (n % 10 === 1 && !(n % 100 === 11))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n\t                    !(n % 100 >= 12 && n % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n\t                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'br':\n\t                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n\t                    return Plural.One;\n\t                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n\t                    return Plural.Two;\n\t                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n\t                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n\t                        n % 100 >= 90 && n % 100 <= 99))\n\t                    return Plural.Few;\n\t                if (!(n === 0) && n % 1e6 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'bs':\n\t            case 'hr':\n\t            case 'sr':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14) ||\n\t                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n\t                        !(f % 100 >= 12 && f % 100 <= 14))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'cs':\n\t            case 'sk':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'cy':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === 3)\n\t                    return Plural.Few;\n\t                if (n === 6)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'da':\n\t                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'dsb':\n\t            case 'hsb':\n\t                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n\t                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ff':\n\t            case 'fr':\n\t            case 'hy':\n\t            case 'kab':\n\t                if (i === 0 || i === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'fil':\n\t                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n\t                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n\t                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ga':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && n >= 3 && n <= 6)\n\t                    return Plural.Few;\n\t                if (n === Math.floor(n) && n >= 7 && n <= 10)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'gd':\n\t                if (n === 1 || n === 11)\n\t                    return Plural.One;\n\t                if (n === 2 || n === 12)\n\t                    return Plural.Two;\n\t                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'gv':\n\t                if (v === 0 && i % 10 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 &&\n\t                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n\t                    return Plural.Few;\n\t                if (!(v === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'he':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (i === 2 && v === 0)\n\t                    return Plural.Two;\n\t                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'is':\n\t                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ksh':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'kw':\n\t            case 'naq':\n\t            case 'se':\n\t            case 'smn':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 2)\n\t                    return Plural.Two;\n\t                return Plural.Other;\n\t            case 'lag':\n\t                if (n === 0)\n\t                    return Plural.Zero;\n\t                if ((i === 0 || i === 1) && !(n === 0))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'lt':\n\t                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.One;\n\t                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n\t                    !(n % 100 >= 11 && n % 100 <= 19))\n\t                    return Plural.Few;\n\t                if (!(f === 0))\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'lv':\n\t            case 'prg':\n\t                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n\t                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n\t                    return Plural.Zero;\n\t                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n\t                    !(v === 2) && f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mk':\n\t                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'mt':\n\t                if (n === 1)\n\t                    return Plural.One;\n\t                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n\t                    return Plural.Few;\n\t                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pl':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'pt':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'ro':\n\t                if (i === 1 && v === 0)\n\t                    return Plural.One;\n\t                if (!(v === 0) || n === 0 ||\n\t                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'ru':\n\t            case 'uk':\n\t                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n\t                    return Plural.One;\n\t                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n\t                    !(i % 100 >= 12 && i % 100 <= 14))\n\t                    return Plural.Few;\n\t                if (v === 0 && i % 10 === 0 ||\n\t                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n\t                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n\t                    return Plural.Many;\n\t                return Plural.Other;\n\t            case 'shi':\n\t                if (i === 0 || n === 1)\n\t                    return Plural.One;\n\t                if (n === Math.floor(n) && n >= 2 && n <= 10)\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'si':\n\t                if (n === 0 || n === 1 || i === 0 && f === 1)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            case 'sl':\n\t                if (v === 0 && i % 100 === 1)\n\t                    return Plural.One;\n\t                if (v === 0 && i % 100 === 2)\n\t                    return Plural.Two;\n\t                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n\t                    return Plural.Few;\n\t                return Plural.Other;\n\t            case 'tzm':\n\t                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n\t                    return Plural.One;\n\t                return Plural.Other;\n\t            default:\n\t                return Plural.Other;\n\t        }\n\t    }\n\t\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds and removes CSS classes on an HTML element.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n\t     *\n\t     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n\t     * - `string` - the CSS classes listed in the string (space delimited) are added,\n\t     * - `Array` - the CSS classes declared as Array elements are added,\n\t     * - `Object` - keys are CSS classes that get added when the expression given in the value\n\t     *              evaluates to a truthy value, otherwise they are removed.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgClass = (function () {\n\t        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n\t            this._iterableDiffers = _iterableDiffers;\n\t            this._keyValueDiffers = _keyValueDiffers;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t            this._initialClasses = [];\n\t        }\n\t        Object.defineProperty(NgClass.prototype, \"klass\", {\n\t            set: function (v) {\n\t                this._applyInitialClasses(true);\n\t                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n\t                this._applyInitialClasses(false);\n\t                this._applyClasses(this._rawClass, false);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n\t            set: function (v) {\n\t                this._cleanupClasses(this._rawClass);\n\t                this._iterableDiffer = null;\n\t                this._keyValueDiffer = null;\n\t                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\t                if (this._rawClass) {\n\t                    if (isListLikeIterable(this._rawClass)) {\n\t                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                    else {\n\t                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n\t                    }\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgClass.prototype.ngDoCheck = function () {\n\t            if (this._iterableDiffer) {\n\t                var changes = this._iterableDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyIterableChanges(changes);\n\t                }\n\t            }\n\t            else if (this._keyValueDiffer) {\n\t                var changes = this._keyValueDiffer.diff(this._rawClass);\n\t                if (changes) {\n\t                    this._applyKeyValueChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n\t            this._applyClasses(rawClassVal, true);\n\t            this._applyInitialClasses(false);\n\t        };\n\t        NgClass.prototype._applyKeyValueChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n\t            changes.forEachRemovedItem(function (record) {\n\t                if (record.previousValue) {\n\t                    _this._toggleClass(record.key, false);\n\t                }\n\t            });\n\t        };\n\t        NgClass.prototype._applyIterableChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachAddedItem(function (record) {\n\t                if (typeof record.item === 'string') {\n\t                    _this._toggleClass(record.item, true);\n\t                }\n\t                else {\n\t                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n\t                }\n\t            });\n\t            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n\t        };\n\t        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n\t            var _this = this;\n\t            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t        };\n\t        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n\t            var _this = this;\n\t            if (rawClassVal) {\n\t                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n\t                    rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n\t                }\n\t                else {\n\t                    Object.keys(rawClassVal).forEach(function (klass) {\n\t                        if (isPresent(rawClassVal[klass]))\n\t                            _this._toggleClass(klass, !isCleanup);\n\t                    });\n\t                }\n\t            }\n\t        };\n\t        NgClass.prototype._toggleClass = function (klass, enabled) {\n\t            var _this = this;\n\t            klass = klass.trim();\n\t            if (klass) {\n\t                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n\t            }\n\t        };\n\t        NgClass.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgClass.ctorParameters = [\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ];\n\t        NgClass.propDecorators = {\n\t            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n\t            'ngClass': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgClass;\n\t    }());\n\t\n\t    var NgForRow = (function () {\n\t        function NgForRow($implicit, index, count) {\n\t            this.$implicit = $implicit;\n\t            this.index = index;\n\t            this.count = count;\n\t        }\n\t        Object.defineProperty(NgForRow.prototype, \"first\", {\n\t            get: function () { return this.index === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"last\", {\n\t            get: function () { return this.index === this.count - 1; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"even\", {\n\t            get: function () { return this.index % 2 === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForRow.prototype, \"odd\", {\n\t            get: function () { return !this.even; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgForRow;\n\t    }());\n\t    /**\n\t     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n\t     * each instantiated template inherits from the outer context with the given loop variable set\n\t     * to the current item from the iterable.\n\t     *\n\t     * ### Local Variables\n\t     *\n\t     * `NgFor` provides several exported values that can be aliased to local variables:\n\t     *\n\t     * * `index` will be set to the current loop iteration for each template context.\n\t     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n\t     *   iteration.\n\t     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n\t     *   iteration.\n\t     * * `even` will be set to a boolean value indicating whether this item has an even index.\n\t     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n\t     *\n\t     * ### Change Propagation\n\t     *\n\t     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n\t     *\n\t     * * When an item is added, a new instance of the template is added to the DOM.\n\t     * * When an item is removed, its template instance is removed from the DOM.\n\t     * * When items are reordered, their respective templates are reordered in the DOM.\n\t     * * Otherwise, the DOM element for that item will remain the same.\n\t     *\n\t     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n\t     * those changes in the DOM. This has important implications for animations and any stateful\n\t     * controls\n\t     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n\t     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n\t     * as user input.\n\t     *\n\t     * It is possible for the identities of elements in the iterator to change while the data does not.\n\t     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n\t     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n\t     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n\t     * elements were deleted and all new elements inserted). This is an expensive operation and should\n\t     * be avoided if possible.\n\t     *\n\t     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n\t     * `trackBy` takes a function which has two arguments: `index` and `item`.\n\t     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n\t     *\n\t     * With `<template>` element:\n\t     *\n\t     * ```\n\t     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n\t     *   <li>...</li>\n\t     * </template>\n\t     * ```\n\t     *\n\t     * ### Example\n\t     *\n\t     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n\t     * example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgFor = (function () {\n\t        function NgFor(_viewContainer, _template, _differs, _cdr) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._differs = _differs;\n\t            this._cdr = _cdr;\n\t            this._differ = null;\n\t        }\n\t        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n\t            set: function (value) {\n\t                if (value) {\n\t                    this._template = value;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgFor.prototype.ngOnChanges = function (changes) {\n\t            if ('ngForOf' in changes) {\n\t                // React on ngForOf changes only once all inputs have been initialized\n\t                var value = changes['ngForOf'].currentValue;\n\t                if (!this._differ && value) {\n\t                    try {\n\t                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n\t                    }\n\t                    catch (e) {\n\t                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        NgFor.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var changes = this._differ.diff(this.ngForOf);\n\t                if (changes)\n\t                    this._applyChanges(changes);\n\t            }\n\t        };\n\t        NgFor.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            var insertTuples = [];\n\t            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n\t                if (item.previousIndex == null) {\n\t                    var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n\t                    var tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t                else if (currentIndex == null) {\n\t                    _this._viewContainer.remove(adjustedPreviousIndex);\n\t                }\n\t                else {\n\t                    var view = _this._viewContainer.get(adjustedPreviousIndex);\n\t                    _this._viewContainer.move(view, currentIndex);\n\t                    var tuple = new RecordViewTuple(item, view);\n\t                    insertTuples.push(tuple);\n\t                }\n\t            });\n\t            for (var i = 0; i < insertTuples.length; i++) {\n\t                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n\t            }\n\t            for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n\t                var viewRef = this._viewContainer.get(i);\n\t                viewRef.context.index = i;\n\t                viewRef.context.count = ilen;\n\t            }\n\t            changes.forEachIdentityChange(function (record) {\n\t                var viewRef = _this._viewContainer.get(record.currentIndex);\n\t                viewRef.context.$implicit = record.item;\n\t            });\n\t        };\n\t        NgFor.prototype._perViewChange = function (view, record) {\n\t            view.context.$implicit = record.item;\n\t        };\n\t        NgFor.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgFor.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.IterableDiffers, },\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ];\n\t        NgFor.propDecorators = {\n\t            'ngForOf': [{ type: _angular_core.Input },],\n\t            'ngForTrackBy': [{ type: _angular_core.Input },],\n\t            'ngForTemplate': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgFor;\n\t    }());\n\t    var RecordViewTuple = (function () {\n\t        function RecordViewTuple(record, view) {\n\t            this.record = record;\n\t            this.view = view;\n\t        }\n\t        return RecordViewTuple;\n\t    }());\n\t\n\t    /**\n\t     * Removes or recreates a portion of the DOM tree based on an {expression}.\n\t     *\n\t     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n\t     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n\t     *\n\t     * ```\n\t     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n\t     *   <!-- Error message displayed when the errorCount property in the current context is greater\n\t     * than 0. -->\n\t     *   {{errorCount}} errors detected\n\t     * </div>\n\t     * ```\n\t     *\n\t     * ### Syntax\n\t     *\n\t     * - `<div *ngIf=\"condition\">...</div>`\n\t     * - `<div template=\"ngIf condition\">...</div>`\n\t     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n\t     *\n\t     * @stable\n\t     */\n\t    var NgIf = (function () {\n\t        function NgIf(_viewContainer, _template) {\n\t            this._viewContainer = _viewContainer;\n\t            this._template = _template;\n\t            this._hasView = false;\n\t        }\n\t        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n\t            set: function (condition) {\n\t                if (condition && !this._hasView) {\n\t                    this._hasView = true;\n\t                    this._viewContainer.createEmbeddedView(this._template);\n\t                }\n\t                else if (!condition && this._hasView) {\n\t                    this._hasView = false;\n\t                    this._viewContainer.clear();\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgIf.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgIf.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t        ];\n\t        NgIf.propDecorators = {\n\t            'ngIf': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgIf;\n\t    }());\n\t\n\t    var SwitchView = (function () {\n\t        function SwitchView(_viewContainerRef, _templateRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t            this._templateRef = _templateRef;\n\t            this._created = false;\n\t        }\n\t        SwitchView.prototype.create = function () {\n\t            this._created = true;\n\t            this._viewContainerRef.createEmbeddedView(this._templateRef);\n\t        };\n\t        SwitchView.prototype.destroy = function () {\n\t            this._created = false;\n\t            this._viewContainerRef.clear();\n\t        };\n\t        SwitchView.prototype.enforceState = function (created) {\n\t            if (created && !this._created) {\n\t                this.create();\n\t            }\n\t            else if (!created && this._created) {\n\t                this.destroy();\n\t            }\n\t        };\n\t        return SwitchView;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n\t     *             expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     *     <container-element [ngSwitch]=\"switch_expression\">\n\t     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n\t     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n\t     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n\t     *         <!-- use a ng-container to group multiple root nodes -->\n\t     *         <inner-element></inner-element>\n\t     *         <inner-other-element></inner-other-element>\n\t     *       </ng-container>\n\t     *       <some-element *ngSwitchDefault>...</some-element>\n\t     *     </container-element>\n\t     * ```\n\t     * @description\n\t     *\n\t     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n\t     * switch expression.\n\t     *\n\t     * In other words:\n\t     * - you define a container element (where you place the directive with a switch expression on the\n\t     * `[ngSwitch]=\"...\"` attribute)\n\t     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n\t     * root elements.\n\t     *\n\t     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n\t     * be preserved at the location.\n\t     *\n\t     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n\t     * expression is evaluated.\n\t     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n\t     * stamped out.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitch = (function () {\n\t        function NgSwitch() {\n\t            this._defaultUsed = false;\n\t            this._caseCount = 0;\n\t            this._lastCaseCheckIndex = 0;\n\t            this._lastCasesMatched = false;\n\t        }\n\t        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n\t            set: function (newValue) {\n\t                this._ngSwitch = newValue;\n\t                if (this._caseCount === 0) {\n\t                    this._updateDefaultCases(true);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n\t        /** @internal */\n\t        NgSwitch.prototype._addDefault = function (view) {\n\t            if (!this._defaultViews) {\n\t                this._defaultViews = [];\n\t            }\n\t            this._defaultViews.push(view);\n\t        };\n\t        /** @internal */\n\t        NgSwitch.prototype._matchCase = function (value) {\n\t            var matched = value == this._ngSwitch;\n\t            this._lastCasesMatched = this._lastCasesMatched || matched;\n\t            this._lastCaseCheckIndex++;\n\t            if (this._lastCaseCheckIndex === this._caseCount) {\n\t                this._updateDefaultCases(!this._lastCasesMatched);\n\t                this._lastCaseCheckIndex = 0;\n\t                this._lastCasesMatched = false;\n\t            }\n\t            return matched;\n\t        };\n\t        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n\t            if (this._defaultViews && useDefault !== this._defaultUsed) {\n\t                this._defaultUsed = useDefault;\n\t                for (var i = 0; i < this._defaultViews.length; i++) {\n\t                    var defaultView = this._defaultViews[i];\n\t                    defaultView.enforceState(useDefault);\n\t                }\n\t            }\n\t        };\n\t        NgSwitch.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitch.ctorParameters = [];\n\t        NgSwitch.propDecorators = {\n\t            'ngSwitch': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitch;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n\t     *             given expression evaluate to respectively the same/different value as the switch\n\t     *             expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     * </container-element>\n\t     *```\n\t     * @description\n\t     *\n\t     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * If multiple match expressions match the switch expression value, all of them are displayed.\n\t     *\n\t     * See {@link NgSwitch} for more details and example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitchCase = (function () {\n\t        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n\t            this.ngSwitch = ngSwitch;\n\t            ngSwitch._addCase();\n\t            this._view = new SwitchView(viewContainer, templateRef);\n\t        }\n\t        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n\t        NgSwitchCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchCase.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        NgSwitchCase.propDecorators = {\n\t            'ngSwitchCase': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgSwitchCase;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n\t     * match the\n\t     *             switch expression.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <container-element [ngSwitch]=\"switch_expression\">\n\t     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n\t     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n\t     * </container-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n\t     * expression.\n\t     *\n\t     * See {@link NgSwitch} for more details and example.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgSwitchDefault = (function () {\n\t        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n\t            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n\t        }\n\t        NgSwitchDefault.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSwitchDefault.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        return NgSwitchDefault;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <ng-container *ngPluralCase=\"'=0'\">there is nothing</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'=1'\">there is one</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'few'\">there are a few</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'other'\">there are exactly #</ng-container>\n\t     * </some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n\t     * that match the switch expression's pluralization category.\n\t     *\n\t     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n\t     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n\t     * expression:\n\t     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n\t     *   matches the switch expression exactly,\n\t     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n\t     *   value matches aren't found and the value maps to its category for the defined locale.\n\t     *\n\t     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgPlural = (function () {\n\t        function NgPlural(_localization) {\n\t            this._localization = _localization;\n\t            this._caseViews = {};\n\t        }\n\t        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n\t            set: function (value) {\n\t                this._switchValue = value;\n\t                this._updateView();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n\t        NgPlural.prototype._updateView = function () {\n\t            this._clearViews();\n\t            var cases = Object.keys(this._caseViews);\n\t            var key = getPluralCategory(this._switchValue, cases, this._localization);\n\t            this._activateView(this._caseViews[key]);\n\t        };\n\t        NgPlural.prototype._clearViews = function () {\n\t            if (this._activeView)\n\t                this._activeView.destroy();\n\t        };\n\t        NgPlural.prototype._activateView = function (view) {\n\t            if (view) {\n\t                this._activeView = view;\n\t                this._activeView.create();\n\t            }\n\t        };\n\t        NgPlural.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPlural.ctorParameters = [\n\t            { type: NgLocalization, },\n\t        ];\n\t        NgPlural.propDecorators = {\n\t            'ngPlural': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgPlural;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgPlural} when the\n\t     *             given expression matches the plural expression according to CLDR rules.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngPlural]=\"value\">\n\t     *   <ng-container *ngPluralCase=\"'=0'\">...</ng-container>\n\t     *   <ng-container *ngPluralCase=\"'other'\">...</ng-container>\n\t     * </some-element>\n\t     *```\n\t     *\n\t     * See {@link NgPlural} for more details and example.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgPluralCase = (function () {\n\t        function NgPluralCase(value, template, viewContainer, ngPlural) {\n\t            this.value = value;\n\t            ngPlural.addCase(value, new SwitchView(viewContainer, template));\n\t        }\n\t        NgPluralCase.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgPluralCase.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n\t            { type: _angular_core.TemplateRef, },\n\t            { type: _angular_core.ViewContainerRef, },\n\t            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n\t        ];\n\t        return NgPluralCase;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Update an HTML element styles.\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n\t     *\n\t     * <some-element [ngStyle]=\"objExp\">...</some-element>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * The styles are updated according to the value of the expression evaluation:\n\t     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n\t     * - values are the values assigned to those properties (expressed in the given unit).\n\t     *\n\t     * @stable\n\t     */\n\t    var NgStyle = (function () {\n\t        function NgStyle(_differs, _ngEl, _renderer) {\n\t            this._differs = _differs;\n\t            this._ngEl = _ngEl;\n\t            this._renderer = _renderer;\n\t        }\n\t        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n\t            set: function (v) {\n\t                this._ngStyle = v;\n\t                if (!this._differ && v) {\n\t                    this._differ = this._differs.find(v).create(null);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgStyle.prototype.ngDoCheck = function () {\n\t            if (this._differ) {\n\t                var changes = this._differ.diff(this._ngStyle);\n\t                if (changes) {\n\t                    this._applyChanges(changes);\n\t                }\n\t            }\n\t        };\n\t        NgStyle.prototype._applyChanges = function (changes) {\n\t            var _this = this;\n\t            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n\t            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n\t        };\n\t        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n\t            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n\t            value = value && unit ? \"\" + value + unit : value;\n\t            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n\t        };\n\t        NgStyle.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgStyle.ctorParameters = [\n\t            { type: _angular_core.KeyValueDiffers, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t        ];\n\t        NgStyle.propDecorators = {\n\t            'ngStyle': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgStyle;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     *\n\t     * @whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n\t     *\n\t     * @howToUse\n\t     * ```\n\t     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n\t     *           [ngOutletContext]=\"objectExpression\">\n\t     * </template>\n\t     * ```\n\t     *\n\t     * @description\n\t     *\n\t     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n\t     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n\t     * available within the `TemplateRef`.\n\t     *\n\t     * Note: using the key `$implicit` in the context object will set it's value as default.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NgTemplateOutlet = (function () {\n\t        function NgTemplateOutlet(_viewContainerRef) {\n\t            this._viewContainerRef = _viewContainerRef;\n\t        }\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n\t            set: function (context) { this._context = context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n\t            set: function (templateRef) { this._templateRef = templateRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n\t            if (this._viewRef) {\n\t                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n\t            }\n\t            if (this._templateRef) {\n\t                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n\t            }\n\t        };\n\t        NgTemplateOutlet.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgTemplateOutlet.ctorParameters = [\n\t            { type: _angular_core.ViewContainerRef, },\n\t        ];\n\t        NgTemplateOutlet.propDecorators = {\n\t            'ngOutletContext': [{ type: _angular_core.Input },],\n\t            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n\t        };\n\t        return NgTemplateOutlet;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular directives that are likely to be used in each and every Angular\n\t     * application.\n\t     */\n\t    var COMMON_DIRECTIVES = [\n\t        NgClass,\n\t        NgFor,\n\t        NgIf,\n\t        NgTemplateOutlet,\n\t        NgStyle,\n\t        NgSwitch,\n\t        NgSwitchCase,\n\t        NgSwitchDefault,\n\t        NgPlural,\n\t        NgPluralCase,\n\t    ];\n\t\n\t    var isPromise = _angular_core.__core_private__.isPromise;\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends$4(BaseError, _super);\n\t        function BaseError(message) {\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            var nativeError = _super.call(this, message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            get: function () { return this._nativeError.message; },\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            get: function () { return this._nativeError.stack; },\n\t            set: function (value) { this._nativeError.stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * @stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends$4(WrappedError, _super);\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            get: function () {\n\t                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var InvalidPipeArgumentError = (function (_super) {\n\t        __extends$3(InvalidPipeArgumentError, _super);\n\t        function InvalidPipeArgumentError(type, value) {\n\t            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n\t        }\n\t        return InvalidPipeArgumentError;\n\t    }(BaseError));\n\t\n\t    var ObservableStrategy = (function () {\n\t        function ObservableStrategy() {\n\t        }\n\t        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n\t        };\n\t        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n\t        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n\t        return ObservableStrategy;\n\t    }());\n\t    var PromiseStrategy = (function () {\n\t        function PromiseStrategy() {\n\t        }\n\t        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n\t            return async.then(updateLatestValue, function (e) { throw e; });\n\t        };\n\t        PromiseStrategy.prototype.dispose = function (subscription) { };\n\t        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n\t        return PromiseStrategy;\n\t    }());\n\t    var _promiseStrategy = new PromiseStrategy();\n\t    var _observableStrategy = new ObservableStrategy();\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Unwraps a value from an asynchronous primitive.\n\t     * @howToUse `observable_or_promise_expression | async`\n\t     * @description\n\t     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n\t     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n\t     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n\t     * potential memory leaks.\n\t     *\n\t     *\n\t     * ## Examples\n\t     *\n\t     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n\t     * promise.\n\t     *\n\t     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n\t     *\n\t     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n\t     * to the view. The Observable continuesly updates the view with the current time.\n\t     *\n\t     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n\t     *\n\t     * @stable\n\t     */\n\t    var AsyncPipe = (function () {\n\t        function AsyncPipe(_ref) {\n\t            this._ref = _ref;\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t            this._strategy = null;\n\t        }\n\t        AsyncPipe.prototype.ngOnDestroy = function () {\n\t            if (this._subscription) {\n\t                this._dispose();\n\t            }\n\t        };\n\t        AsyncPipe.prototype.transform = function (obj) {\n\t            if (!this._obj) {\n\t                if (obj) {\n\t                    this._subscribe(obj);\n\t                }\n\t                this._latestReturnedValue = this._latestValue;\n\t                return this._latestValue;\n\t            }\n\t            if (obj !== this._obj) {\n\t                this._dispose();\n\t                return this.transform(obj);\n\t            }\n\t            if (this._latestValue === this._latestReturnedValue) {\n\t                return this._latestReturnedValue;\n\t            }\n\t            this._latestReturnedValue = this._latestValue;\n\t            return _angular_core.WrappedValue.wrap(this._latestValue);\n\t        };\n\t        AsyncPipe.prototype._subscribe = function (obj) {\n\t            var _this = this;\n\t            this._obj = obj;\n\t            this._strategy = this._selectStrategy(obj);\n\t            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n\t        };\n\t        AsyncPipe.prototype._selectStrategy = function (obj) {\n\t            if (isPromise(obj)) {\n\t                return _promiseStrategy;\n\t            }\n\t            if (obj.subscribe) {\n\t                return _observableStrategy;\n\t            }\n\t            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n\t        };\n\t        AsyncPipe.prototype._dispose = function () {\n\t            this._strategy.dispose(this._subscription);\n\t            this._latestValue = null;\n\t            this._latestReturnedValue = null;\n\t            this._subscription = null;\n\t            this._obj = null;\n\t        };\n\t        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n\t            if (async === this._obj) {\n\t                this._latestValue = value;\n\t                this._ref.markForCheck();\n\t            }\n\t        };\n\t        AsyncPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        AsyncPipe.ctorParameters = [\n\t            { type: _angular_core.ChangeDetectorRef, },\n\t        ];\n\t        return AsyncPipe;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var NumberFormatStyle;\n\t    (function (NumberFormatStyle) {\n\t        NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n\t        NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n\t        NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n\t    })(NumberFormatStyle || (NumberFormatStyle = {}));\n\t    var NumberFormatter = (function () {\n\t        function NumberFormatter() {\n\t        }\n\t        NumberFormatter.format = function (num, locale, style, _a) {\n\t            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n\t            var options = {\n\t                minimumIntegerDigits: minimumIntegerDigits,\n\t                minimumFractionDigits: minimumFractionDigits,\n\t                maximumFractionDigits: maximumFractionDigits,\n\t                style: NumberFormatStyle[style].toLowerCase()\n\t            };\n\t            if (style == NumberFormatStyle.Currency) {\n\t                options.currency = currency;\n\t                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n\t            }\n\t            return new Intl.NumberFormat(locale, options).format(num);\n\t        };\n\t        return NumberFormatter;\n\t    }());\n\t    var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\t    var PATTERN_ALIASES = {\n\t        yMMMdjms: datePartGetterFactory(combine([\n\t            digitCondition('year', 1),\n\t            nameCondition('month', 3),\n\t            digitCondition('day', 1),\n\t            digitCondition('hour', 1),\n\t            digitCondition('minute', 1),\n\t            digitCondition('second', 1),\n\t        ])),\n\t        yMdjm: datePartGetterFactory(combine([\n\t            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n\t            digitCondition('hour', 1), digitCondition('minute', 1)\n\t        ])),\n\t        yMMMMEEEEd: datePartGetterFactory(combine([\n\t            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n\t            digitCondition('day', 1)\n\t        ])),\n\t        yMMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n\t        yMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n\t        yMd: datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n\t        jms: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n\t        jm: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n\t    };\n\t    var DATE_FORMATS = {\n\t        yyyy: datePartGetterFactory(digitCondition('year', 4)),\n\t        yy: datePartGetterFactory(digitCondition('year', 2)),\n\t        y: datePartGetterFactory(digitCondition('year', 1)),\n\t        MMMM: datePartGetterFactory(nameCondition('month', 4)),\n\t        MMM: datePartGetterFactory(nameCondition('month', 3)),\n\t        MM: datePartGetterFactory(digitCondition('month', 2)),\n\t        M: datePartGetterFactory(digitCondition('month', 1)),\n\t        LLLL: datePartGetterFactory(nameCondition('month', 4)),\n\t        L: datePartGetterFactory(nameCondition('month', 1)),\n\t        dd: datePartGetterFactory(digitCondition('day', 2)),\n\t        d: datePartGetterFactory(digitCondition('day', 1)),\n\t        HH: digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n\t        H: hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n\t        hh: digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n\t        h: hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        jj: datePartGetterFactory(digitCondition('hour', 2)),\n\t        j: datePartGetterFactory(digitCondition('hour', 1)),\n\t        mm: digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n\t        m: datePartGetterFactory(digitCondition('minute', 1)),\n\t        ss: digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n\t        s: datePartGetterFactory(digitCondition('second', 1)),\n\t        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n\t        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n\t        // fractions\n\t        sss: datePartGetterFactory(digitCondition('second', 3)),\n\t        EEEE: datePartGetterFactory(nameCondition('weekday', 4)),\n\t        EEE: datePartGetterFactory(nameCondition('weekday', 3)),\n\t        EE: datePartGetterFactory(nameCondition('weekday', 2)),\n\t        E: datePartGetterFactory(nameCondition('weekday', 1)),\n\t        a: hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n\t        Z: timeZoneGetter('short'),\n\t        z: timeZoneGetter('long'),\n\t        ww: datePartGetterFactory({}),\n\t        // first Thursday of the year. not support ?\n\t        w: datePartGetterFactory({}),\n\t        // of the year not support ?\n\t        G: datePartGetterFactory(nameCondition('era', 1)),\n\t        GG: datePartGetterFactory(nameCondition('era', 2)),\n\t        GGG: datePartGetterFactory(nameCondition('era', 3)),\n\t        GGGG: datePartGetterFactory(nameCondition('era', 4))\n\t    };\n\t    function digitModifier(inner) {\n\t        return function (date, locale) {\n\t            var result = inner(date, locale);\n\t            return result.length == 1 ? '0' + result : result;\n\t        };\n\t    }\n\t    function hourClockExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n\t    }\n\t    function hourExtractor(inner) {\n\t        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n\t    }\n\t    function intlDateFormat(date, locale, options) {\n\t        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n\t    }\n\t    function timeZoneGetter(timezone) {\n\t        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n\t        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n\t        return function (date, locale) {\n\t            var result = intlDateFormat(date, locale, options);\n\t            // Then extract first 3 letters that related to hours\n\t            return result ? result.substring(3) : '';\n\t        };\n\t    }\n\t    function hour12Modify(options, value) {\n\t        options.hour12 = value;\n\t        return options;\n\t    }\n\t    function digitCondition(prop, len) {\n\t        var result = {};\n\t        result[prop] = len === 2 ? '2-digit' : 'numeric';\n\t        return result;\n\t    }\n\t    function nameCondition(prop, len) {\n\t        var result = {};\n\t        if (len < 4) {\n\t            result[prop] = len > 1 ? 'short' : 'narrow';\n\t        }\n\t        else {\n\t            result[prop] = 'long';\n\t        }\n\t        return result;\n\t    }\n\t    function combine(options) {\n\t        return (_a = Object).assign.apply(_a, [{}].concat(options));\n\t        var _a;\n\t    }\n\t    function datePartGetterFactory(ret) {\n\t        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n\t    }\n\t    var DATE_FORMATTER_CACHE = new Map();\n\t    function dateFormatter(format, date, locale) {\n\t        var fn = PATTERN_ALIASES[format];\n\t        if (fn)\n\t            return fn(date, locale);\n\t        var parts = DATE_FORMATTER_CACHE.get(format);\n\t        if (!parts) {\n\t            parts = [];\n\t            var match = void 0;\n\t            DATE_FORMATS_SPLIT.exec(format);\n\t            while (format) {\n\t                match = DATE_FORMATS_SPLIT.exec(format);\n\t                if (match) {\n\t                    parts = parts.concat(match.slice(1));\n\t                    format = parts.pop();\n\t                }\n\t                else {\n\t                    parts.push(format);\n\t                    format = null;\n\t                }\n\t            }\n\t            DATE_FORMATTER_CACHE.set(format, parts);\n\t        }\n\t        return parts.reduce(function (text, part) {\n\t            var fn = DATE_FORMATS[part];\n\t            return text + (fn ? fn(date, locale) : partToTime(part));\n\t        }, '');\n\t    }\n\t    function partToTime(part) {\n\t        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n\t    }\n\t    var DateFormatter = (function () {\n\t        function DateFormatter() {\n\t        }\n\t        DateFormatter.format = function (date, locale, pattern) {\n\t            return dateFormatter(pattern, date, locale);\n\t        };\n\t        return DateFormatter;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a date according to locale rules.\n\t     * @howToUse `date_expression | date[:format]`\n\t     * @description\n\t     *\n\t     * Where:\n\t     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n\t     * (https://www.w3.org/TR/NOTE-datetime).\n\t     * - `format` indicates which date/time components to include. The format can be predifined as\n\t     *   shown below or custom as shown in the table.\n\t     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n\t     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n\t     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n\t     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n\t     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n\t     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n\t     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n\t     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n\t     *\n\t     *\n\t     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n\t     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n\t     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n\t     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n\t     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n\t     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n\t     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n\t     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n\t     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n\t     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n\t     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n\t     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n\t     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n\t     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n\t     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n\t     *\n\t     * In javascript, only the components specified will be respected (not the ordering,\n\t     * punctuations, ...) and details of the formatting will be dependent on the locale.\n\t     *\n\t     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n\t     *\n\t     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n\t     * applied and the formatted text will have the same day, month and year of the expression.\n\t     *\n\t     * WARNINGS:\n\t     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n\t     *   Instead users should treat the date as an immutable object and change the reference when the\n\t     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n\t     *   which would be an expensive operation).\n\t     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n\t     *   browsers.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n\t     * in the _local_ time and locale is 'en-US':\n\t     *\n\t     * ```\n\t     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n\t     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n\t     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n\t     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n\t     * ```\n\t     *\n\t     * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var DatePipe = (function () {\n\t        function DatePipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        DatePipe.prototype.transform = function (value, pattern) {\n\t            if (pattern === void 0) { pattern = 'mediumDate'; }\n\t            var date;\n\t            if (isBlank$1(value))\n\t                return null;\n\t            if (typeof value === 'string') {\n\t                value = value.trim();\n\t            }\n\t            if (isDate(value)) {\n\t                date = value;\n\t            }\n\t            else if (NumberWrapper.isNumeric(value)) {\n\t                date = new Date(parseFloat(value));\n\t            }\n\t            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n\t                /**\n\t                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n\t                * before Date creation to avoid time offset and errors in the new Date.\n\t                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n\t                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n\t                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n\t                * is applied\n\t                * Note: ISO months are 0 for January, 1 for February, ...\n\t                */\n\t                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n\t                date = new Date(y, m - 1, d);\n\t            }\n\t            else {\n\t                date = new Date(value);\n\t            }\n\t            if (!isDate(date)) {\n\t                throw new InvalidPipeArgumentError(DatePipe, value);\n\t            }\n\t            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n\t        };\n\t        /** @internal */\n\t        DatePipe._ALIASES = {\n\t            'medium': 'yMMMdjms',\n\t            'short': 'yMdjm',\n\t            'fullDate': 'yMMMMEEEEd',\n\t            'longDate': 'yMMMMd',\n\t            'mediumDate': 'yMMMd',\n\t            'shortDate': 'yMd',\n\t            'mediumTime': 'jms',\n\t            'shortTime': 'jm'\n\t        };\n\t        DatePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DatePipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return DatePipe;\n\t    }());\n\t    function isBlank$1(obj) {\n\t        return obj == null || obj === '';\n\t    }\n\t\n\t    var _INTERPOLATION_REGEXP = /#/g;\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n\t     * @howToUse `expression | i18nPlural:mapping`\n\t     * @description\n\t     *\n\t     *  Where:\n\t     *  - `expression` is a number.\n\t     *  - `mapping` is an object that mimics the ICU format, see\n\t     *    http://userguide.icu-project.org/formatparse/messages\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n\t     *\n\t     * @experimental\n\t     */\n\t    var I18nPluralPipe = (function () {\n\t        function I18nPluralPipe(_localization) {\n\t            this._localization = _localization;\n\t        }\n\t        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n\t            if (isBlank(value))\n\t                return '';\n\t            if (typeof pluralMap !== 'object' || pluralMap === null) {\n\t                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n\t            }\n\t            var key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\t            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n\t        };\n\t        I18nPluralPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nPluralPipe.ctorParameters = [\n\t            { type: NgLocalization, },\n\t        ];\n\t        return I18nPluralPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Generic selector that displays the string that matches the current value.\n\t     * @howToUse `expression | i18nSelect:mapping`\n\t     * @description\n\t     *\n\t     *  Where `mapping` is an object that indicates the text that should be displayed\n\t     *  for different values of the provided `expression`.\n\t     *  If none of the keys of the mapping match the value of the `expression`, then the content\n\t     *  of the `other` key is returned when present, otherwise an empty string is returned.\n\t     *\n\t     *  ## Example\n\t     *\n\t     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n\t     *\n\t     *  @experimental\n\t     */\n\t    var I18nSelectPipe = (function () {\n\t        function I18nSelectPipe() {\n\t        }\n\t        I18nSelectPipe.prototype.transform = function (value, mapping) {\n\t            if (value == null)\n\t                return '';\n\t            if (typeof mapping !== 'object' || typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n\t            }\n\t            if (mapping.hasOwnProperty(value)) {\n\t                return mapping[value];\n\t            }\n\t            if (mapping.hasOwnProperty('other')) {\n\t                return mapping['other'];\n\t            }\n\t            return '';\n\t        };\n\t        I18nSelectPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n\t        ];\n\t        /** @nocollapse */\n\t        I18nSelectPipe.ctorParameters = [];\n\t        return I18nSelectPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Converts value into JSON string.\n\t     * @howToUse `expression | json`\n\t     * @description\n\t     *\n\t     * Converts value into string using `JSON.stringify`. Useful for debugging.\n\t     *\n\t     * ### Example\n\t     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var JsonPipe = (function () {\n\t        function JsonPipe() {\n\t        }\n\t        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n\t        JsonPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        JsonPipe.ctorParameters = [];\n\t        return JsonPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Transforms string to lowercase.\n\t     * @howToUse `expression | lowercase`\n\t     * @description\n\t     *\n\t     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var LowerCasePipe = (function () {\n\t        function LowerCasePipe() {\n\t        }\n\t        LowerCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n\t            }\n\t            return value.toLowerCase();\n\t        };\n\t        LowerCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        LowerCasePipe.ctorParameters = [];\n\t        return LowerCasePipe;\n\t    }());\n\t\n\t    var _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\t    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n\t        if (currency === void 0) { currency = null; }\n\t        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n\t        if (isBlank(value))\n\t            return null;\n\t        // Convert strings to numbers\n\t        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n\t        if (typeof value !== 'number') {\n\t            throw new InvalidPipeArgumentError(pipe, value);\n\t        }\n\t        var minInt;\n\t        var minFraction;\n\t        var maxFraction;\n\t        if (style !== NumberFormatStyle.Currency) {\n\t            // rely on Intl default for currency\n\t            minInt = 1;\n\t            minFraction = 0;\n\t            maxFraction = 3;\n\t        }\n\t        if (digits) {\n\t            var parts = digits.match(_NUMBER_FORMAT_REGEXP);\n\t            if (parts === null) {\n\t                throw new Error(digits + \" is not a valid digit info for number pipes\");\n\t            }\n\t            if (isPresent(parts[1])) {\n\t                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n\t            }\n\t            if (isPresent(parts[3])) {\n\t                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n\t            }\n\t            if (isPresent(parts[5])) {\n\t                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n\t            }\n\t        }\n\t        return NumberFormatter.format(value, locale, style, {\n\t            minimumIntegerDigits: minInt,\n\t            minimumFractionDigits: minFraction,\n\t            maximumFractionDigits: maxFraction,\n\t            currency: currency,\n\t            currencyAsSymbol: currencyAsSymbol,\n\t        });\n\t    }\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number according to locale rules.\n\t     * @howToUse `number_expression | number[:digitInfo]`\n\t     *\n\t     * Formats a number as text. Group sizing and separator and other locale-specific\n\t     * configurations are based on the active locale.\n\t     *\n\t     * where `expression` is a number:\n\t     *  - `digitInfo` is a `string` which has a following format: <br>\n\t     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n\t     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n\t     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n\t     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n\t     *\n\t     * For more information on the acceptable range for each of these numbers and other\n\t     * details see your native internationalization library.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var DecimalPipe = (function () {\n\t        function DecimalPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        DecimalPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n\t        };\n\t        DecimalPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DecimalPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return DecimalPipe;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number as a percentage according to locale rules.\n\t     * @howToUse `number_expression | percent[:digitInfo]`\n\t     *\n\t     * @description\n\t     *\n\t     * Formats a number as percentage.\n\t     *\n\t     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var PercentPipe = (function () {\n\t        function PercentPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        PercentPipe.prototype.transform = function (value, digits) {\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n\t        };\n\t        PercentPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PercentPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return PercentPipe;\n\t    }());\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Formats a number as currency using locale rules.\n\t     * @howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n\t     * @description\n\t     *\n\t     * Use `currency` to format a number as currency.\n\t     *\n\t     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n\t     *    as `USD` for the US dollar and `EUR` for the euro.\n\t     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n\t     *   - `true`: use symbol (e.g. `$`).\n\t     *   - `false`(default): use code (e.g. `USD`).\n\t     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n\t     *\n\t     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n\t     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var CurrencyPipe = (function () {\n\t        function CurrencyPipe(_locale) {\n\t            this._locale = _locale;\n\t        }\n\t        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n\t            if (currencyCode === void 0) { currencyCode = 'USD'; }\n\t            if (symbolDisplay === void 0) { symbolDisplay = false; }\n\t            if (digits === void 0) { digits = null; }\n\t            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n\t        };\n\t        CurrencyPipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CurrencyPipe.ctorParameters = [\n\t            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n\t        ];\n\t        return CurrencyPipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n\t     * @howToUse `array_or_string_expression | slice:start[:end]`\n\t     * @description\n\t     *\n\t     * Where the input expression is a `List` or `String`, and:\n\t     * - `start`: The starting index of the subset to return.\n\t     *   - **a positive integer**: return the item at `start` index and all items after\n\t     *     in the list or string expression.\n\t     *   - **a negative integer**: return the item at `start` index from the end and all items after\n\t     *     in the list or string expression.\n\t     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n\t     *   - **if negative and greater than the size of the expression**: return entire list or string.\n\t     * - `end`: The ending index of the subset to return.\n\t     *   - **omitted**: return all items until the end.\n\t     *   - **if positive**: return all items before `end` index of the list or string.\n\t     *   - **if negative**: return all items before `end` index from the end of the list or string.\n\t     *\n\t     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n\t     * and `String.prototype.slice()`.\n\t     *\n\t     * When operating on a [List], the returned list is always a copy even when all\n\t     * the elements are being returned.\n\t     *\n\t     * When operating on a blank value, the pipe returns the blank value.\n\t     *\n\t     * ## List Example\n\t     *\n\t     * This `ngFor` example:\n\t     *\n\t     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n\t     *\n\t     * produces the following:\n\t     *\n\t     *     <li>b</li>\n\t     *     <li>c</li>\n\t     *\n\t     * ## String Examples\n\t     *\n\t     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n\t     *\n\t     * @stable\n\t     */\n\t    var SlicePipe = (function () {\n\t        function SlicePipe() {\n\t        }\n\t        SlicePipe.prototype.transform = function (value, start, end) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (!this.supports(value)) {\n\t                throw new InvalidPipeArgumentError(SlicePipe, value);\n\t            }\n\t            return value.slice(start, end);\n\t        };\n\t        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n\t        SlicePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SlicePipe.ctorParameters = [];\n\t        return SlicePipe;\n\t    }());\n\t\n\t    /**\n\t     * @ngModule CommonModule\n\t     * @whatItDoes Transforms string to uppercase.\n\t     * @howToUse `expression | uppercase`\n\t     * @description\n\t     *\n\t     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n\t     *\n\t     * @stable\n\t     */\n\t    var UpperCasePipe = (function () {\n\t        function UpperCasePipe() {\n\t        }\n\t        UpperCasePipe.prototype.transform = function (value) {\n\t            if (isBlank(value))\n\t                return value;\n\t            if (typeof value !== 'string') {\n\t                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n\t            }\n\t            return value.toUpperCase();\n\t        };\n\t        UpperCasePipe.decorators = [\n\t            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        UpperCasePipe.ctorParameters = [];\n\t        return UpperCasePipe;\n\t    }());\n\t\n\t    /**\n\t     * A collection of Angular pipes that are likely to be used in each and every application.\n\t     */\n\t    var COMMON_PIPES = [\n\t        AsyncPipe,\n\t        UpperCasePipe,\n\t        LowerCasePipe,\n\t        JsonPipe,\n\t        SlicePipe,\n\t        DecimalPipe,\n\t        PercentPipe,\n\t        CurrencyPipe,\n\t        DatePipe,\n\t        I18nPluralPipe,\n\t        I18nSelectPipe,\n\t    ];\n\t\n\t    // Note: This does not contain the location providers,\n\t    // as they need some platform specific implementations to work.\n\t    /**\n\t     * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgFor}, ...\n\t     *\n\t     * @stable\n\t     */\n\t    var CommonModule = (function () {\n\t        function CommonModule() {\n\t        }\n\t        CommonModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n\t                        providers: [\n\t                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n\t                        ],\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CommonModule.ctorParameters = [];\n\t        return CommonModule;\n\t    }());\n\t\n\t    exports.NgLocalization = NgLocalization;\n\t    exports.CommonModule = CommonModule;\n\t    exports.NgClass = NgClass;\n\t    exports.NgFor = NgFor;\n\t    exports.NgIf = NgIf;\n\t    exports.NgPlural = NgPlural;\n\t    exports.NgPluralCase = NgPluralCase;\n\t    exports.NgStyle = NgStyle;\n\t    exports.NgSwitch = NgSwitch;\n\t    exports.NgSwitchCase = NgSwitchCase;\n\t    exports.NgSwitchDefault = NgSwitchDefault;\n\t    exports.NgTemplateOutlet = NgTemplateOutlet;\n\t    exports.AsyncPipe = AsyncPipe;\n\t    exports.DatePipe = DatePipe;\n\t    exports.I18nPluralPipe = I18nPluralPipe;\n\t    exports.I18nSelectPipe = I18nSelectPipe;\n\t    exports.JsonPipe = JsonPipe;\n\t    exports.LowerCasePipe = LowerCasePipe;\n\t    exports.CurrencyPipe = CurrencyPipe;\n\t    exports.DecimalPipe = DecimalPipe;\n\t    exports.PercentPipe = PercentPipe;\n\t    exports.SlicePipe = SlicePipe;\n\t    exports.UpperCasePipe = UpperCasePipe;\n\t    exports.PlatformLocation = PlatformLocation;\n\t    exports.LocationStrategy = LocationStrategy;\n\t    exports.APP_BASE_HREF = APP_BASE_HREF;\n\t    exports.HashLocationStrategy = HashLocationStrategy;\n\t    exports.PathLocationStrategy = PathLocationStrategy;\n\t    exports.Location = Location;\n\t\n\t}));\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.2.0\n\t * (c) 2010-2016 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(4)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n\t}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var globalScope;\n\t    if (false) {\n\t        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n\t            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n\t            globalScope = self;\n\t        }\n\t        else {\n\t            globalScope = global;\n\t        }\n\t    }\n\t    else {\n\t        globalScope = window;\n\t    }\n\t    function scheduleMicroTask(fn) {\n\t        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n\t    }\n\t    // Need to declare a new variable for global here since TypeScript\n\t    // exports the original value of the symbol.\n\t    var global$1 = globalScope;\n\t    function getTypeNameForDebugging(type) {\n\t        return type['name'] || typeof type;\n\t    }\n\t    // TODO: remove calls to assert in production environment\n\t    // Note: Can't just export this and import in in other files\n\t    // as `assert` is a reserved keyword in Dart\n\t    global$1.assert = function assert(condition) {\n\t        // TODO: to be fixed properly via #2830, noop for now\n\t    };\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    function stringify(token) {\n\t        if (typeof token === 'string') {\n\t            return token;\n\t        }\n\t        if (token == null) {\n\t            return '' + token;\n\t        }\n\t        if (token.overriddenName) {\n\t            return token.overriddenName;\n\t        }\n\t        if (token.name) {\n\t            return token.name;\n\t        }\n\t        var res = token.toString();\n\t        var newLineIndex = res.indexOf('\\n');\n\t        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n\t    }\n\t    // JS has NaN !== NaN\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    function print(obj) {\n\t        console.log(obj);\n\t    }\n\t    function warn(obj) {\n\t        console.warn(obj);\n\t    }\n\t    var _symbolIterator = null;\n\t    function getSymbolIterator() {\n\t        if (!_symbolIterator) {\n\t            if (globalScope.Symbol && Symbol.iterator) {\n\t                _symbolIterator = Symbol.iterator;\n\t            }\n\t            else {\n\t                // es6-shim specific logic\n\t                var keys = Object.getOwnPropertyNames(Map.prototype);\n\t                for (var i = 0; i < keys.length; ++i) {\n\t                    var key = keys[i];\n\t                    if (key !== 'entries' && key !== 'size' &&\n\t                        Map.prototype[key] === Map.prototype['entries']) {\n\t                        _symbolIterator = key;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return _symbolIterator;\n\t    }\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    var _nextClassId = 0;\n\t    var Reflect = global$1.Reflect;\n\t    function extractAnnotation(annotation) {\n\t        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n\t            // it is a decorator, extract annotation\n\t            annotation = annotation.annotation;\n\t        }\n\t        return annotation;\n\t    }\n\t    function applyParams(fnOrArray, key) {\n\t        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n\t            fnOrArray === Number || fnOrArray === Array) {\n\t            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n\t        }\n\t        if (typeof fnOrArray === 'function') {\n\t            return fnOrArray;\n\t        }\n\t        if (Array.isArray(fnOrArray)) {\n\t            var annotations = fnOrArray;\n\t            var annoLength = annotations.length - 1;\n\t            var fn = fnOrArray[annoLength];\n\t            if (typeof fn !== 'function') {\n\t                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n\t            }\n\t            if (annoLength != fn.length) {\n\t                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n\t            }\n\t            var paramsAnnotations = [];\n\t            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n\t                var paramAnnotations = [];\n\t                paramsAnnotations.push(paramAnnotations);\n\t                var annotation = annotations[i];\n\t                if (Array.isArray(annotation)) {\n\t                    for (var j = 0; j < annotation.length; j++) {\n\t                        paramAnnotations.push(extractAnnotation(annotation[j]));\n\t                    }\n\t                }\n\t                else if (typeof annotation === 'function') {\n\t                    paramAnnotations.push(extractAnnotation(annotation));\n\t                }\n\t                else {\n\t                    paramAnnotations.push(annotation);\n\t                }\n\t            }\n\t            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n\t            return fn;\n\t        }\n\t        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n\t    }\n\t    /**\n\t     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n\t     *\n\t     * ## Basic Example\n\t     *\n\t     * ```\n\t     * var Greeter = ng.Class({\n\t     *   constructor: function(name) {\n\t     *     this.name = name;\n\t     *   },\n\t     *\n\t     *   greet: function() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class Greeter {\n\t     *   constructor(name) {\n\t     *     this.name = name;\n\t     *   }\n\t     *\n\t     *   greet() {\n\t     *     alert('Hello ' + this.name + '!');\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * or equivalent to ES5:\n\t     *\n\t     * ```\n\t     * var Greeter = function (name) {\n\t     *   this.name = name;\n\t     * }\n\t     *\n\t     * Greeter.prototype.greet = function () {\n\t     *   alert('Hello ' + this.name + '!');\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with parameter annotations\n\t     *\n\t     * ```\n\t     * var MyService = ng.Class({\n\t     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n\t     *     ...\n\t     *   }]\n\t     * });\n\t     * ```\n\t     *\n\t     * is equivalent to ES6:\n\t     *\n\t     * ```\n\t     * class MyService {\n\t     *   constructor(name: string, @Optional() myService: Service) {\n\t     *     ...\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * ### Example with inheritance\n\t     *\n\t     * ```\n\t     * var Shape = ng.Class({\n\t     *   constructor: (color) {\n\t     *     this.color = color;\n\t     *   }\n\t     * });\n\t     *\n\t     * var Square = ng.Class({\n\t     *   extends: Shape,\n\t     *   constructor: function(color, size) {\n\t     *     Shape.call(this, color);\n\t     *     this.size = size;\n\t     *   }\n\t     * });\n\t     * ```\n\t     * @stable\n\t     */\n\t    function Class(clsDef) {\n\t        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\t        var proto = constructor.prototype;\n\t        if (clsDef.hasOwnProperty('extends')) {\n\t            if (typeof clsDef.extends === 'function') {\n\t                constructor.prototype = proto =\n\t                    Object.create(clsDef.extends.prototype);\n\t            }\n\t            else {\n\t                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n\t            }\n\t        }\n\t        for (var key in clsDef) {\n\t            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n\t                proto[key] = applyParams(clsDef[key], key);\n\t            }\n\t        }\n\t        if (this && this.annotations instanceof Array) {\n\t            Reflect.defineMetadata('annotations', this.annotations, constructor);\n\t        }\n\t        var constructorName = constructor['name'];\n\t        if (!constructorName || constructorName === 'constructor') {\n\t            constructor['overriddenName'] = \"class\" + _nextClassId++;\n\t        }\n\t        return constructor;\n\t    }\n\t    function makeDecorator(name, props, parentClass, chainFn) {\n\t        if (chainFn === void 0) { chainFn = null; }\n\t        var metaCtor = makeMetadataCtor([props]);\n\t        function DecoratorFactory(objOrType) {\n\t            if (!(Reflect && Reflect.getMetadata)) {\n\t                throw 'reflect-metadata shim is required when using class decorators';\n\t            }\n\t            if (this instanceof DecoratorFactory) {\n\t                metaCtor.call(this, objOrType);\n\t                return this;\n\t            }\n\t            var annotationInstance = new DecoratorFactory(objOrType);\n\t            var chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n\t            chainAnnotation.push(annotationInstance);\n\t            var TypeDecorator = function TypeDecorator(cls) {\n\t                var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n\t                annotations.push(annotationInstance);\n\t                Reflect.defineMetadata('annotations', annotations, cls);\n\t                return cls;\n\t            };\n\t            TypeDecorator.annotations = chainAnnotation;\n\t            TypeDecorator.Class = Class;\n\t            if (chainFn)\n\t                chainFn(TypeDecorator);\n\t            return TypeDecorator;\n\t        }\n\t        if (parentClass) {\n\t            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        DecoratorFactory.annotationCls = DecoratorFactory;\n\t        return DecoratorFactory;\n\t    }\n\t    function makeMetadataCtor(props) {\n\t        return function ctor() {\n\t            var _this = this;\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            props.forEach(function (prop, i) {\n\t                var argVal = args[i];\n\t                if (Array.isArray(prop)) {\n\t                    // plain parameter\n\t                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n\t                }\n\t                else {\n\t                    for (var propName in prop) {\n\t                        _this[propName] =\n\t                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n\t                    }\n\t                }\n\t            });\n\t        };\n\t    }\n\t    function makeParamDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function ParamDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof ParamDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t            ParamDecorator.annotation = annotationInstance;\n\t            return ParamDecorator;\n\t            function ParamDecorator(cls, unusedKey, index) {\n\t                var parameters = Reflect.getMetadata('parameters', cls) || [];\n\t                // there might be gaps if some in between parameters do not have annotations.\n\t                // we pad with nulls.\n\t                while (parameters.length <= index) {\n\t                    parameters.push(null);\n\t                }\n\t                parameters[index] = parameters[index] || [];\n\t                parameters[index].push(annotationInstance);\n\t                Reflect.defineMetadata('parameters', parameters, cls);\n\t                return cls;\n\t            }\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n\t        return ParamDecoratorFactory;\n\t    }\n\t    function makePropDecorator(name, props, parentClass) {\n\t        var metaCtor = makeMetadataCtor(props);\n\t        function PropDecoratorFactory() {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            if (this instanceof PropDecoratorFactory) {\n\t                metaCtor.apply(this, args);\n\t                return this;\n\t            }\n\t            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n\t            return function PropDecorator(target, name) {\n\t                var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n\t                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n\t                meta[name].unshift(decoratorInstance);\n\t                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n\t            };\n\t            var _a;\n\t        }\n\t        if (parentClass) {\n\t            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n\t        }\n\t        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n\t        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n\t        return PropDecoratorFactory;\n\t    }\n\t\n\t    /**\n\t     * Inject decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n\t    /**\n\t     * Optional decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Optional = makeParamDecorator('Optional', []);\n\t    /**\n\t     * Injectable decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Injectable = makeParamDecorator('Injectable', []);\n\t    /**\n\t     * Self decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Self = makeParamDecorator('Self', []);\n\t    /**\n\t     * SkipSelf decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var SkipSelf = makeParamDecorator('SkipSelf', []);\n\t    /**\n\t     * Host decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Host = makeParamDecorator('Host', []);\n\t\n\t    /**\n\t     * Creates a token that can be used in a DI Provider.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n\t     *\n\t     * ```typescript\n\t     * var t = new OpaqueToken(\"value\");\n\t     *\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: t, useValue: \"bindingValue\"}\n\t     * ]);\n\t     *\n\t     * expect(injector.get(t)).toEqual(\"bindingValue\");\n\t     * ```\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n\t     * caused by multiple providers using the same string as two different tokens.\n\t     *\n\t     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n\t     * error messages.\n\t     * @stable\n\t     */\n\t    // so that metadata is gathered for this class\n\t    var OpaqueToken = (function () {\n\t        function OpaqueToken(_desc) {\n\t            this._desc = _desc;\n\t        }\n\t        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n\t        OpaqueToken.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        OpaqueToken.ctorParameters = [\n\t            null,\n\t        ];\n\t        return OpaqueToken;\n\t    }());\n\t\n\t    /**\n\t     * This token can be used to create a virtual provider that will populate the\n\t     * `entryComponents` fields of components and ng modules based on its `useValue`.\n\t     * All components that are referenced in the `useValue` value (either directly\n\t     * or in a nested array or map) will be added to the `entryComponents` property.\n\t     *\n\t     * ### Example\n\t     * The following example shows how the router can populate the `entryComponents`\n\t     * field of an NgModule based on the router configuration which refers\n\t     * to components.\n\t     *\n\t     * ```typescript\n\t     * // helper function inside the router\n\t     * function provideRoutes(routes) {\n\t     *   return [\n\t     *     {provide: ROUTES, useValue: routes},\n\t     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n\t     *   ];\n\t     * }\n\t     *\n\t     * // user code\n\t     * let routes = [\n\t     *   {path: '/root', component: RootComp},\n\t     *   {path: '/teams', component: TeamsComp}\n\t     * ];\n\t     *\n\t     * @NgModule({\n\t     *   providers: [provideRoutes(routes)]\n\t     * })\n\t     * class ModuleWithRoutes {}\n\t     * ```\n\t     *\n\t     * @experimental\n\t     */\n\t    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n\t    /**\n\t     * Attribute decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\t    /**\n\t     * Base class for query metadata.\n\t     *\n\t     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n\t     * more information.\n\t     *\n\t     * @stable\n\t     */\n\t    var Query = (function () {\n\t        function Query() {\n\t        }\n\t        return Query;\n\t    }());\n\t    /**\n\t     * ContentChildren decorator and metadata.\n\t     *\n\t     *  @stable\n\t     *  @Annotation\n\t     */\n\t    var ContentChildren = makePropDecorator('ContentChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: false,\n\t            descendants: false,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a content query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ContentChild to get the first element or the directive matching the selector from the\n\t     * content DOM. If the content DOM changes, and a new child matches the selector,\n\t     * the property will be updated.\n\t     *\n\t     * Content queries are set before the `ngAfterContentInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried element.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ContentChild = makePropDecorator('ContentChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: false,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * @whatItDoes Configures a view query.\n\t     *\n\t     * @howToUse\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n\t     *\n\t     * @description\n\t     *\n\t     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n\t     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n\t     * and the changes observable of the query list will emit a new value.\n\t     *\n\t     * View queries are set before the `ngAfterViewInit` callback is called.\n\t     *\n\t     * **Metadata Properties**:\n\t     *\n\t     * * **selector** - the directive type or the name used for querying.\n\t     * * **read** - read a different token from the queried elements.\n\t     *\n\t     * Let's look at an example:\n\t     *\n\t     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `@angular/core`\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChildren = makePropDecorator('ViewChildren', [\n\t        ['selector', undefined], {\n\t            first: false,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t    /**\n\t     * ViewChild decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var ViewChild = makePropDecorator('ViewChild', [\n\t        ['selector', undefined], {\n\t            first: true,\n\t            isViewQuery: true,\n\t            descendants: true,\n\t            read: undefined,\n\t        }\n\t    ], Query);\n\t\n\t    /**\n\t     * Describes within the change detector which strategy will be used the next time change\n\t     * detection is triggered.\n\t     * @stable\n\t     */\n\t    exports.ChangeDetectionStrategy;\n\t    (function (ChangeDetectionStrategy) {\n\t        /**\n\t         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n\t        /**\n\t         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n\t         */\n\t        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n\t    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n\t    /**\n\t     * Describes the status of the detector.\n\t     */\n\t    var ChangeDetectorStatus;\n\t    (function (ChangeDetectorStatus) {\n\t        /**\n\t         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n\t         * will become `Checked`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n\t        /**\n\t         * `Checked` means that the change detector should be skipped until its mode changes to\n\t         * `CheckOnce`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n\t        /**\n\t         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n\t         * will remain `CheckAlways`.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n\t        /**\n\t         * `Detached` means that the change detector sub tree is not a part of the main tree and\n\t         * should be skipped.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n\t        /**\n\t         * `Errored` means that the change detector encountered an error checking a binding\n\t         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n\t         * detectors in this state will no longer detect changes.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n\t        /**\n\t         * `Destroyed` means that the change detector is destroyed.\n\t         */\n\t        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n\t    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n\t    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n\t        return isBlank(changeDetectionStrategy) ||\n\t            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n\t    }\n\t\n\t    /**\n\t     * Directive decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Directive = makeDecorator('Directive', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        providers: undefined,\n\t        exportAs: undefined,\n\t        queries: undefined\n\t    });\n\t    /**\n\t     * Component decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Component = makeDecorator('Component', {\n\t        selector: undefined,\n\t        inputs: undefined,\n\t        outputs: undefined,\n\t        host: undefined,\n\t        exportAs: undefined,\n\t        moduleId: undefined,\n\t        providers: undefined,\n\t        viewProviders: undefined,\n\t        changeDetection: exports.ChangeDetectionStrategy.Default,\n\t        queries: undefined,\n\t        templateUrl: undefined,\n\t        template: undefined,\n\t        styleUrls: undefined,\n\t        styles: undefined,\n\t        animations: undefined,\n\t        encapsulation: undefined,\n\t        interpolation: undefined,\n\t        entryComponents: undefined\n\t    }, Directive);\n\t    /**\n\t     * Pipe decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Pipe = makeDecorator('Pipe', {\n\t        name: undefined,\n\t        pure: true,\n\t    });\n\t    /**\n\t     * Input decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * Output decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\t    /**\n\t     * HostBinding decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var LifecycleHooks;\n\t    (function (LifecycleHooks) {\n\t        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n\t        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n\t        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n\t        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n\t        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n\t    })(LifecycleHooks || (LifecycleHooks = {}));\n\t    var LIFECYCLE_HOOKS_VALUES = [\n\t        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n\t        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n\t        LifecycleHooks.AfterViewChecked\n\t    ];\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n\t     *\n\t     * @description\n\t     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n\t     * and content children are checked if at least one of them has changed.\n\t     * The `changes` parameter contains the changed properties.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnChanges = (function () {\n\t        function OnChanges() {\n\t        }\n\t        return OnChanges;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n\t     *\n\t     * @description\n\t     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n\t     * first time, and before any of its children have been checked. It is invoked only once when the\n\t     * directive is instantiated.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnInit = (function () {\n\t        function OnInit() {\n\t        }\n\t        return OnInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n\t     *\n\t     * @description\n\t     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n\t     * algorithm. The default change detection algorithm looks for differences by comparing\n\t     * bound-property values by reference across change detection runs.\n\t     *\n\t     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n\t     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n\t     * detector detects changes.\n\t     *\n\t     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n\t     * for collections.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var DoCheck = (function () {\n\t        function DoCheck() {\n\t        }\n\t        return DoCheck;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n\t     *\n\t     * @description\n\t     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n\t     * instance is destroyed.\n\t     *\n\t     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var OnDestroy = (function () {\n\t        function OnDestroy() {\n\t        }\n\t        return OnDestroy;\n\t    }());\n\t    /**\n\t     *\n\t     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentInit = (function () {\n\t        function AfterContentInit() {\n\t        }\n\t        return AfterContentInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterContentChecked = (function () {\n\t        function AfterContentChecked() {\n\t        }\n\t        return AfterContentChecked;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n\t     * initialized.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewInit = (function () {\n\t        function AfterViewInit() {\n\t        }\n\t        return AfterViewInit;\n\t    }());\n\t    /**\n\t     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n\t     * @howToUse\n\t     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n\t     *\n\t     * @description\n\t     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n\t     *\n\t     * @stable\n\t     */\n\t    var AfterViewChecked = (function () {\n\t        function AfterViewChecked() {\n\t        }\n\t        return AfterViewChecked;\n\t    }());\n\t\n\t    /**\n\t     * Defines a schema that will allow:\n\t     * - any non-Angular elements with a `-` in their name,\n\t     * - any properties on elements with a `-` in their name which is the common rule for custom\n\t     * elements.\n\t     *\n\t     * @stable\n\t     */\n\t    var CUSTOM_ELEMENTS_SCHEMA = {\n\t        name: 'custom-elements'\n\t    };\n\t    /**\n\t     * Defines a schema that will allow any property on any element.\n\t     *\n\t     * @experimental\n\t     */\n\t    var NO_ERRORS_SCHEMA = {\n\t        name: 'no-errors-schema'\n\t    };\n\t    /**\n\t     * NgModule decorator and metadata.\n\t     *\n\t     * @stable\n\t     * @Annotation\n\t     */\n\t    var NgModule = makeDecorator('NgModule', {\n\t        providers: undefined,\n\t        declarations: undefined,\n\t        imports: undefined,\n\t        exports: undefined,\n\t        entryComponents: undefined,\n\t        bootstrap: undefined,\n\t        schemas: undefined,\n\t        id: undefined,\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Defines template and style encapsulation options available for Component's {@link Component}.\n\t     *\n\t     * See {@link ViewMetadata#encapsulation}.\n\t     * @stable\n\t     */\n\t    exports.ViewEncapsulation;\n\t    (function (ViewEncapsulation) {\n\t        /**\n\t         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n\t         * Element and pre-processing the style rules provided via\n\t         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n\t         * attribute to all selectors.\n\t         *\n\t         * This is the default option.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n\t        /**\n\t         * Use the native encapsulation mechanism of the renderer.\n\t         *\n\t         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n\t         * creating a ShadowRoot for Component's Host Element.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n\t        /**\n\t         * Don't provide any template or style encapsulation.\n\t         */\n\t        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n\t    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\t    /**\n\t     * Metadata properties available for configuring Views.\n\t     *\n\t     * For details on the `@Component` annotation, see {@link Component}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'greet',\n\t     *   template: 'Hello {{name}}!',\n\t     * })\n\t     * class Greet {\n\t     *   name: string;\n\t     *\n\t     *   constructor() {\n\t     *     this.name = 'World';\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @deprecated Use Component instead.\n\t     *\n\t     * {@link Component}\n\t     */\n\t    var ViewMetadata = (function () {\n\t        function ViewMetadata(_a) {\n\t            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n\t            this.templateUrl = templateUrl;\n\t            this.template = template;\n\t            this.styleUrls = styleUrls;\n\t            this.styles = styles;\n\t            this.encapsulation = encapsulation;\n\t            this.animations = animations;\n\t            this.interpolation = interpolation;\n\t        }\n\t        return ViewMetadata;\n\t    }());\n\t\n\t    /**\n\t     * Allows to refer to references which are not yet defined.\n\t     *\n\t     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n\t     * DI is declared,\n\t     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n\t     * yet defined.\n\t     *\n\t     * ### Example\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n\t     * @experimental\n\t     */\n\t    function forwardRef(forwardRefFn) {\n\t        forwardRefFn.__forward_ref__ = forwardRef;\n\t        forwardRefFn.toString = function () { return stringify(this()); };\n\t        return forwardRefFn;\n\t    }\n\t    /**\n\t     * Lazily retrieves the reference value from a forwardRef.\n\t     *\n\t     * Acts as the identity function when given a non-forward-ref value.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n\t     *\n\t     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n\t     *\n\t     * See: {@link forwardRef}\n\t     * @experimental\n\t     */\n\t    function resolveForwardRef(type) {\n\t        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n\t            type.__forward_ref__ === forwardRef) {\n\t            return type();\n\t        }\n\t        else {\n\t            return type;\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * @stable\n\t     */\n\t    var BaseError = (function (_super) {\n\t        __extends(BaseError, _super);\n\t        function BaseError(message) {\n\t            // Errors don't use current this, instead they create a new instance.\n\t            // We have to do forward all of our api to the nativeInstance.\n\t            var nativeError = _super.call(this, message);\n\t            this._nativeError = nativeError;\n\t        }\n\t        Object.defineProperty(BaseError.prototype, \"message\", {\n\t            get: function () { return this._nativeError.message; },\n\t            set: function (message) { this._nativeError.message = message; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"name\", {\n\t            get: function () { return this._nativeError.name; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(BaseError.prototype, \"stack\", {\n\t            get: function () { return this._nativeError.stack; },\n\t            set: function (value) { this._nativeError.stack = value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n\t        return BaseError;\n\t    }(Error));\n\t    /**\n\t     * @stable\n\t     */\n\t    var WrappedError = (function (_super) {\n\t        __extends(WrappedError, _super);\n\t        function WrappedError(message, error) {\n\t            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n\t            this.originalError = error;\n\t        }\n\t        Object.defineProperty(WrappedError.prototype, \"stack\", {\n\t            get: function () {\n\t                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n\t                    .stack;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return WrappedError;\n\t    }(BaseError));\n\t\n\t    var _THROW_IF_NOT_FOUND = new Object();\n\t    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t    var _NullInjector = (function () {\n\t        function _NullInjector() {\n\t        }\n\t        _NullInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n\t            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n\t                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n\t            }\n\t            return notFoundValue;\n\t        };\n\t        return _NullInjector;\n\t    }());\n\t    /**\n\t     * @whatItDoes Injector interface\n\t     * @howToUse\n\t     * ```\n\t     * const injector: Injector = ...;\n\t     * injector.get(...);\n\t     * ```\n\t     *\n\t     * @description\n\t     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/di/ts/injector_spec.ts region='Injector'}\n\t     *\n\t     * `Injector` returns itself when given `Injector` as a token:\n\t     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n\t     *\n\t     * @stable\n\t     */\n\t    var Injector = (function () {\n\t        function Injector() {\n\t        }\n\t        /**\n\t         * Retrieves an instance from the injector based on the provided token.\n\t         * If not found:\n\t         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n\t         * Injector.THROW_IF_NOT_FOUND is given\n\t         * - Returns the `notFoundValue` otherwise\n\t         */\n\t        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n\t        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\t        Injector.NULL = new _NullInjector();\n\t        return Injector;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    function findFirstClosedCycle(keys) {\n\t        var res = [];\n\t        for (var i = 0; i < keys.length; ++i) {\n\t            if (res.indexOf(keys[i]) > -1) {\n\t                res.push(keys[i]);\n\t                return res;\n\t            }\n\t            res.push(keys[i]);\n\t        }\n\t        return res;\n\t    }\n\t    function constructResolvingPath(keys) {\n\t        if (keys.length > 1) {\n\t            var reversed = findFirstClosedCycle(keys.slice().reverse());\n\t            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n\t            return ' (' + tokenStrs.join(' -> ') + ')';\n\t        }\n\t        return '';\n\t    }\n\t    /**\n\t     * Base class for all errors arising from misconfigured providers.\n\t     * @stable\n\t     */\n\t    var AbstractProviderError = (function (_super) {\n\t        __extends$1(AbstractProviderError, _super);\n\t        function AbstractProviderError(injector, key, constructResolvingMessage) {\n\t            _super.call(this, 'DI Error');\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t            this.constructResolvingMessage = constructResolvingMessage;\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        }\n\t        AbstractProviderError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t            this.message = this.constructResolvingMessage(this.keys);\n\t        };\n\t        return AbstractProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n\t     * {@link Injector} does not have a {@link Provider} for the given key.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b:B) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoProviderError = (function (_super) {\n\t        __extends$1(NoProviderError, _super);\n\t        function NoProviderError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                var first = stringify(keys[0].token);\n\t                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return NoProviderError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when dependencies form a cycle.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n\t     *\n\t     * ```typescript\n\t     * var injector = Injector.resolveAndCreate([\n\t     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n\t     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n\t     * ]);\n\t     *\n\t     * expect(() => injector.get(\"one\")).toThrowError();\n\t     * ```\n\t     *\n\t     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n\t     * @stable\n\t     */\n\t    var CyclicDependencyError = (function (_super) {\n\t        __extends$1(CyclicDependencyError, _super);\n\t        function CyclicDependencyError(injector, key) {\n\t            _super.call(this, injector, key, function (keys) {\n\t                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n\t            });\n\t        }\n\t        return CyclicDependencyError;\n\t    }(AbstractProviderError));\n\t    /**\n\t     * Thrown when a constructing type returns with an Error.\n\t     *\n\t     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n\t     * this object to be instantiated.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor() {\n\t     *     throw new Error('message');\n\t     *   }\n\t     * }\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t\n\t     * try {\n\t     *   injector.get(A);\n\t     * } catch (e) {\n\t     *   expect(e instanceof InstantiationError).toBe(true);\n\t     *   expect(e.originalException.message).toEqual(\"message\");\n\t     *   expect(e.originalStack).toBeDefined();\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InstantiationError = (function (_super) {\n\t        __extends$1(InstantiationError, _super);\n\t        function InstantiationError(injector, originalException, originalStack, key) {\n\t            _super.call(this, 'DI Error', originalException);\n\t            this.keys = [key];\n\t            this.injectors = [injector];\n\t        }\n\t        InstantiationError.prototype.addKey = function (injector, key) {\n\t            this.injectors.push(injector);\n\t            this.keys.push(key);\n\t        };\n\t        Object.defineProperty(InstantiationError.prototype, \"message\", {\n\t            get: function () {\n\t                var first = stringify(this.keys[0].token);\n\t                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n\t            get: function () { return this.keys[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return InstantiationError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n\t     * creation.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var InvalidProviderError = (function (_super) {\n\t        __extends$1(InvalidProviderError, _super);\n\t        function InvalidProviderError(provider) {\n\t            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n\t        }\n\t        return InvalidProviderError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when the class has no annotation information.\n\t     *\n\t     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n\t     * need to be injected into the constructor.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {\n\t     *   constructor(b) {}\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n\t     * ```\n\t     *\n\t     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n\t     *\n\t     * ```typescript\n\t     * class B {}\n\t     *\n\t     * class A {\n\t     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n\t     * }\n\t     *\n\t     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var NoAnnotationError = (function (_super) {\n\t        __extends$1(NoAnnotationError, _super);\n\t        function NoAnnotationError(typeOrFunc, params) {\n\t            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n\t        }\n\t        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n\t            var signature = [];\n\t            for (var i = 0, ii = params.length; i < ii; i++) {\n\t                var parameter = params[i];\n\t                if (!parameter || parameter.length == 0) {\n\t                    signature.push('?');\n\t                }\n\t                else {\n\t                    signature.push(parameter.map(stringify).join(' '));\n\t                }\n\t            }\n\t            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n\t                signature.join(', ') + '). ' +\n\t                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n\t                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n\t        };\n\t        return NoAnnotationError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when getting an object by index.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n\t     *\n\t     * ```typescript\n\t     * class A {}\n\t     *\n\t     * var injector = Injector.resolveAndCreate([A]);\n\t     *\n\t     * expect(() => injector.getAt(100)).toThrowError();\n\t     * ```\n\t     * @stable\n\t     */\n\t    var OutOfBoundsError = (function (_super) {\n\t        __extends$1(OutOfBoundsError, _super);\n\t        function OutOfBoundsError(index) {\n\t            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n\t        }\n\t        return OutOfBoundsError;\n\t    }(BaseError));\n\t    // TODO: add a working example after alpha38 is released\n\t    /**\n\t     * Thrown when a multi provider and a regular provider are bound to the same token.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * expect(() => Injector.resolveAndCreate([\n\t     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n\t     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n\t     * ])).toThrowError();\n\t     * ```\n\t     */\n\t    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n\t        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n\t        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n\t            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n\t                provider2.toString());\n\t        }\n\t        return MixingMultiProvidersWithRegularProvidersError;\n\t    }(BaseError));\n\t\n\t    /**\n\t     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n\t     *\n\t     * Keys have:\n\t     * - a system-wide unique `id`.\n\t     * - a `token`.\n\t     *\n\t     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n\t     * the\n\t     * injector to store created objects in a more efficient way.\n\t     *\n\t     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n\t     * resolving\n\t     * providers.\n\t     * @experimental\n\t     */\n\t    var ReflectiveKey = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveKey(token, id) {\n\t            this.token = token;\n\t            this.id = id;\n\t            if (!token) {\n\t                throw new Error('Token must be defined!');\n\t            }\n\t        }\n\t        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n\t            /**\n\t             * Returns a stringified token.\n\t             */\n\t            get: function () { return stringify(this.token); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Retrieves a `Key` for a token.\n\t         */\n\t        ReflectiveKey.get = function (token) {\n\t            return _globalKeyRegistry.get(resolveForwardRef(token));\n\t        };\n\t        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n\t            /**\n\t             * @returns the number of keys registered in the system.\n\t             */\n\t            get: function () { return _globalKeyRegistry.numberOfKeys; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ReflectiveKey;\n\t    }());\n\t    /**\n\t     * @internal\n\t     */\n\t    var KeyRegistry = (function () {\n\t        function KeyRegistry() {\n\t            this._allKeys = new Map();\n\t        }\n\t        KeyRegistry.prototype.get = function (token) {\n\t            if (token instanceof ReflectiveKey)\n\t                return token;\n\t            if (this._allKeys.has(token)) {\n\t                return this._allKeys.get(token);\n\t            }\n\t            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n\t            this._allKeys.set(token, newKey);\n\t            return newKey;\n\t        };\n\t        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n\t            get: function () { return this._allKeys.size; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return KeyRegistry;\n\t    }());\n\t    var _globalKeyRegistry = new KeyRegistry();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Represents a type that a Component or other object is instances of.\n\t     *\n\t     * @description\n\t     *\n\t     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n\t     * the `MyCustomComponent` constructor function.\n\t     *\n\t     * @stable\n\t     */\n\t    var Type = Function;\n\t\n\t    var ReflectionCapabilities = (function () {\n\t        function ReflectionCapabilities(reflect) {\n\t            this._reflect = reflect || global$1.Reflect;\n\t        }\n\t        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n\t        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n\t            var args = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                args[_i - 0] = arguments[_i];\n\t            }\n\t            return new (t.bind.apply(t, [void 0].concat(args)))();\n\t        }; };\n\t        /** @internal */\n\t        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n\t            var result;\n\t            if (typeof paramTypes === 'undefined') {\n\t                result = new Array(paramAnnotations.length);\n\t            }\n\t            else {\n\t                result = new Array(paramTypes.length);\n\t            }\n\t            for (var i = 0; i < result.length; i++) {\n\t                // TS outputs Object for parameters without types, while Traceur omits\n\t                // the annotations. For now we preserve the Traceur behavior to aid\n\t                // migration, but this can be revisited.\n\t                if (typeof paramTypes === 'undefined') {\n\t                    result[i] = [];\n\t                }\n\t                else if (paramTypes[i] != Object) {\n\t                    result[i] = [paramTypes[i]];\n\t                }\n\t                else {\n\t                    result[i] = [];\n\t                }\n\t                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n\t                    result[i] = result[i].concat(paramAnnotations[i]);\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        ReflectionCapabilities.prototype.parameters = function (type) {\n\t            // Prefer the direct API.\n\t            if (type.parameters) {\n\t                return type.parameters;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (type.ctorParameters) {\n\t                var ctorParameters = type.ctorParameters;\n\t                var paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n\t                var paramAnnotations = ctorParameters.map(function (ctorParam) {\n\t                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n\t                });\n\t                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n\t                var paramAnnotations = this._reflect.getMetadata('parameters', type);\n\t                var paramTypes = this._reflect.getMetadata('design:paramtypes', type);\n\t                if (paramTypes || paramAnnotations) {\n\t                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n\t                }\n\t            }\n\t            // The array has to be filled with `undefined` because holes would be skipped by `some`\n\t            return new Array(type.length).fill(undefined);\n\t        };\n\t        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (typeOrFunc.annotations) {\n\t                var annotations = typeOrFunc.annotations;\n\t                if (typeof annotations === 'function' && annotations.annotations) {\n\t                    annotations = annotations.annotations;\n\t                }\n\t                return annotations;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (typeOrFunc.decorators) {\n\t                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getMetadata) {\n\t                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n\t                if (annotations)\n\t                    return annotations;\n\t            }\n\t            return [];\n\t        };\n\t        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n\t            // Prefer the direct API.\n\t            if (typeOrFunc.propMetadata) {\n\t                var propMetadata = typeOrFunc.propMetadata;\n\t                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n\t                    propMetadata = propMetadata.propMetadata;\n\t                }\n\t                return propMetadata;\n\t            }\n\t            // API of tsickle for lowering decorators to properties on the class.\n\t            if (typeOrFunc.propDecorators) {\n\t                var propDecorators_1 = typeOrFunc.propDecorators;\n\t                var propMetadata_1 = {};\n\t                Object.keys(propDecorators_1).forEach(function (prop) {\n\t                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n\t                });\n\t                return propMetadata_1;\n\t            }\n\t            // API for metadata created by invoking the decorators.\n\t            if (this._reflect && this._reflect.getMetadata) {\n\t                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n\t                if (propMetadata)\n\t                    return propMetadata;\n\t            }\n\t            return {};\n\t        };\n\t        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return type instanceof Type && lcProperty in type.prototype;\n\t        };\n\t        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n\t        ReflectionCapabilities.prototype.setter = function (name) {\n\t            return new Function('o', 'v', 'return o.' + name + ' = v;');\n\t        };\n\t        ReflectionCapabilities.prototype.method = function (name) {\n\t            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n\t            return new Function('o', 'args', functionBody);\n\t        };\n\t        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n\t        ReflectionCapabilities.prototype.importUri = function (type) {\n\t            // StaticSymbol\n\t            if (typeof type === 'object' && type['filePath']) {\n\t                return type['filePath'];\n\t            }\n\t            // Runtime type\n\t            return \"./\" + stringify(type);\n\t        };\n\t        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n\t        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n\t        return ReflectionCapabilities;\n\t    }());\n\t    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n\t        if (!decoratorInvocations) {\n\t            return [];\n\t        }\n\t        return decoratorInvocations.map(function (decoratorInvocation) {\n\t            var decoratorType = decoratorInvocation.type;\n\t            var annotationCls = decoratorType.annotationCls;\n\t            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n\t            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n\t        });\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Provides read-only access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var ReflectorReader = (function () {\n\t        function ReflectorReader() {\n\t        }\n\t        return ReflectorReader;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Provides access to reflection data about symbols. Used internally by Angular\n\t     * to power dependency injection and compilation.\n\t     */\n\t    var Reflector = (function (_super) {\n\t        __extends$2(Reflector, _super);\n\t        function Reflector(reflectionCapabilities) {\n\t            _super.call(this);\n\t            this.reflectionCapabilities = reflectionCapabilities;\n\t        }\n\t        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n\t        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n\t        Reflector.prototype.parameters = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.parameters(typeOrFunc);\n\t        };\n\t        Reflector.prototype.annotations = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.annotations(typeOrFunc);\n\t        };\n\t        Reflector.prototype.propMetadata = function (typeOrFunc) {\n\t            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n\t        };\n\t        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n\t            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n\t        };\n\t        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n\t        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n\t        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n\t        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n\t        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n\t            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n\t        };\n\t        Reflector.prototype.resolveEnum = function (identifier, name) {\n\t            return this.reflectionCapabilities.resolveEnum(identifier, name);\n\t        };\n\t        return Reflector;\n\t    }(ReflectorReader));\n\t\n\t    /**\n\t     * The {@link Reflector} used internally in Angular to access metadata\n\t     * about symbols.\n\t     */\n\t    var reflector = new Reflector(new ReflectionCapabilities());\n\t\n\t    /**\n\t     * `Dependency` is used by the framework to extend DI.\n\t     * This is internal to Angular and should not be used directly.\n\t     */\n\t    var ReflectiveDependency = (function () {\n\t        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n\t            this.key = key;\n\t            this.optional = optional;\n\t            this.lowerBoundVisibility = lowerBoundVisibility;\n\t            this.upperBoundVisibility = upperBoundVisibility;\n\t            this.properties = properties;\n\t        }\n\t        ReflectiveDependency.fromKey = function (key) {\n\t            return new ReflectiveDependency(key, false, null, null, []);\n\t        };\n\t        return ReflectiveDependency;\n\t    }());\n\t    var _EMPTY_LIST = [];\n\t    var ResolvedReflectiveProvider_ = (function () {\n\t        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n\t            this.key = key;\n\t            this.resolvedFactories = resolvedFactories;\n\t            this.multiProvider = multiProvider;\n\t        }\n\t        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n\t            get: function () { return this.resolvedFactories[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ResolvedReflectiveProvider_;\n\t    }());\n\t    /**\n\t     * An internal resolved representation of a factory function created by resolving {@link\n\t     * Provider}.\n\t     * @experimental\n\t     */\n\t    var ResolvedReflectiveFactory = (function () {\n\t        function ResolvedReflectiveFactory(\n\t            /**\n\t             * Factory function which can return an instance of an object represented by a key.\n\t             */\n\t            factory,\n\t            /**\n\t             * Arguments (dependencies) to the `factory` function.\n\t             */\n\t            dependencies) {\n\t            this.factory = factory;\n\t            this.dependencies = dependencies;\n\t        }\n\t        return ResolvedReflectiveFactory;\n\t    }());\n\t    /**\n\t     * Resolve a single provider.\n\t     */\n\t    function resolveReflectiveFactory(provider) {\n\t        var factoryFn;\n\t        var resolvedDeps;\n\t        if (provider.useClass) {\n\t            var useClass = resolveForwardRef(provider.useClass);\n\t            factoryFn = reflector.factory(useClass);\n\t            resolvedDeps = _dependenciesFor(useClass);\n\t        }\n\t        else if (provider.useExisting) {\n\t            factoryFn = function (aliasInstance) { return aliasInstance; };\n\t            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n\t        }\n\t        else if (provider.useFactory) {\n\t            factoryFn = provider.useFactory;\n\t            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n\t        }\n\t        else {\n\t            factoryFn = function () { return provider.useValue; };\n\t            resolvedDeps = _EMPTY_LIST;\n\t        }\n\t        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n\t    }\n\t    /**\n\t     * Converts the {@link Provider} into {@link ResolvedProvider}.\n\t     *\n\t     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n\t     * convenience provider syntax.\n\t     */\n\t    function resolveReflectiveProvider(provider) {\n\t        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n\t    }\n\t    /**\n\t     * Resolve a list of Providers.\n\t     */\n\t    function resolveReflectiveProviders(providers) {\n\t        var normalized = _normalizeProviders(providers, []);\n\t        var resolved = normalized.map(resolveReflectiveProvider);\n\t        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n\t        return Array.from(resolvedProviderMap.values());\n\t    }\n\t    /**\n\t     * Merges a list of ResolvedProviders into a list where\n\t     * each key is contained exactly once and multi providers\n\t     * have been merged.\n\t     */\n\t    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n\t        for (var i = 0; i < providers.length; i++) {\n\t            var provider = providers[i];\n\t            var existing = normalizedProvidersMap.get(provider.key.id);\n\t            if (existing) {\n\t                if (provider.multiProvider !== existing.multiProvider) {\n\t                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n\t                }\n\t                if (provider.multiProvider) {\n\t                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n\t                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n\t                    }\n\t                }\n\t                else {\n\t                    normalizedProvidersMap.set(provider.key.id, provider);\n\t                }\n\t            }\n\t            else {\n\t                var resolvedProvider = void 0;\n\t                if (provider.multiProvider) {\n\t                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n\t                }\n\t                else {\n\t                    resolvedProvider = provider;\n\t                }\n\t                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n\t            }\n\t        }\n\t        return normalizedProvidersMap;\n\t    }\n\t    function _normalizeProviders(providers, res) {\n\t        providers.forEach(function (b) {\n\t            if (b instanceof Type) {\n\t                res.push({ provide: b, useClass: b });\n\t            }\n\t            else if (b && typeof b == 'object' && b.provide !== undefined) {\n\t                res.push(b);\n\t            }\n\t            else if (b instanceof Array) {\n\t                _normalizeProviders(b, res);\n\t            }\n\t            else {\n\t                throw new InvalidProviderError(b);\n\t            }\n\t        });\n\t        return res;\n\t    }\n\t    function constructDependencies(typeOrFunc, dependencies) {\n\t        if (!dependencies) {\n\t            return _dependenciesFor(typeOrFunc);\n\t        }\n\t        else {\n\t            var params_1 = dependencies.map(function (t) { return [t]; });\n\t            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n\t        }\n\t    }\n\t    function _dependenciesFor(typeOrFunc) {\n\t        var params = reflector.parameters(typeOrFunc);\n\t        if (!params)\n\t            return [];\n\t        if (params.some(function (p) { return p == null; })) {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n\t    }\n\t    function _extractToken(typeOrFunc, metadata, params) {\n\t        var depProps = [];\n\t        var token = null;\n\t        var optional = false;\n\t        if (!Array.isArray(metadata)) {\n\t            if (metadata instanceof Inject) {\n\t                return _createDependency(metadata.token, optional, null, null, depProps);\n\t            }\n\t            else {\n\t                return _createDependency(metadata, optional, null, null, depProps);\n\t            }\n\t        }\n\t        var lowerBoundVisibility = null;\n\t        var upperBoundVisibility = null;\n\t        for (var i = 0; i < metadata.length; ++i) {\n\t            var paramMetadata = metadata[i];\n\t            if (paramMetadata instanceof Type) {\n\t                token = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Inject) {\n\t                token = paramMetadata.token;\n\t            }\n\t            else if (paramMetadata instanceof Optional) {\n\t                optional = true;\n\t            }\n\t            else if (paramMetadata instanceof Self) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof Host) {\n\t                upperBoundVisibility = paramMetadata;\n\t            }\n\t            else if (paramMetadata instanceof SkipSelf) {\n\t                lowerBoundVisibility = paramMetadata;\n\t            }\n\t        }\n\t        token = resolveForwardRef(token);\n\t        if (token != null) {\n\t            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t        }\n\t        else {\n\t            throw new NoAnnotationError(typeOrFunc, params);\n\t        }\n\t    }\n\t    function _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps) {\n\t        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n\t    }\n\t\n\t    // Threshold for the dynamic version\n\t    var _MAX_CONSTRUCTION_COUNTER = 10;\n\t    var UNDEFINED = new Object();\n\t    var ReflectiveProtoInjectorInlineStrategy = (function () {\n\t        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n\t            this.provider0 = null;\n\t            this.provider1 = null;\n\t            this.provider2 = null;\n\t            this.provider3 = null;\n\t            this.provider4 = null;\n\t            this.provider5 = null;\n\t            this.provider6 = null;\n\t            this.provider7 = null;\n\t            this.provider8 = null;\n\t            this.provider9 = null;\n\t            this.keyId0 = null;\n\t            this.keyId1 = null;\n\t            this.keyId2 = null;\n\t            this.keyId3 = null;\n\t            this.keyId4 = null;\n\t            this.keyId5 = null;\n\t            this.keyId6 = null;\n\t            this.keyId7 = null;\n\t            this.keyId8 = null;\n\t            this.keyId9 = null;\n\t            var length = providers.length;\n\t            if (length > 0) {\n\t                this.provider0 = providers[0];\n\t                this.keyId0 = providers[0].key.id;\n\t            }\n\t            if (length > 1) {\n\t                this.provider1 = providers[1];\n\t                this.keyId1 = providers[1].key.id;\n\t            }\n\t            if (length > 2) {\n\t                this.provider2 = providers[2];\n\t                this.keyId2 = providers[2].key.id;\n\t            }\n\t            if (length > 3) {\n\t                this.provider3 = providers[3];\n\t                this.keyId3 = providers[3].key.id;\n\t            }\n\t            if (length > 4) {\n\t                this.provider4 = providers[4];\n\t                this.keyId4 = providers[4].key.id;\n\t            }\n\t            if (length > 5) {\n\t                this.provider5 = providers[5];\n\t                this.keyId5 = providers[5].key.id;\n\t            }\n\t            if (length > 6) {\n\t                this.provider6 = providers[6];\n\t                this.keyId6 = providers[6].key.id;\n\t            }\n\t            if (length > 7) {\n\t                this.provider7 = providers[7];\n\t                this.keyId7 = providers[7].key.id;\n\t            }\n\t            if (length > 8) {\n\t                this.provider8 = providers[8];\n\t                this.keyId8 = providers[8].key.id;\n\t            }\n\t            if (length > 9) {\n\t                this.provider9 = providers[9];\n\t                this.keyId9 = providers[9].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.provider0;\n\t            if (index == 1)\n\t                return this.provider1;\n\t            if (index == 2)\n\t                return this.provider2;\n\t            if (index == 3)\n\t                return this.provider3;\n\t            if (index == 4)\n\t                return this.provider4;\n\t            if (index == 5)\n\t                return this.provider5;\n\t            if (index == 6)\n\t                return this.provider6;\n\t            if (index == 7)\n\t                return this.provider7;\n\t            if (index == 8)\n\t                return this.provider8;\n\t            if (index == 9)\n\t                return this.provider9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n\t            return new ReflectiveInjectorInlineStrategy(injector, this);\n\t        };\n\t        return ReflectiveProtoInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n\t        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n\t            this.providers = providers;\n\t            var len = providers.length;\n\t            this.keyIds = new Array(len);\n\t            for (var i = 0; i < len; i++) {\n\t                this.keyIds[i] = providers[i].key.id;\n\t            }\n\t        }\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n\t            if (index < 0 || index >= this.providers.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.providers[index];\n\t        };\n\t        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n\t            return new ReflectiveInjectorDynamicStrategy(this, ei);\n\t        };\n\t        return ReflectiveProtoInjectorDynamicStrategy;\n\t    }());\n\t    var ReflectiveProtoInjector = (function () {\n\t        function ReflectiveProtoInjector(providers) {\n\t            this.numberOfProviders = providers.length;\n\t            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n\t                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n\t                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n\t        }\n\t        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n\t            return new ReflectiveProtoInjector(providers);\n\t        };\n\t        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n\t            return this._strategy.getProviderAtIndex(index);\n\t        };\n\t        return ReflectiveProtoInjector;\n\t    }());\n\t    var ReflectiveInjectorInlineStrategy = (function () {\n\t        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n\t            this.injector = injector;\n\t            this.protoStrategy = protoStrategy;\n\t            this.obj0 = UNDEFINED;\n\t            this.obj1 = UNDEFINED;\n\t            this.obj2 = UNDEFINED;\n\t            this.obj3 = UNDEFINED;\n\t            this.obj4 = UNDEFINED;\n\t            this.obj5 = UNDEFINED;\n\t            this.obj6 = UNDEFINED;\n\t            this.obj7 = UNDEFINED;\n\t            this.obj8 = UNDEFINED;\n\t            this.obj9 = UNDEFINED;\n\t        }\n\t        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            var inj = this.injector;\n\t            if (p.keyId0 === keyId) {\n\t                if (this.obj0 === UNDEFINED) {\n\t                    this.obj0 = inj._new(p.provider0);\n\t                }\n\t                return this.obj0;\n\t            }\n\t            if (p.keyId1 === keyId) {\n\t                if (this.obj1 === UNDEFINED) {\n\t                    this.obj1 = inj._new(p.provider1);\n\t                }\n\t                return this.obj1;\n\t            }\n\t            if (p.keyId2 === keyId) {\n\t                if (this.obj2 === UNDEFINED) {\n\t                    this.obj2 = inj._new(p.provider2);\n\t                }\n\t                return this.obj2;\n\t            }\n\t            if (p.keyId3 === keyId) {\n\t                if (this.obj3 === UNDEFINED) {\n\t                    this.obj3 = inj._new(p.provider3);\n\t                }\n\t                return this.obj3;\n\t            }\n\t            if (p.keyId4 === keyId) {\n\t                if (this.obj4 === UNDEFINED) {\n\t                    this.obj4 = inj._new(p.provider4);\n\t                }\n\t                return this.obj4;\n\t            }\n\t            if (p.keyId5 === keyId) {\n\t                if (this.obj5 === UNDEFINED) {\n\t                    this.obj5 = inj._new(p.provider5);\n\t                }\n\t                return this.obj5;\n\t            }\n\t            if (p.keyId6 === keyId) {\n\t                if (this.obj6 === UNDEFINED) {\n\t                    this.obj6 = inj._new(p.provider6);\n\t                }\n\t                return this.obj6;\n\t            }\n\t            if (p.keyId7 === keyId) {\n\t                if (this.obj7 === UNDEFINED) {\n\t                    this.obj7 = inj._new(p.provider7);\n\t                }\n\t                return this.obj7;\n\t            }\n\t            if (p.keyId8 === keyId) {\n\t                if (this.obj8 === UNDEFINED) {\n\t                    this.obj8 = inj._new(p.provider8);\n\t                }\n\t                return this.obj8;\n\t            }\n\t            if (p.keyId9 === keyId) {\n\t                if (this.obj9 === UNDEFINED) {\n\t                    this.obj9 = inj._new(p.provider9);\n\t                }\n\t                return this.obj9;\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index == 0)\n\t                return this.obj0;\n\t            if (index == 1)\n\t                return this.obj1;\n\t            if (index == 2)\n\t                return this.obj2;\n\t            if (index == 3)\n\t                return this.obj3;\n\t            if (index == 4)\n\t                return this.obj4;\n\t            if (index == 5)\n\t                return this.obj5;\n\t            if (index == 6)\n\t                return this.obj6;\n\t            if (index == 7)\n\t                return this.obj7;\n\t            if (index == 8)\n\t                return this.obj8;\n\t            if (index == 9)\n\t                return this.obj9;\n\t            throw new OutOfBoundsError(index);\n\t        };\n\t        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n\t        return ReflectiveInjectorInlineStrategy;\n\t    }());\n\t    var ReflectiveInjectorDynamicStrategy = (function () {\n\t        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n\t            this.protoStrategy = protoStrategy;\n\t            this.injector = injector;\n\t            this.objs = new Array(protoStrategy.providers.length).fill(UNDEFINED);\n\t        }\n\t        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n\t        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n\t            return this.injector._new(provider);\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n\t            var p = this.protoStrategy;\n\t            for (var i = 0; i < p.keyIds.length; i++) {\n\t                if (p.keyIds[i] === keyId) {\n\t                    if (this.objs[i] === UNDEFINED) {\n\t                        this.objs[i] = this.injector._new(p.providers[i]);\n\t                    }\n\t                    return this.objs[i];\n\t                }\n\t            }\n\t            return UNDEFINED;\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n\t            if (index < 0 || index >= this.objs.length) {\n\t                throw new OutOfBoundsError(index);\n\t            }\n\t            return this.objs[index];\n\t        };\n\t        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n\t        return ReflectiveInjectorDynamicStrategy;\n\t    }());\n\t    /**\n\t     * A ReflectiveDependency injection container used for instantiating objects and resolving\n\t     * dependencies.\n\t     *\n\t     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n\t     * constructor dependencies.\n\t     *\n\t     * In typical use, application code asks for the dependencies in the constructor and they are\n\t     * resolved by the `Injector`.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n\t     *\n\t     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n\t     *\n\t     * ```typescript\n\t     * @Injectable()\n\t     * class Engine {\n\t     * }\n\t     *\n\t     * @Injectable()\n\t     * class Car {\n\t     *   constructor(public engine:Engine) {}\n\t     * }\n\t     *\n\t     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t     * var car = injector.get(Car);\n\t     * expect(car instanceof Car).toBe(true);\n\t     * expect(car.engine instanceof Engine).toBe(true);\n\t     * ```\n\t     *\n\t     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n\t     * resolve all of the object's dependencies automatically.\n\t     *\n\t     * @stable\n\t     */\n\t    var ReflectiveInjector = (function () {\n\t        function ReflectiveInjector() {\n\t        }\n\t        /**\n\t         * Turns an array of provider definitions into an array of resolved providers.\n\t         *\n\t         * A resolution is a process of flattening multiple nested arrays and converting individual\n\t         * providers into an array of {@link ResolvedReflectiveProvider}s.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n\t         *\n\t         * expect(providers.length).toEqual(2);\n\t         *\n\t         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n\t         * expect(providers[0].key.displayName).toBe(\"Car\");\n\t         * expect(providers[0].dependencies.length).toEqual(1);\n\t         * expect(providers[0].factory).toBeDefined();\n\t         *\n\t         * expect(providers[1].key.displayName).toBe(\"Engine\");\n\t         * });\n\t         * ```\n\t         *\n\t         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n\t         */\n\t        ReflectiveInjector.resolve = function (providers) {\n\t            return resolveReflectiveProviders(providers);\n\t        };\n\t        /**\n\t         * Resolves an array of providers and creates an injector from those providers.\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `fromResolvedProviders`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n\t         */\n\t        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n\t        };\n\t        /**\n\t         * Creates an injector from previously resolved providers.\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n\t         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n\t         * expect(injector.get(Car) instanceof Car).toBe(true);\n\t         * ```\n\t         * @experimental\n\t         */\n\t        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n\t            if (parent === void 0) { parent = null; }\n\t            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n\t        };\n\t        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n\t            /**\n\t             * Parent of this injector.\n\t             *\n\t             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t             * -->\n\t             *\n\t             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n\t             *\n\t             * ```typescript\n\t             * var parent = ReflectiveInjector.resolveAndCreate([]);\n\t             * var child = parent.resolveAndCreateChild([]);\n\t             * expect(child.parent).toBe(parent);\n\t             * ```\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Resolves an array of providers and creates a child injector from those providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * The passed-in providers can be an array of `Type`, {@link Provider},\n\t         * or a recursive array of more providers.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n\t         * var child = parent.resolveAndCreateChild([ChildProvider]);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         *\n\t         * This function is slower than the corresponding `createChildFromResolved`\n\t         * because it needs to resolve the passed-in providers first.\n\t         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n\t        /**\n\t         * Creates a child injector from previously resolved providers.\n\t         *\n\t         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n\t         * -->\n\t         *\n\t         * This API is the recommended way to construct injectors in performance-sensitive parts.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n\t         *\n\t         * ```typescript\n\t         * class ParentProvider {}\n\t         * class ChildProvider {}\n\t         *\n\t         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n\t         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n\t         *\n\t         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n\t         * var child = parent.createChildFromResolved(childProviders);\n\t         *\n\t         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n\t         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n\t         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n\t            return unimplemented();\n\t        };\n\t        /**\n\t         * Resolves a provider and instantiates an object in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         *\n\t         * var car = injector.resolveAndInstantiate(Car);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n\t        /**\n\t         * Instantiates an object using a resolved provider in the context of the injector.\n\t         *\n\t         * The created object does not get cached by the injector.\n\t         *\n\t         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n\t         *\n\t         * ```typescript\n\t         * @Injectable()\n\t         * class Engine {\n\t         * }\n\t         *\n\t         * @Injectable()\n\t         * class Car {\n\t         *   constructor(public engine:Engine) {}\n\t         * }\n\t         *\n\t         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n\t         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n\t         * var car = injector.instantiateResolved(carProvider);\n\t         * expect(car.engine).toBe(injector.get(Engine));\n\t         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n\t         * ```\n\t         */\n\t        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n\t        return ReflectiveInjector;\n\t    }());\n\t    var ReflectiveInjector_ = (function () {\n\t        /**\n\t         * Private\n\t         */\n\t        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n\t            if (_parent === void 0) { _parent = null; }\n\t            /** @internal */\n\t            this._constructionCounter = 0;\n\t            this._proto = _proto;\n\t            this._parent = _parent;\n\t            this._strategy = _proto._strategy.createInjectorStrategy(this);\n\t        }\n\t        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n\t        };\n\t        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n\t            /**\n\t             * @internal\n\t             * Internal. Do not use.\n\t             * We return `any` not to export the InjectorStrategy type.\n\t             */\n\t            get: function () { return this._strategy; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n\t            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n\t            return this.createChildFromResolved(ResolvedReflectiveProviders);\n\t        };\n\t        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n\t            var proto = new ReflectiveProtoInjector(providers);\n\t            var inj = new ReflectiveInjector_(proto);\n\t            inj._parent = this;\n\t            return inj;\n\t        };\n\t        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n\t            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n\t        };\n\t        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._new = function (provider) {\n\t            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n\t                throw new CyclicDependencyError(this, provider.key);\n\t            }\n\t            return this._instantiateProvider(provider);\n\t        };\n\t        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n\t            if (provider.multiProvider) {\n\t                var res = new Array(provider.resolvedFactories.length);\n\t                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n\t                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n\t                }\n\t                return res;\n\t            }\n\t            else {\n\t                return this._instantiate(provider, provider.resolvedFactories[0]);\n\t            }\n\t        };\n\t        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n\t            var factory = ResolvedReflectiveFactory.factory;\n\t            var deps = ResolvedReflectiveFactory.dependencies;\n\t            var length = deps.length;\n\t            var d0;\n\t            var d1;\n\t            var d2;\n\t            var d3;\n\t            var d4;\n\t            var d5;\n\t            var d6;\n\t            var d7;\n\t            var d8;\n\t            var d9;\n\t            var d10;\n\t            var d11;\n\t            var d12;\n\t            var d13;\n\t            var d14;\n\t            var d15;\n\t            var d16;\n\t            var d17;\n\t            var d18;\n\t            var d19;\n\t            try {\n\t                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n\t                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n\t                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n\t                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n\t                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n\t                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n\t                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n\t                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n\t                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n\t                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n\t                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n\t                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n\t                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n\t                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n\t                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n\t                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n\t                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n\t                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n\t                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n\t                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n\t            }\n\t            catch (e) {\n\t                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n\t                    e.addKey(this, provider.key);\n\t                }\n\t                throw e;\n\t            }\n\t            var obj;\n\t            try {\n\t                switch (length) {\n\t                    case 0:\n\t                        obj = factory();\n\t                        break;\n\t                    case 1:\n\t                        obj = factory(d0);\n\t                        break;\n\t                    case 2:\n\t                        obj = factory(d0, d1);\n\t                        break;\n\t                    case 3:\n\t                        obj = factory(d0, d1, d2);\n\t                        break;\n\t                    case 4:\n\t                        obj = factory(d0, d1, d2, d3);\n\t                        break;\n\t                    case 5:\n\t                        obj = factory(d0, d1, d2, d3, d4);\n\t                        break;\n\t                    case 6:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5);\n\t                        break;\n\t                    case 7:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n\t                        break;\n\t                    case 8:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n\t                        break;\n\t                    case 9:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n\t                        break;\n\t                    case 10:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n\t                        break;\n\t                    case 11:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n\t                        break;\n\t                    case 12:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n\t                        break;\n\t                    case 13:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n\t                        break;\n\t                    case 14:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n\t                        break;\n\t                    case 15:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n\t                        break;\n\t                    case 16:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n\t                        break;\n\t                    case 17:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n\t                        break;\n\t                    case 18:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n\t                        break;\n\t                    case 19:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n\t                        break;\n\t                    case 20:\n\t                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n\t                        break;\n\t                    default:\n\t                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n\t                }\n\t            }\n\t            catch (e) {\n\t                throw new InstantiationError(this, e, e.stack, provider.key);\n\t            }\n\t            return obj;\n\t        };\n\t        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n\t            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n\t        };\n\t        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n\t            if (key === INJECTOR_KEY) {\n\t                return this;\n\t            }\n\t            if (upperBoundVisibility instanceof Self) {\n\t                return this._getByKeySelf(key, notFoundValue);\n\t            }\n\t            else {\n\t                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n\t            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n\t                return notFoundValue;\n\t            }\n\t            else {\n\t                throw new NoProviderError(this, key);\n\t            }\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n\t            var obj = this._strategy.getObjByKeyId(key.id);\n\t            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n\t        };\n\t        /** @internal */\n\t        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n\t            var inj;\n\t            if (lowerBoundVisibility instanceof SkipSelf) {\n\t                inj = this._parent;\n\t            }\n\t            else {\n\t                inj = this;\n\t            }\n\t            while (inj instanceof ReflectiveInjector_) {\n\t                var inj_ = inj;\n\t                var obj = inj_._strategy.getObjByKeyId(key.id);\n\t                if (obj !== UNDEFINED)\n\t                    return obj;\n\t                inj = inj_._parent;\n\t            }\n\t            if (inj !== null) {\n\t                return inj.get(key.token, notFoundValue);\n\t            }\n\t            else {\n\t                return this._throwOrNull(key, notFoundValue);\n\t            }\n\t        };\n\t        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n\t            get: function () {\n\t                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n\t                    .join(', ');\n\t                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n\t        return ReflectiveInjector_;\n\t    }());\n\t    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n\t    function _mapProviders(injector, fn) {\n\t        var res = new Array(injector._proto.numberOfProviders);\n\t        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n\t            res[i] = fn(injector._proto.getProviderAtIndex(i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @whatItDoes Provides a hook for centralized exception handling.\n\t     *\n\t     * @description\n\t     *\n\t     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n\t     * intercept error handling, write a custom exception handler that replaces this default as\n\t     * appropriate for your app.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * class MyErrorHandler implements ErrorHandler {\n\t     *   handleError(error) {\n\t     *     // do something with the exception\n\t     *   }\n\t     * }\n\t     *\n\t     * @NgModule({\n\t     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n\t     * })\n\t     * class MyModule {}\n\t     * ```\n\t     *\n\t     * @stable\n\t     */\n\t    var ErrorHandler = (function () {\n\t        function ErrorHandler(rethrowError) {\n\t            if (rethrowError === void 0) { rethrowError = true; }\n\t            /**\n\t             * @internal\n\t             */\n\t            this._console = console;\n\t            this.rethrowError = rethrowError;\n\t        }\n\t        ErrorHandler.prototype.handleError = function (error) {\n\t            var originalError = this._findOriginalError(error);\n\t            var originalStack = this._findOriginalStack(error);\n\t            var context = this._findContext(error);\n\t            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n\t            if (originalError) {\n\t                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n\t            }\n\t            if (originalStack) {\n\t                this._console.error('ORIGINAL STACKTRACE:');\n\t                this._console.error(originalStack);\n\t            }\n\t            if (context) {\n\t                this._console.error('ERROR CONTEXT:');\n\t                this._console.error(context);\n\t            }\n\t            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n\t            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n\t            if (this.rethrowError)\n\t                throw error;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._extractMessage = function (error) {\n\t            return error instanceof Error ? error.message : error.toString();\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findContext = function (error) {\n\t            if (error) {\n\t                return error.context ? error.context :\n\t                    this._findContext(error.originalError);\n\t            }\n\t            return null;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalError = function (error) {\n\t            var e = error.originalError;\n\t            while (e && e.originalError) {\n\t                e = e.originalError;\n\t            }\n\t            return e;\n\t        };\n\t        /** @internal */\n\t        ErrorHandler.prototype._findOriginalStack = function (error) {\n\t            if (!(error instanceof Error))\n\t                return null;\n\t            var e = error;\n\t            var stack = e.stack;\n\t            while (e instanceof Error && e.originalError) {\n\t                e = e.originalError;\n\t                if (e instanceof Error && e.stack) {\n\t                    stack = e.stack;\n\t                }\n\t            }\n\t            return stack;\n\t        };\n\t        return ErrorHandler;\n\t    }());\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var k1 = Object.keys(m1);\n\t            var k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var i = 0; i < k1.length; i++) {\n\t                var key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var i = 0; i < items.length; ++i) {\n\t                var index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        ListWrapper.remove = function (list, el) {\n\t            var index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return flat.concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t    function isListLikeIterable(obj) {\n\t        if (!isJsObject(obj))\n\t            return false;\n\t        return Array.isArray(obj) ||\n\t            (!(obj instanceof Map) &&\n\t                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n\t    }\n\t    function areIterablesEqual(a, b, comparator) {\n\t        var iterator1 = a[getSymbolIterator()]();\n\t        var iterator2 = b[getSymbolIterator()]();\n\t        while (true) {\n\t            var item1 = iterator1.next();\n\t            var item2 = iterator2.next();\n\t            if (item1.done && item2.done)\n\t                return true;\n\t            if (item1.done || item2.done)\n\t                return false;\n\t            if (!comparator(item1.value, item2.value))\n\t                return false;\n\t        }\n\t    }\n\t    function iterateListLike(obj, fn) {\n\t        if (Array.isArray(obj)) {\n\t            for (var i = 0; i < obj.length; i++) {\n\t                fn(obj[i]);\n\t            }\n\t        }\n\t        else {\n\t            var iterator = obj[getSymbolIterator()]();\n\t            var item = void 0;\n\t            while (!((item = iterator.next()).done)) {\n\t                fn(item.value);\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    function isPromise(obj) {\n\t        // allow any Promise/A+ compliant thenable.\n\t        // It's up to the caller to ensure that obj.then conforms to the spec\n\t        return !!obj && typeof obj.then === 'function';\n\t    }\n\t\n\t    /**\n\t     * A function that will be executed when an application is initialized.\n\t     * @experimental\n\t     */\n\t    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n\t    /**\n\t     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationInitStatus = (function () {\n\t        function ApplicationInitStatus(appInits) {\n\t            var _this = this;\n\t            this._done = false;\n\t            var asyncInitPromises = [];\n\t            if (appInits) {\n\t                for (var i = 0; i < appInits.length; i++) {\n\t                    var initResult = appInits[i]();\n\t                    if (isPromise(initResult)) {\n\t                        asyncInitPromises.push(initResult);\n\t                    }\n\t                }\n\t            }\n\t            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n\t            if (asyncInitPromises.length === 0) {\n\t                this._done = true;\n\t            }\n\t        }\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n\t            get: function () { return this._done; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n\t            get: function () { return this._donePromise; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ApplicationInitStatus.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationInitStatus.ctorParameters = [\n\t            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n\t        ];\n\t        return ApplicationInitStatus;\n\t    }());\n\t\n\t    /**\n\t     * A DI Token representing a unique string id assigned to the application by Angular and used\n\t     * primarily for prefixing application attributes and CSS styles when\n\t     * {@link ViewEncapsulation#Emulated} is being used.\n\t     *\n\t     * If you need to avoid randomly generated value to be used as an application id, you can provide\n\t     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n\t     * using this token.\n\t     * @experimental\n\t     */\n\t    var APP_ID = new OpaqueToken('AppId');\n\t    function _appIdRandomProviderFactory() {\n\t        return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t    }\n\t    /**\n\t     * Providers that will generate a random APP_ID_TOKEN.\n\t     * @experimental\n\t     */\n\t    var APP_ID_RANDOM_PROVIDER = {\n\t        provide: APP_ID,\n\t        useFactory: _appIdRandomProviderFactory,\n\t        deps: [],\n\t    };\n\t    function _randomChar() {\n\t        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t    }\n\t    /**\n\t     * A function that will be executed when a platform is initialized.\n\t     * @experimental\n\t     */\n\t    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n\t    /**\n\t     * All callbacks provided via this token will be called for every component that is bootstrapped.\n\t     * Signature of the callback:\n\t     *\n\t     * `(componentRef: ComponentRef) => void`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n\t    /**\n\t     * A token which indicates the root directory of the application\n\t     * @experimental\n\t     */\n\t    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\t\n\t    var Console = (function () {\n\t        function Console() {\n\t        }\n\t        Console.prototype.log = function (message) { print(message); };\n\t        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n\t        Console.prototype.warn = function (message) { warn(message); };\n\t        Console.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Console.ctorParameters = [];\n\t        return Console;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a component is still being loaded in a synchronous compile.\n\t     *\n\t     * @stable\n\t     */\n\t    var ComponentStillLoadingError = (function (_super) {\n\t        __extends$4(ComponentStillLoadingError, _super);\n\t        function ComponentStillLoadingError(compType) {\n\t            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n\t            this.compType = compType;\n\t        }\n\t        return ComponentStillLoadingError;\n\t    }(BaseError));\n\t    /**\n\t     * Combination of NgModuleFactory and ComponentFactorys.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ModuleWithComponentFactories = (function () {\n\t        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n\t            this.ngModuleFactory = ngModuleFactory;\n\t            this.componentFactories = componentFactories;\n\t        }\n\t        return ModuleWithComponentFactories;\n\t    }());\n\t    function _throwError() {\n\t        throw new Error(\"Runtime compiler is not loaded\");\n\t    }\n\t    /**\n\t     * Low-level service for running the angular compiler during runtime\n\t     * to create {@link ComponentFactory}s, which\n\t     * can later be used to create and render a Component instance.\n\t     *\n\t     * Each `@NgModule` provides an own `Compiler` to its injector,\n\t     * that will use the directives/pipes of the ng module for compilation\n\t     * of components.\n\t     * @stable\n\t     */\n\t    var Compiler = (function () {\n\t        function Compiler() {\n\t        }\n\t        /**\n\t         * Compiles the given NgModule and all of its components. All templates of the components listed\n\t         * in `entryComponents`\n\t         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n\t         */\n\t        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Compiles the given NgModule and all of its components\n\t         */\n\t        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n\t        /**\n\t         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n\t         */\n\t        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n\t            throw _throwError();\n\t        };\n\t        /**\n\t         * Clears all caches.\n\t         */\n\t        Compiler.prototype.clearCache = function () { };\n\t        /**\n\t         * Clears the cache for the given component/ngModule.\n\t         */\n\t        Compiler.prototype.clearCacheFor = function (type) { };\n\t        return Compiler;\n\t    }());\n\t    /**\n\t     * Token to provide CompilerOptions in the platform injector.\n\t     *\n\t     * @experimental\n\t     */\n\t    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n\t    /**\n\t     * A factory for creating a Compiler\n\t     *\n\t     * @experimental\n\t     */\n\t    var CompilerFactory = (function () {\n\t        function CompilerFactory() {\n\t        }\n\t        return CompilerFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A wrapper around a native element inside of a View.\n\t     *\n\t     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n\t     * element.\n\t     *\n\t     * @security Permitting direct access to the DOM can make your application more vulnerable to\n\t     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n\t     * [Security Guide](http://g.co/ng/security).\n\t     *\n\t     * @stable\n\t     */\n\t    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n\t    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n\t    // and could do better codegen in the future.\n\t    var ElementRef = (function () {\n\t        function ElementRef(nativeElement) {\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        return ElementRef;\n\t    }());\n\t\n\t    var DefaultIterableDifferFactory = (function () {\n\t        function DefaultIterableDifferFactory() {\n\t        }\n\t        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n\t        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n\t            return new DefaultIterableDiffer(trackByFn);\n\t        };\n\t        return DefaultIterableDifferFactory;\n\t    }());\n\t    var trackByIdentity = function (index, item) { return item; };\n\t    /**\n\t     * @stable\n\t     */\n\t    var DefaultIterableDiffer = (function () {\n\t        function DefaultIterableDiffer(_trackByFn) {\n\t            this._trackByFn = _trackByFn;\n\t            this._length = null;\n\t            this._collection = null;\n\t            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n\t            this._linkedRecords = null;\n\t            // Keeps track of the removed records at any point in time during `_check()` calls.\n\t            this._unlinkedRecords = null;\n\t            this._previousItHead = null;\n\t            this._itHead = null;\n\t            this._itTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._movesHead = null;\n\t            this._movesTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t            // Keeps track of records where custom track by is the same, but item identity has changed\n\t            this._identityChangesHead = null;\n\t            this._identityChangesTail = null;\n\t            this._trackByFn = this._trackByFn || trackByIdentity;\n\t        }\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n\t            get: function () { return this._collection; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n\t            get: function () { return this._length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._itHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n\t            var nextIt = this._itHead;\n\t            var nextRemove = this._removalsHead;\n\t            var addRemoveOffset = 0;\n\t            var moveOffsets = null;\n\t            while (nextIt || nextRemove) {\n\t                // Figure out which is the next record to process\n\t                // Order: remove, add, move\n\t                var record = !nextRemove ||\n\t                    nextIt &&\n\t                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n\t                    nextIt :\n\t                    nextRemove;\n\t                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n\t                var currentIndex = record.currentIndex;\n\t                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n\t                if (record === nextRemove) {\n\t                    addRemoveOffset--;\n\t                    nextRemove = nextRemove._nextRemoved;\n\t                }\n\t                else {\n\t                    nextIt = nextIt._next;\n\t                    if (record.previousIndex == null) {\n\t                        addRemoveOffset++;\n\t                    }\n\t                    else {\n\t                        // INVARIANT:  currentIndex < previousIndex\n\t                        if (!moveOffsets)\n\t                            moveOffsets = [];\n\t                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n\t                        var localCurrentIndex = currentIndex - addRemoveOffset;\n\t                        if (localMovePreviousIndex != localCurrentIndex) {\n\t                            for (var i = 0; i < localMovePreviousIndex; i++) {\n\t                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n\t                                var index = offset + i;\n\t                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n\t                                    moveOffsets[i] = offset + 1;\n\t                                }\n\t                            }\n\t                            var previousIndex = record.previousIndex;\n\t                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n\t                        }\n\t                    }\n\t                }\n\t                if (adjPreviousIndex !== currentIndex) {\n\t                    fn(record, adjPreviousIndex, currentIndex);\n\t                }\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n\t            var record;\n\t            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.diff = function (collection) {\n\t            if (isBlank(collection))\n\t                collection = [];\n\t            if (!isListLikeIterable(collection)) {\n\t                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n\t            }\n\t            if (this.check(collection)) {\n\t                return this;\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        };\n\t        DefaultIterableDiffer.prototype.onDestroy = function () { };\n\t        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n\t        DefaultIterableDiffer.prototype.check = function (collection) {\n\t            var _this = this;\n\t            this._reset();\n\t            var record = this._itHead;\n\t            var mayBeDirty = false;\n\t            var index;\n\t            var item;\n\t            var itemTrackBy;\n\t            if (Array.isArray(collection)) {\n\t                var list = collection;\n\t                this._length = collection.length;\n\t                for (var index_1 = 0; index_1 < this._length; index_1++) {\n\t                    item = list[index_1];\n\t                    itemTrackBy = this._trackByFn(index_1, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = this._mismatch(record, item, itemTrackBy, index_1);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                }\n\t            }\n\t            else {\n\t                index = 0;\n\t                iterateListLike(collection, function (item /** TODO #9100 */) {\n\t                    itemTrackBy = _this._trackByFn(index, item);\n\t                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n\t                        record = _this._mismatch(record, item, itemTrackBy, index);\n\t                        mayBeDirty = true;\n\t                    }\n\t                    else {\n\t                        if (mayBeDirty) {\n\t                            // TODO(misko): can we limit this to duplicates only?\n\t                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n\t                        }\n\t                        if (!looseIdentical(record.item, item))\n\t                            _this._addIdentityChange(record, item);\n\t                    }\n\t                    record = record._next;\n\t                    index++;\n\t                });\n\t                this._length = index;\n\t            }\n\t            this._truncate(record);\n\t            this._collection = collection;\n\t            return this.isDirty;\n\t        };\n\t        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n\t            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n\t             * changes.\n\t             */\n\t            get: function () {\n\t                return this._additionsHead !== null || this._movesHead !== null ||\n\t                    this._removalsHead !== null || this._identityChangesHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Reset the state of the change objects to show no changes. This means set previousKey to\n\t         * currentKey, and clear all of the queues (additions, moves, removals).\n\t         * Set the previousIndexes of moved and added items to their currentIndexes\n\t         * Reset the list of additions, moves and removals\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record = void 0;\n\t                var nextRecord = void 0;\n\t                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                    record.previousIndex = record.currentIndex;\n\t                }\n\t                this._additionsHead = this._additionsTail = null;\n\t                for (record = this._movesHead; record !== null; record = nextRecord) {\n\t                    record.previousIndex = record.currentIndex;\n\t                    nextRecord = record._nextMoved;\n\t                }\n\t                this._movesHead = this._movesTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t                this._identityChangesHead = this._identityChangesTail = null;\n\t            }\n\t        };\n\t        /**\n\t         * This is the core function which handles differences between collections.\n\t         *\n\t         * - `record` is the record which we saw at this position last time. If null then it is a new\n\t         *   item.\n\t         * - `item` is the current item in the collection\n\t         * - `index` is the position of the item in the collection\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n\t            // The previous record after which we will append the current one.\n\t            var previousRecord;\n\t            if (record === null) {\n\t                previousRecord = this._itTail;\n\t            }\n\t            else {\n\t                previousRecord = record._prev;\n\t                // Remove the record from the collection since we know it does not match the item.\n\t                this._remove(record);\n\t            }\n\t            // Attempt to see if we have seen the item before.\n\t            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n\t            if (record !== null) {\n\t                // We have seen this before, we need to move it forward in the collection.\n\t                // But first we need to check if identity changed, so we can update in view if necessary\n\t                if (!looseIdentical(record.item, item))\n\t                    this._addIdentityChange(record, item);\n\t                this._moveAfter(record, previousRecord, index);\n\t            }\n\t            else {\n\t                // Never seen it, check evicted list.\n\t                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t                if (record !== null) {\n\t                    // It is an item which we have evicted earlier: reinsert it back into the list.\n\t                    // But first we need to check if identity changed, so we can update in view if necessary\n\t                    if (!looseIdentical(record.item, item))\n\t                        this._addIdentityChange(record, item);\n\t                    this._reinsertAfter(record, previousRecord, index);\n\t                }\n\t                else {\n\t                    // It is a new item: add it.\n\t                    record =\n\t                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n\t                }\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n\t         *\n\t         * Use case: `[a, a]` => `[b, a, a]`\n\t         *\n\t         * If we did not have this check then the insertion of `b` would:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) leave `a` at index `1` as is. <-- this is wrong!\n\t         *   3) reinsert `a` at index 2. <-- this is wrong!\n\t         *\n\t         * The correct behavior is:\n\t         *   1) evict first `a`\n\t         *   2) insert `b` at `0` index.\n\t         *   3) reinsert `a` at index 1.\n\t         *   3) move `a` at from `1` to `2`.\n\t         *\n\t         *\n\t         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n\t         * have already been removed:\n\t         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n\t         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n\t         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n\t         * at the end.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n\t            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n\t            if (reinsertRecord !== null) {\n\t                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n\t            }\n\t            else if (record.currentIndex != index) {\n\t                record.currentIndex = index;\n\t                this._addToMoves(record, index);\n\t            }\n\t            return record;\n\t        };\n\t        /**\n\t         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n\t         *\n\t         * - `record` The first excess {@link CollectionChangeRecord}.\n\t         *\n\t         * @internal\n\t         */\n\t        DefaultIterableDiffer.prototype._truncate = function (record) {\n\t            // Anything after that needs to be removed;\n\t            while (record !== null) {\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(this._unlink(record));\n\t                record = nextRecord;\n\t            }\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.clear();\n\t            }\n\t            if (this._additionsTail !== null) {\n\t                this._additionsTail._nextAdded = null;\n\t            }\n\t            if (this._movesTail !== null) {\n\t                this._movesTail._nextMoved = null;\n\t            }\n\t            if (this._itTail !== null) {\n\t                this._itTail._next = null;\n\t            }\n\t            if (this._removalsTail !== null) {\n\t                this._removalsTail._nextRemoved = null;\n\t            }\n\t            if (this._identityChangesTail !== null) {\n\t                this._identityChangesTail._nextIdentityChange = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n\t            if (this._unlinkedRecords !== null) {\n\t                this._unlinkedRecords.remove(record);\n\t            }\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n\t            this._unlink(record);\n\t            this._insertAfter(record, prevRecord, index);\n\t            this._addToMoves(record, index);\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n\t            this._insertAfter(record, prevRecord, index);\n\t            if (this._additionsTail === null) {\n\t                // todo(vicb)\n\t                // assert(this._additionsHead === null);\n\t                this._additionsTail = this._additionsHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_additionsTail._nextAdded === null);\n\t                // assert(record._nextAdded === null);\n\t                this._additionsTail = this._additionsTail._nextAdded = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n\t            // todo(vicb)\n\t            // assert(record != prevRecord);\n\t            // assert(record._next === null);\n\t            // assert(record._prev === null);\n\t            var next = prevRecord === null ? this._itHead : prevRecord._next;\n\t            // todo(vicb)\n\t            // assert(next != record);\n\t            // assert(prevRecord != record);\n\t            record._next = next;\n\t            record._prev = prevRecord;\n\t            if (next === null) {\n\t                this._itTail = record;\n\t            }\n\t            else {\n\t                next._prev = record;\n\t            }\n\t            if (prevRecord === null) {\n\t                this._itHead = record;\n\t            }\n\t            else {\n\t                prevRecord._next = record;\n\t            }\n\t            if (this._linkedRecords === null) {\n\t                this._linkedRecords = new _DuplicateMap();\n\t            }\n\t            this._linkedRecords.put(record);\n\t            record.currentIndex = index;\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._remove = function (record) {\n\t            return this._addToRemovals(this._unlink(record));\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._unlink = function (record) {\n\t            if (this._linkedRecords !== null) {\n\t                this._linkedRecords.remove(record);\n\t            }\n\t            var prev = record._prev;\n\t            var next = record._next;\n\t            // todo(vicb)\n\t            // assert((record._prev = null) === null);\n\t            // assert((record._next = null) === null);\n\t            if (prev === null) {\n\t                this._itHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            if (next === null) {\n\t                this._itTail = prev;\n\t            }\n\t            else {\n\t                next._prev = prev;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n\t            // todo(vicb)\n\t            // assert(record._nextMoved === null);\n\t            if (record.previousIndex === toIndex) {\n\t                return record;\n\t            }\n\t            if (this._movesTail === null) {\n\t                // todo(vicb)\n\t                // assert(_movesHead === null);\n\t                this._movesTail = this._movesHead = record;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_movesTail._nextMoved === null);\n\t                this._movesTail = this._movesTail._nextMoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._unlinkedRecords === null) {\n\t                this._unlinkedRecords = new _DuplicateMap();\n\t            }\n\t            this._unlinkedRecords.put(record);\n\t            record.currentIndex = null;\n\t            record._nextRemoved = null;\n\t            if (this._removalsTail === null) {\n\t                // todo(vicb)\n\t                // assert(_removalsHead === null);\n\t                this._removalsTail = this._removalsHead = record;\n\t                record._prevRemoved = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(_removalsTail._nextRemoved === null);\n\t                // assert(record._nextRemoved === null);\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = this._removalsTail._nextRemoved = record;\n\t            }\n\t            return record;\n\t        };\n\t        /** @internal */\n\t        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n\t            record.item = item;\n\t            if (this._identityChangesTail === null) {\n\t                this._identityChangesTail = this._identityChangesHead = record;\n\t            }\n\t            else {\n\t                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n\t            }\n\t            return record;\n\t        };\n\t        DefaultIterableDiffer.prototype.toString = function () {\n\t            var list = [];\n\t            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n\t            var previous = [];\n\t            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n\t            var additions = [];\n\t            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n\t            var moves = [];\n\t            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n\t            var removals = [];\n\t            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n\t            var identityChanges = [];\n\t            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n\t            return 'collection: ' + list.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'moves: ' + moves.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n' +\n\t                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n\t        };\n\t        return DefaultIterableDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var CollectionChangeRecord = (function () {\n\t        function CollectionChangeRecord(item, trackById) {\n\t            this.item = item;\n\t            this.trackById = trackById;\n\t            this.currentIndex = null;\n\t            this.previousIndex = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._prev = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._prevDup = null;\n\t            /** @internal */\n\t            this._nextDup = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextMoved = null;\n\t            /** @internal */\n\t            this._nextIdentityChange = null;\n\t        }\n\t        CollectionChangeRecord.prototype.toString = function () {\n\t            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n\t                stringify(this.item) + '[' +\n\t                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n\t        };\n\t        return CollectionChangeRecord;\n\t    }());\n\t    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n\t    var _DuplicateItemRecordList = (function () {\n\t        function _DuplicateItemRecordList() {\n\t            /** @internal */\n\t            this._head = null;\n\t            /** @internal */\n\t            this._tail = null;\n\t        }\n\t        /**\n\t         * Append the record to the list of duplicates.\n\t         *\n\t         * Note: by design all records in the list of duplicates hold the same value in record.item.\n\t         */\n\t        _DuplicateItemRecordList.prototype.add = function (record) {\n\t            if (this._head === null) {\n\t                this._head = this._tail = record;\n\t                record._nextDup = null;\n\t                record._prevDup = null;\n\t            }\n\t            else {\n\t                // todo(vicb)\n\t                // assert(record.item ==  _head.item ||\n\t                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n\t                this._tail._nextDup = record;\n\t                record._prevDup = this._tail;\n\t                record._nextDup = null;\n\t                this._tail = record;\n\t            }\n\t        };\n\t        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n\t        // CollectionChangeRecord.currentIndex >= afterIndex\n\t        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n\t            var record;\n\t            for (record = this._head; record !== null; record = record._nextDup) {\n\t                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n\t                    looseIdentical(record.trackById, trackById)) {\n\t                    return record;\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * Returns whether the list of duplicates is empty.\n\t         */\n\t        _DuplicateItemRecordList.prototype.remove = function (record) {\n\t            // todo(vicb)\n\t            // assert(() {\n\t            //  // verify that the record being removed is in the list.\n\t            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n\t            //    if (identical(cursor, record)) return true;\n\t            //  }\n\t            //  return false;\n\t            //});\n\t            var prev = record._prevDup;\n\t            var next = record._nextDup;\n\t            if (prev === null) {\n\t                this._head = next;\n\t            }\n\t            else {\n\t                prev._nextDup = next;\n\t            }\n\t            if (next === null) {\n\t                this._tail = prev;\n\t            }\n\t            else {\n\t                next._prevDup = prev;\n\t            }\n\t            return this._head === null;\n\t        };\n\t        return _DuplicateItemRecordList;\n\t    }());\n\t    var _DuplicateMap = (function () {\n\t        function _DuplicateMap() {\n\t            this.map = new Map();\n\t        }\n\t        _DuplicateMap.prototype.put = function (record) {\n\t            var key = record.trackById;\n\t            var duplicates = this.map.get(key);\n\t            if (!duplicates) {\n\t                duplicates = new _DuplicateItemRecordList();\n\t                this.map.set(key, duplicates);\n\t            }\n\t            duplicates.add(record);\n\t        };\n\t        /**\n\t         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n\t         * have already iterated over, we use the afterIndex to pretend it is not there.\n\t         *\n\t         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n\t         * have any more `a`s needs to return the last `a` not the first or second.\n\t         */\n\t        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n\t            if (afterIndex === void 0) { afterIndex = null; }\n\t            var key = trackById;\n\t            var recordList = this.map.get(key);\n\t            return recordList ? recordList.get(trackById, afterIndex) : null;\n\t        };\n\t        /**\n\t         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n\t         *\n\t         * The list of duplicates also is removed from the map if it gets empty.\n\t         */\n\t        _DuplicateMap.prototype.remove = function (record) {\n\t            var key = record.trackById;\n\t            var recordList = this.map.get(key);\n\t            // Remove the list of duplicates when it gets empty\n\t            if (recordList.remove(record)) {\n\t                this.map.delete(key);\n\t            }\n\t            return record;\n\t        };\n\t        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n\t            get: function () { return this.map.size === 0; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n\t        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n\t        return _DuplicateMap;\n\t    }());\n\t    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n\t        var previousIndex = item.previousIndex;\n\t        if (previousIndex === null)\n\t            return previousIndex;\n\t        var moveOffset = 0;\n\t        if (moveOffsets && previousIndex < moveOffsets.length) {\n\t            moveOffset = moveOffsets[previousIndex];\n\t        }\n\t        return previousIndex + addRemoveOffset + moveOffset;\n\t    }\n\t\n\t    var DefaultKeyValueDifferFactory = (function () {\n\t        function DefaultKeyValueDifferFactory() {\n\t        }\n\t        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n\t        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n\t        return DefaultKeyValueDifferFactory;\n\t    }());\n\t    var DefaultKeyValueDiffer = (function () {\n\t        function DefaultKeyValueDiffer() {\n\t            this._records = new Map();\n\t            this._mapHead = null;\n\t            this._previousMapHead = null;\n\t            this._changesHead = null;\n\t            this._changesTail = null;\n\t            this._additionsHead = null;\n\t            this._additionsTail = null;\n\t            this._removalsHead = null;\n\t            this._removalsTail = null;\n\t        }\n\t        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n\t            get: function () {\n\t                return this._additionsHead !== null || this._changesHead !== null ||\n\t                    this._removalsHead !== null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n\t            var record;\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n\t            var record;\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n\t            var record;\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n\t            var record;\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                fn(record);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.diff = function (map) {\n\t            if (!map) {\n\t                map = new Map();\n\t            }\n\t            else if (!(map instanceof Map || isJsObject(map))) {\n\t                throw new Error(\"Error trying to diff '\" + map + \"'\");\n\t            }\n\t            return this.check(map) ? this : null;\n\t        };\n\t        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n\t        DefaultKeyValueDiffer.prototype.check = function (map) {\n\t            var _this = this;\n\t            this._reset();\n\t            var records = this._records;\n\t            var oldSeqRecord = this._mapHead;\n\t            var lastOldSeqRecord = null;\n\t            var lastNewSeqRecord = null;\n\t            var seqChanged = false;\n\t            this._forEach(map, function (value, key) {\n\t                var newSeqRecord;\n\t                if (oldSeqRecord && key === oldSeqRecord.key) {\n\t                    newSeqRecord = oldSeqRecord;\n\t                    _this._maybeAddToChanges(newSeqRecord, value);\n\t                }\n\t                else {\n\t                    seqChanged = true;\n\t                    if (oldSeqRecord !== null) {\n\t                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n\t                        _this._addToRemovals(oldSeqRecord);\n\t                    }\n\t                    if (records.has(key)) {\n\t                        newSeqRecord = records.get(key);\n\t                        _this._maybeAddToChanges(newSeqRecord, value);\n\t                    }\n\t                    else {\n\t                        newSeqRecord = new KeyValueChangeRecord(key);\n\t                        records.set(key, newSeqRecord);\n\t                        newSeqRecord.currentValue = value;\n\t                        _this._addToAdditions(newSeqRecord);\n\t                    }\n\t                }\n\t                if (seqChanged) {\n\t                    if (_this._isInRemovals(newSeqRecord)) {\n\t                        _this._removeFromRemovals(newSeqRecord);\n\t                    }\n\t                    if (lastNewSeqRecord == null) {\n\t                        _this._mapHead = newSeqRecord;\n\t                    }\n\t                    else {\n\t                        lastNewSeqRecord._next = newSeqRecord;\n\t                    }\n\t                }\n\t                lastOldSeqRecord = oldSeqRecord;\n\t                lastNewSeqRecord = newSeqRecord;\n\t                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n\t            });\n\t            this._truncate(lastOldSeqRecord, oldSeqRecord);\n\t            return this.isDirty;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._reset = function () {\n\t            if (this.isDirty) {\n\t                var record = void 0;\n\t                // Record the state of the mapping\n\t                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n\t                    record._nextPrevious = record._next;\n\t                }\n\t                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n\t                    record.previousValue = record.currentValue;\n\t                }\n\t                this._changesHead = this._changesTail = null;\n\t                this._additionsHead = this._additionsTail = null;\n\t                this._removalsHead = this._removalsTail = null;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n\t            while (record !== null) {\n\t                if (lastRecord === null) {\n\t                    this._mapHead = null;\n\t                }\n\t                else {\n\t                    lastRecord._next = null;\n\t                }\n\t                var nextRecord = record._next;\n\t                this._addToRemovals(record);\n\t                lastRecord = record;\n\t                record = nextRecord;\n\t            }\n\t            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n\t                rec.previousValue = rec.currentValue;\n\t                rec.currentValue = null;\n\t                this._records.delete(rec.key);\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n\t            if (!looseIdentical(newValue, record.currentValue)) {\n\t                record.previousValue = record.currentValue;\n\t                record.currentValue = newValue;\n\t                this._addToChanges(record);\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n\t            return record === this._removalsHead || record._nextRemoved !== null ||\n\t                record._prevRemoved !== null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n\t            if (this._removalsHead === null) {\n\t                this._removalsHead = this._removalsTail = record;\n\t            }\n\t            else {\n\t                this._removalsTail._nextRemoved = record;\n\t                record._prevRemoved = this._removalsTail;\n\t                this._removalsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n\t            var next = record._next;\n\t            if (prev === null) {\n\t                this._mapHead = next;\n\t            }\n\t            else {\n\t                prev._next = next;\n\t            }\n\t            record._next = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n\t            var prev = record._prevRemoved;\n\t            var next = record._nextRemoved;\n\t            if (prev === null) {\n\t                this._removalsHead = next;\n\t            }\n\t            else {\n\t                prev._nextRemoved = next;\n\t            }\n\t            if (next === null) {\n\t                this._removalsTail = prev;\n\t            }\n\t            else {\n\t                next._prevRemoved = prev;\n\t            }\n\t            record._prevRemoved = record._nextRemoved = null;\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n\t            if (this._additionsHead === null) {\n\t                this._additionsHead = this._additionsTail = record;\n\t            }\n\t            else {\n\t                this._additionsTail._nextAdded = record;\n\t                this._additionsTail = record;\n\t            }\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n\t            if (this._changesHead === null) {\n\t                this._changesHead = this._changesTail = record;\n\t            }\n\t            else {\n\t                this._changesTail._nextChanged = record;\n\t                this._changesTail = record;\n\t            }\n\t        };\n\t        DefaultKeyValueDiffer.prototype.toString = function () {\n\t            var items = [];\n\t            var previous = [];\n\t            var changes = [];\n\t            var additions = [];\n\t            var removals = [];\n\t            var record;\n\t            for (record = this._mapHead; record !== null; record = record._next) {\n\t                items.push(stringify(record));\n\t            }\n\t            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n\t                previous.push(stringify(record));\n\t            }\n\t            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n\t                changes.push(stringify(record));\n\t            }\n\t            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n\t                additions.push(stringify(record));\n\t            }\n\t            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n\t                removals.push(stringify(record));\n\t            }\n\t            return 'map: ' + items.join(', ') + '\\n' +\n\t                'previous: ' + previous.join(', ') + '\\n' +\n\t                'additions: ' + additions.join(', ') + '\\n' +\n\t                'changes: ' + changes.join(', ') + '\\n' +\n\t                'removals: ' + removals.join(', ') + '\\n';\n\t        };\n\t        /** @internal */\n\t        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n\t            if (obj instanceof Map) {\n\t                obj.forEach(fn);\n\t            }\n\t            else {\n\t                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n\t            }\n\t        };\n\t        return DefaultKeyValueDiffer;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var KeyValueChangeRecord = (function () {\n\t        function KeyValueChangeRecord(key) {\n\t            this.key = key;\n\t            this.previousValue = null;\n\t            this.currentValue = null;\n\t            /** @internal */\n\t            this._nextPrevious = null;\n\t            /** @internal */\n\t            this._next = null;\n\t            /** @internal */\n\t            this._nextAdded = null;\n\t            /** @internal */\n\t            this._nextRemoved = null;\n\t            /** @internal */\n\t            this._prevRemoved = null;\n\t            /** @internal */\n\t            this._nextChanged = null;\n\t        }\n\t        KeyValueChangeRecord.prototype.toString = function () {\n\t            return looseIdentical(this.previousValue, this.currentValue) ?\n\t                stringify(this.key) :\n\t                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n\t                    stringify(this.currentValue) + ']');\n\t        };\n\t        return KeyValueChangeRecord;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n\t     * @stable\n\t     */\n\t    var IterableDiffers = (function () {\n\t        function IterableDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        IterableDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new IterableDiffers(factories);\n\t            }\n\t            else {\n\t                return new IterableDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n\t         * {@link IterableDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link IterableDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     IterableDiffers.extend([new ImmutableListDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        IterableDiffers.extend = function (factories) {\n\t            return {\n\t                provide: IterableDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n\t                    }\n\t                    return IterableDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        IterableDiffers.prototype.find = function (iterable) {\n\t            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n\t            }\n\t        };\n\t        return IterableDiffers;\n\t    }());\n\t\n\t    /**\n\t     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n\t     * @stable\n\t     */\n\t    var KeyValueDiffers = (function () {\n\t        function KeyValueDiffers(factories) {\n\t            this.factories = factories;\n\t        }\n\t        KeyValueDiffers.create = function (factories, parent) {\n\t            if (isPresent(parent)) {\n\t                var copied = parent.factories.slice();\n\t                factories = factories.concat(copied);\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t            else {\n\t                return new KeyValueDiffers(factories);\n\t            }\n\t        };\n\t        /**\n\t         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n\t         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n\t         * {@link KeyValueDiffers} instance.\n\t         *\n\t         * The following example shows how to extend an existing list of factories,\n\t               * which will only be applied to the injector for this component and its children.\n\t               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * @Component({\n\t         *   viewProviders: [\n\t         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n\t         *   ]\n\t         * })\n\t         * ```\n\t         */\n\t        KeyValueDiffers.extend = function (factories) {\n\t            return {\n\t                provide: KeyValueDiffers,\n\t                useFactory: function (parent) {\n\t                    if (!parent) {\n\t                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n\t                        // to\n\t                        // bootstrap(), which would override default pipes instead of extending them.\n\t                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n\t                    }\n\t                    return KeyValueDiffers.create(factories, parent);\n\t                },\n\t                // Dependency technically isn't optional, but we can provide a better error message this way.\n\t                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n\t            };\n\t        };\n\t        KeyValueDiffers.prototype.find = function (kv) {\n\t            var factory = this.factories.find(function (f) { return f.supports(kv); });\n\t            if (isPresent(factory)) {\n\t                return factory;\n\t            }\n\t            else {\n\t                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n\t            }\n\t        };\n\t        return KeyValueDiffers;\n\t    }());\n\t\n\t    var UNINITIALIZED = {\n\t        toString: function () { return 'CD_INIT_VALUE'; }\n\t    };\n\t    function devModeEqual(a, b) {\n\t        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n\t            return areIterablesEqual(a, b, devModeEqual);\n\t        }\n\t        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n\t            return true;\n\t        }\n\t        else {\n\t            return looseIdentical(a, b);\n\t        }\n\t    }\n\t    /**\n\t     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n\t     * reference\n\t     * has not changed.\n\t     *\n\t     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```\n\t     * if (this._latestValue === this._latestReturnedValue) {\n\t     *    return this._latestReturnedValue;\n\t     *  } else {\n\t     *    this._latestReturnedValue = this._latestValue;\n\t     *    return WrappedValue.wrap(this._latestValue); // this will force update\n\t     *  }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var WrappedValue = (function () {\n\t        function WrappedValue(wrapped) {\n\t            this.wrapped = wrapped;\n\t        }\n\t        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n\t        return WrappedValue;\n\t    }());\n\t    /**\n\t     * Helper class for unwrapping WrappedValue s\n\t     */\n\t    var ValueUnwrapper = (function () {\n\t        function ValueUnwrapper() {\n\t            this.hasWrappedValue = false;\n\t        }\n\t        ValueUnwrapper.prototype.unwrap = function (value) {\n\t            if (value instanceof WrappedValue) {\n\t                this.hasWrappedValue = true;\n\t                return value.wrapped;\n\t            }\n\t            return value;\n\t        };\n\t        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n\t        return ValueUnwrapper;\n\t    }());\n\t    /**\n\t     * Represents a basic change from a previous to a new value.\n\t     * @stable\n\t     */\n\t    var SimpleChange = (function () {\n\t        function SimpleChange(previousValue, currentValue) {\n\t            this.previousValue = previousValue;\n\t            this.currentValue = currentValue;\n\t        }\n\t        /**\n\t         * Check whether the new value is the first value assigned.\n\t         */\n\t        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n\t        return SimpleChange;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @stable\n\t     */\n\t    var ChangeDetectorRef = (function () {\n\t        function ChangeDetectorRef() {\n\t        }\n\t        return ChangeDetectorRef;\n\t    }());\n\t\n\t    /**\n\t     * Structural diffing for `Object`s and `Map`s.\n\t     */\n\t    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n\t    /**\n\t     * Structural diffing for `Iterable` types such as `Array`s.\n\t     */\n\t    var iterableDiff = [new DefaultIterableDifferFactory()];\n\t    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\t    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\t\n\t    /**\n\t     * @experimental\n\t     */\n\t    // TODO (matsko): add typing for the animation function\n\t    var RenderComponentType = (function () {\n\t        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n\t            this.id = id;\n\t            this.templateUrl = templateUrl;\n\t            this.slotCount = slotCount;\n\t            this.encapsulation = encapsulation;\n\t            this.styles = styles;\n\t            this.animations = animations;\n\t        }\n\t        return RenderComponentType;\n\t    }());\n\t    var RenderDebugInfo = (function () {\n\t        function RenderDebugInfo() {\n\t        }\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return RenderDebugInfo;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var Renderer = (function () {\n\t        function Renderer() {\n\t        }\n\t        return Renderer;\n\t    }());\n\t    /**\n\t     * Injectable service that provides a low-level interface for modifying the UI.\n\t     *\n\t     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n\t     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n\t     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n\t     * respectively.\n\t     *\n\t     * If you are implementing a custom renderer, you must implement this interface.\n\t     *\n\t     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n\t     * @experimental\n\t     */\n\t    var RootRenderer = (function () {\n\t        function RootRenderer() {\n\t        }\n\t        return RootRenderer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n\t     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n\t     * handled.\n\t     *\n\t     * See DomSanitizer for more details on security in Angular applications.\n\t     *\n\t     * @stable\n\t     */\n\t    exports.SecurityContext;\n\t    (function (SecurityContext) {\n\t        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n\t        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n\t        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n\t        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n\t        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n\t        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n\t    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\t    /**\n\t     * Sanitizer is used by the views to sanitize potentially dangerous values.\n\t     *\n\t     * @stable\n\t     */\n\t    var Sanitizer = (function () {\n\t        function Sanitizer() {\n\t        }\n\t        return Sanitizer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * An error thrown if application changes model breaking the top-down data flow.\n\t     *\n\t     * This exception is only thrown in dev mode.\n\t     *\n\t     * <!-- TODO: Add a link once the dev mode option is configurable -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'parent',\n\t     *   template: '<child [prop]=\"parentProp\"></child>',\n\t     * })\n\t     * class Parent {\n\t     *   parentProp = 'init';\n\t     * }\n\t     *\n\t     * @Directive({selector: 'child', inputs: ['prop']})\n\t     * class Child {\n\t     *   constructor(public parent: Parent) {}\n\t     *\n\t     *   set prop(v) {\n\t     *     // this updates the parent property, which is disallowed during change detection\n\t     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n\t     *     this.parent.parentProp = 'updated';\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n\t        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n\t        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n\t            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n\t            if (oldValue === UNINITIALIZED) {\n\t                msg +=\n\t                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n\t                        \" Has it been created in a change detection hook ?\";\n\t            }\n\t            _super.call(this, msg);\n\t        }\n\t        return ExpressionChangedAfterItHasBeenCheckedError;\n\t    }(BaseError));\n\t    /**\n\t     * Thrown when an exception was raised during view creation, change detection or destruction.\n\t     *\n\t     * This error wraps the original exception to attach additional contextual information that can\n\t     * be useful for debugging.\n\t     * @stable\n\t     */\n\t    var ViewWrappedError = (function (_super) {\n\t        __extends$6(ViewWrappedError, _super);\n\t        function ViewWrappedError(originalError, context) {\n\t            _super.call(this, \"Error in \" + context.source, originalError);\n\t            this.context = context;\n\t        }\n\t        return ViewWrappedError;\n\t    }(WrappedError));\n\t    /**\n\t     * Thrown when a destroyed view is used.\n\t     *\n\t     * This error indicates a bug in the framework.\n\t     *\n\t     * This is an internal Angular error.\n\t     * @stable\n\t     */\n\t    var ViewDestroyedError = (function (_super) {\n\t        __extends$6(ViewDestroyedError, _super);\n\t        function ViewDestroyedError(details) {\n\t            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n\t        }\n\t        return ViewDestroyedError;\n\t    }(BaseError));\n\t\n\t    var ViewUtils = (function () {\n\t        function ViewUtils(_renderer, sanitizer) {\n\t            this._renderer = _renderer;\n\t            this._nextCompTypeId = 0;\n\t            this.sanitizer = sanitizer;\n\t        }\n\t        /** @internal */\n\t        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n\t            return this._renderer.renderComponent(renderComponentType);\n\t        };\n\t        ViewUtils.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ViewUtils.ctorParameters = [\n\t            { type: RootRenderer, },\n\t            { type: Sanitizer, },\n\t        ];\n\t        return ViewUtils;\n\t    }());\n\t    var nextRenderComponentTypeId = 0;\n\t    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n\t        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n\t    }\n\t    function addToArray(e, array) {\n\t        array.push(e);\n\t    }\n\t    function interpolate(valueCount, constAndInterp) {\n\t        var result = '';\n\t        for (var i = 0; i < valueCount * 2; i = i + 2) {\n\t            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n\t        }\n\t        return result + constAndInterp[valueCount * 2];\n\t    }\n\t    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n\t        switch (valueCount) {\n\t            case 1:\n\t                return c0 + _toStringWithNull(a1) + c1;\n\t            case 2:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n\t            case 3:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3;\n\t            case 4:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4;\n\t            case 5:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n\t            case 6:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n\t            case 7:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7;\n\t            case 8:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n\t            case 9:\n\t                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n\t                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n\t                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n\t            default:\n\t                throw new Error(\"Does not support more than 9 expressions\");\n\t        }\n\t    }\n\t    function _toStringWithNull(v) {\n\t        return v != null ? v.toString() : '';\n\t    }\n\t    function checkBinding(throwOnChange, oldValue, newValue) {\n\t        if (throwOnChange) {\n\t            if (!devModeEqual(oldValue, newValue)) {\n\t                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n\t            }\n\t            return false;\n\t        }\n\t        else {\n\t            return !looseIdentical(oldValue, newValue);\n\t        }\n\t    }\n\t    function castByValue(input, value) {\n\t        return input;\n\t    }\n\t    var EMPTY_ARRAY = [];\n\t    var EMPTY_MAP = {};\n\t    function pureProxy1(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        return function (p0) {\n\t            if (!looseIdentical(v0, p0)) {\n\t                v0 = p0;\n\t                result = fn(p0);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy2(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        return function (p0, p1) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                result = fn(p0, p1);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy3(fn) {\n\t        var result;\n\t        var v0 = UNINITIALIZED;\n\t        var v1 = UNINITIALIZED;\n\t        var v2 = UNINITIALIZED;\n\t        return function (p0, p1, p2) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                result = fn(p0, p1, p2);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy4(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3;\n\t        v0 = v1 = v2 = v3 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                result = fn(p0, p1, p2, p3);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy5(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4;\n\t        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                result = fn(p0, p1, p2, p3, p4);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy6(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                result = fn(p0, p1, p2, p3, p4, p5);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy7(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy8(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy9(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function pureProxy10(fn) {\n\t        var result;\n\t        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n\t        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n\t        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n\t            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n\t                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n\t                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n\t                !looseIdentical(v9, p9)) {\n\t                v0 = p0;\n\t                v1 = p1;\n\t                v2 = p2;\n\t                v3 = p3;\n\t                v4 = p4;\n\t                v5 = p5;\n\t                v6 = p6;\n\t                v7 = p7;\n\t                v8 = p8;\n\t                v9 = p9;\n\t                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n\t            }\n\t            return result;\n\t        };\n\t    }\n\t    function setBindingDebugInfoForChanges(renderer, el, changes) {\n\t        Object.keys(changes).forEach(function (propName) {\n\t            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n\t        });\n\t    }\n\t    function setBindingDebugInfo(renderer, el, propName, value) {\n\t        try {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n\t        }\n\t        catch (e) {\n\t            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n\t        }\n\t    }\n\t    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n\t    function camelCaseToDashCase(input) {\n\t        return input.replace(CAMEL_CASE_REGEXP, function () {\n\t            var m = [];\n\t            for (var _i = 0; _i < arguments.length; _i++) {\n\t                m[_i - 0] = arguments[_i];\n\t            }\n\t            return '-' + m[1].toLowerCase();\n\t        });\n\t    }\n\t    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n\t        var el = renderer.createElement(parentElement, name, debugInfo);\n\t        for (var i = 0; i < attrs.length; i += 2) {\n\t            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n\t        }\n\t        return el;\n\t    }\n\t    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n\t        var hostElement;\n\t        if (isPresent(rootSelectorOrNode)) {\n\t            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n\t            for (var i = 0; i < attrs.length; i += 2) {\n\t                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n\t            }\n\t        }\n\t        else {\n\t            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n\t        }\n\t        return hostElement;\n\t    }\n\t    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n\t        var disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n\t        for (var i = 0; i < eventNamesAndTargets.length; i += 2) {\n\t            var eventName = eventNamesAndTargets.get(i);\n\t            var eventTarget = eventNamesAndTargets.get(i + 1);\n\t            var disposable = void 0;\n\t            if (eventTarget) {\n\t                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n\t            }\n\t            else {\n\t                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n\t            }\n\t            disposables.set(i / 2, disposable);\n\t        }\n\t        return disposeInlineArray.bind(null, disposables);\n\t    }\n\t    function disposeInlineArray(disposables) {\n\t        for (var i = 0; i < disposables.length; i++) {\n\t            disposables.get(i)();\n\t        }\n\t    }\n\t    function noop() { }\n\t    function createEmptyInlineArray(length) {\n\t        var ctor;\n\t        if (length <= 2) {\n\t            ctor = InlineArray2;\n\t        }\n\t        else if (length <= 4) {\n\t            ctor = InlineArray4;\n\t        }\n\t        else if (length <= 8) {\n\t            ctor = InlineArray8;\n\t        }\n\t        else if (length <= 16) {\n\t            ctor = InlineArray16;\n\t        }\n\t        else {\n\t            ctor = InlineArrayDynamic;\n\t        }\n\t        return new ctor(length);\n\t    }\n\t    var InlineArray0 = (function () {\n\t        function InlineArray0() {\n\t            this.length = 0;\n\t        }\n\t        InlineArray0.prototype.get = function (index) { return undefined; };\n\t        InlineArray0.prototype.set = function (index, value) { };\n\t        return InlineArray0;\n\t    }());\n\t    var InlineArray2 = (function () {\n\t        function InlineArray2(length, _v0, _v1) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t        }\n\t        InlineArray2.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        InlineArray2.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray2;\n\t    }());\n\t    var InlineArray4 = (function () {\n\t        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t        }\n\t        InlineArray4.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        InlineArray4.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray4;\n\t    }());\n\t    var InlineArray8 = (function () {\n\t        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t        }\n\t        InlineArray8.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        InlineArray8.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray8;\n\t    }());\n\t    var InlineArray16 = (function () {\n\t        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n\t            this.length = length;\n\t            this._v0 = _v0;\n\t            this._v1 = _v1;\n\t            this._v2 = _v2;\n\t            this._v3 = _v3;\n\t            this._v4 = _v4;\n\t            this._v5 = _v5;\n\t            this._v6 = _v6;\n\t            this._v7 = _v7;\n\t            this._v8 = _v8;\n\t            this._v9 = _v9;\n\t            this._v10 = _v10;\n\t            this._v11 = _v11;\n\t            this._v12 = _v12;\n\t            this._v13 = _v13;\n\t            this._v14 = _v14;\n\t            this._v15 = _v15;\n\t        }\n\t        InlineArray16.prototype.get = function (index) {\n\t            switch (index) {\n\t                case 0:\n\t                    return this._v0;\n\t                case 1:\n\t                    return this._v1;\n\t                case 2:\n\t                    return this._v2;\n\t                case 3:\n\t                    return this._v3;\n\t                case 4:\n\t                    return this._v4;\n\t                case 5:\n\t                    return this._v5;\n\t                case 6:\n\t                    return this._v6;\n\t                case 7:\n\t                    return this._v7;\n\t                case 8:\n\t                    return this._v8;\n\t                case 9:\n\t                    return this._v9;\n\t                case 10:\n\t                    return this._v10;\n\t                case 11:\n\t                    return this._v11;\n\t                case 12:\n\t                    return this._v12;\n\t                case 13:\n\t                    return this._v13;\n\t                case 14:\n\t                    return this._v14;\n\t                case 15:\n\t                    return this._v15;\n\t                default:\n\t                    return undefined;\n\t            }\n\t        };\n\t        InlineArray16.prototype.set = function (index, value) {\n\t            switch (index) {\n\t                case 0:\n\t                    this._v0 = value;\n\t                    break;\n\t                case 1:\n\t                    this._v1 = value;\n\t                    break;\n\t                case 2:\n\t                    this._v2 = value;\n\t                    break;\n\t                case 3:\n\t                    this._v3 = value;\n\t                    break;\n\t                case 4:\n\t                    this._v4 = value;\n\t                    break;\n\t                case 5:\n\t                    this._v5 = value;\n\t                    break;\n\t                case 6:\n\t                    this._v6 = value;\n\t                    break;\n\t                case 7:\n\t                    this._v7 = value;\n\t                    break;\n\t                case 8:\n\t                    this._v8 = value;\n\t                    break;\n\t                case 9:\n\t                    this._v9 = value;\n\t                    break;\n\t                case 10:\n\t                    this._v10 = value;\n\t                    break;\n\t                case 11:\n\t                    this._v11 = value;\n\t                    break;\n\t                case 12:\n\t                    this._v12 = value;\n\t                    break;\n\t                case 13:\n\t                    this._v13 = value;\n\t                    break;\n\t                case 14:\n\t                    this._v14 = value;\n\t                    break;\n\t                case 15:\n\t                    this._v15 = value;\n\t                    break;\n\t            }\n\t        };\n\t        return InlineArray16;\n\t    }());\n\t    var InlineArrayDynamic = (function () {\n\t        // Note: We still take the length argument so this class can be created\n\t        // in the same ways as the other classes!\n\t        function InlineArrayDynamic(length) {\n\t            var values = [];\n\t            for (var _i = 1; _i < arguments.length; _i++) {\n\t                values[_i - 1] = arguments[_i];\n\t            }\n\t            this.length = length;\n\t            this._values = values;\n\t        }\n\t        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n\t        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n\t        return InlineArrayDynamic;\n\t    }());\n\t    var EMPTY_INLINE_ARRAY = new InlineArray0();\n\t\n\t\n\t    var view_utils = Object.freeze({\n\t        ViewUtils: ViewUtils,\n\t        createRenderComponentType: createRenderComponentType,\n\t        addToArray: addToArray,\n\t        interpolate: interpolate,\n\t        inlineInterpolate: inlineInterpolate,\n\t        checkBinding: checkBinding,\n\t        castByValue: castByValue,\n\t        EMPTY_ARRAY: EMPTY_ARRAY,\n\t        EMPTY_MAP: EMPTY_MAP,\n\t        pureProxy1: pureProxy1,\n\t        pureProxy2: pureProxy2,\n\t        pureProxy3: pureProxy3,\n\t        pureProxy4: pureProxy4,\n\t        pureProxy5: pureProxy5,\n\t        pureProxy6: pureProxy6,\n\t        pureProxy7: pureProxy7,\n\t        pureProxy8: pureProxy8,\n\t        pureProxy9: pureProxy9,\n\t        pureProxy10: pureProxy10,\n\t        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n\t        setBindingDebugInfo: setBindingDebugInfo,\n\t        createRenderElement: createRenderElement,\n\t        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n\t        subscribeToRenderElement: subscribeToRenderElement,\n\t        noop: noop,\n\t        InlineArray2: InlineArray2,\n\t        InlineArray4: InlineArray4,\n\t        InlineArray8: InlineArray8,\n\t        InlineArray16: InlineArray16,\n\t        InlineArrayDynamic: InlineArrayDynamic,\n\t        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n\t    });\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of a Component created via a {@link ComponentFactory}.\n\t     *\n\t     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n\t     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n\t     * method.\n\t     * @stable\n\t     */\n\t    var ComponentRef = (function () {\n\t        function ComponentRef() {\n\t        }\n\t        Object.defineProperty(ComponentRef.prototype, \"location\", {\n\t            /**\n\t             * Location of the Host Element of this Component Instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector on which the component instance exists.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n\t            /**\n\t             * The instance of the Component.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n\t            /**\n\t             * The {@link ViewRef} of the Host View of this Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n\t            /**\n\t             * The {@link ChangeDetectorRef} of the Component instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n\t            /**\n\t             * The component type.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ComponentRef;\n\t    }());\n\t    var ComponentRef_ = (function (_super) {\n\t        __extends$5(ComponentRef_, _super);\n\t        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n\t            _super.call(this);\n\t            this._index = _index;\n\t            this._parentView = _parentView;\n\t            this._nativeElement = _nativeElement;\n\t            this._component = _component;\n\t        }\n\t        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n\t            get: function () { return this._parentView.injector(this._index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n\t            get: function () { return this._component; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this._parentView.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n\t            get: function () { return this._component.constructor; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n\t        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n\t        return ComponentRef_;\n\t    }(ComponentRef));\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactory = (function () {\n\t        function ComponentFactory(selector, _viewClass, _componentType) {\n\t            this.selector = selector;\n\t            this._viewClass = _viewClass;\n\t            this._componentType = _componentType;\n\t        }\n\t        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n\t            get: function () { return this._componentType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Creates a new component.\n\t         */\n\t        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n\t            var vu = injector.get(ViewUtils);\n\t            if (!projectableNodes) {\n\t                projectableNodes = [];\n\t            }\n\t            var hostView = new this._viewClass(vu, null, null, null);\n\t            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n\t        };\n\t        return ComponentFactory;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var NoComponentFactoryError = (function (_super) {\n\t        __extends$7(NoComponentFactoryError, _super);\n\t        function NoComponentFactoryError(component) {\n\t            _super.call(this, \"No component factory found for \" + stringify(component));\n\t            this.component = component;\n\t        }\n\t        return NoComponentFactoryError;\n\t    }(BaseError));\n\t    var _NullComponentFactoryResolver = (function () {\n\t        function _NullComponentFactoryResolver() {\n\t        }\n\t        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            throw new NoComponentFactoryError(component);\n\t        };\n\t        return _NullComponentFactoryResolver;\n\t    }());\n\t    /**\n\t     * @stable\n\t     */\n\t    var ComponentFactoryResolver = (function () {\n\t        function ComponentFactoryResolver() {\n\t        }\n\t        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n\t        return ComponentFactoryResolver;\n\t    }());\n\t    var CodegenComponentFactoryResolver = (function () {\n\t        function CodegenComponentFactoryResolver(factories, _parent) {\n\t            this._parent = _parent;\n\t            this._factories = new Map();\n\t            for (var i = 0; i < factories.length; i++) {\n\t                var factory = factories[i];\n\t                this._factories.set(factory.componentType, factory);\n\t            }\n\t        }\n\t        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n\t            var result = this._factories.get(component);\n\t            if (!result) {\n\t                result = this._parent.resolveComponentFactory(component);\n\t            }\n\t            return result;\n\t        };\n\t        return CodegenComponentFactoryResolver;\n\t    }());\n\t\n\t    var trace;\n\t    var events;\n\t    function detectWTF() {\n\t        var wtf = global$1['wtf'];\n\t        if (wtf) {\n\t            trace = wtf['trace'];\n\t            if (trace) {\n\t                events = trace['events'];\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\t    function createScope(signature, flags) {\n\t        if (flags === void 0) { flags = null; }\n\t        return events.createScope(signature, flags);\n\t    }\n\t    function leave(scope, returnValue) {\n\t        trace.leaveScope(scope, returnValue);\n\t        return returnValue;\n\t    }\n\t    function startTimeRange(rangeType, action) {\n\t        return trace.beginTimeRange(rangeType, action);\n\t    }\n\t    function endTimeRange(range) {\n\t        trace.endTimeRange(range);\n\t    }\n\t\n\t    /**\n\t     * True if WTF is enabled.\n\t     */\n\t    var wtfEnabled = detectWTF();\n\t    function noopScope(arg0, arg1) {\n\t        return null;\n\t    }\n\t    /**\n\t     * Create trace scope.\n\t     *\n\t     * Scopes must be strictly nested and are analogous to stack frames, but\n\t     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n\t     * nesting. You may want to use\n\t     * [Event\n\t     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n\t     * as they are defined in WTF.\n\t     *\n\t     * Used to mark scope entry. The return value is used to leave the scope.\n\t     *\n\t     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n\t     *\n\t     *     someMethod() {\n\t     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n\t     *        // DO SOME WORK HERE\n\t     *        return wtfLeave(s, 123); // Return value 123\n\t     *     }\n\t     *\n\t     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n\t     * negatively impact the performance of your application. For this reason we recommend that\n\t     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n\t     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n\t     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n\t     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n\t     * an exception is expected during normal execution while profiling.\n\t     *\n\t     * @experimental\n\t     */\n\t    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n\t    /**\n\t     * Used to mark end of Scope.\n\t     *\n\t     * - `scope` to end.\n\t     * - `returnValue` (optional) to be passed to the WTF.\n\t     *\n\t     * Returns the `returnValue for easy chaining.\n\t     * @experimental\n\t     */\n\t    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n\t    /**\n\t     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n\t     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n\t     * enabled.\n\t     *\n\t     *     someMethod() {\n\t     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n\t     *        var future = new Future.delay(5).then((_) {\n\t     *          wtfEndTimeRange(s);\n\t     *        });\n\t     *     }\n\t     * @experimental\n\t     */\n\t    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n\t    /**\n\t     * Ends a async time range operation.\n\t     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n\t     * enabled.\n\t     * @experimental\n\t     */\n\t    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * @Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   @Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   @Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * @stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$8(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var schedulerFn;\n\t            var errorFn = function (err) { return null; };\n\t            var completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * An injectable service for executing work inside or outside of the Angular zone.\n\t     *\n\t     * The most common use of this service is to optimize performance when starting a work consisting of\n\t     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n\t     * Angular. Such tasks can be kicked off via {@link runOutsideAngular} and if needed, these tasks\n\t     * can reenter the Angular zone via {@link run}.\n\t     *\n\t     * <!-- TODO: add/fix links to:\n\t     *   - docs explaining zones and the use of zones in Angular and change-detection\n\t     *   - link to runOutsideAngular/run (throughout this file!)\n\t     *   -->\n\t     *\n\t     * ### Example\n\t     * ```\n\t     * import {Component, NgZone} from '@angular/core';\n\t     * import {NgIf} from '@angular/common';\n\t     *\n\t     * @Component({\n\t     *   selector: 'ng-zone-demo'.\n\t     *   template: `\n\t     *     <h2>Demo: NgZone</h2>\n\t     *\n\t     *     <p>Progress: {{progress}}%</p>\n\t     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n\t     *\n\t     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n\t     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n\t     *   `,\n\t     * })\n\t     * export class NgZoneDemo {\n\t     *   progress: number = 0;\n\t     *   label: string;\n\t     *\n\t     *   constructor(private _ngZone: NgZone) {}\n\t     *\n\t     *   // Loop inside the Angular zone\n\t     *   // so the UI DOES refresh after each setTimeout cycle\n\t     *   processWithinAngularZone() {\n\t     *     this.label = 'inside';\n\t     *     this.progress = 0;\n\t     *     this._increaseProgress(() => console.log('Inside Done!'));\n\t     *   }\n\t     *\n\t     *   // Loop outside of the Angular zone\n\t     *   // so the UI DOES NOT refresh after each setTimeout cycle\n\t     *   processOutsideOfAngularZone() {\n\t     *     this.label = 'outside';\n\t     *     this.progress = 0;\n\t     *     this._ngZone.runOutsideAngular(() => {\n\t     *       this._increaseProgress(() => {\n\t     *       // reenter the Angular zone and display done\n\t     *       this._ngZone.run(() => {console.log('Outside Done!') });\n\t     *     }}));\n\t     *   }\n\t     *\n\t     *   _increaseProgress(doneCallback: () => void) {\n\t     *     this.progress += 1;\n\t     *     console.log(`Current progress: ${this.progress}%`);\n\t     *\n\t     *     if (this.progress < 100) {\n\t     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n\t     *     } else {\n\t     *       doneCallback();\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var NgZone = (function () {\n\t        function NgZone(_a) {\n\t            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n\t            this._hasPendingMicrotasks = false;\n\t            this._hasPendingMacrotasks = false;\n\t            this._isStable = true;\n\t            this._nesting = 0;\n\t            this._onUnstable = new EventEmitter(false);\n\t            this._onMicrotaskEmpty = new EventEmitter(false);\n\t            this._onStable = new EventEmitter(false);\n\t            this._onErrorEvents = new EventEmitter(false);\n\t            if (typeof Zone == 'undefined') {\n\t                throw new Error('Angular requires Zone.js prolyfill.');\n\t            }\n\t            Zone.assertZonePatched();\n\t            this.outer = this.inner = Zone.current;\n\t            if (Zone['wtfZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n\t            }\n\t            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n\t                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n\t            }\n\t            this.forkInnerZoneWithAngularBehavior();\n\t        }\n\t        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n\t        NgZone.assertInAngularZone = function () {\n\t            if (!NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to be in Angular Zone, but it is not!');\n\t            }\n\t        };\n\t        NgZone.assertNotInAngularZone = function () {\n\t            if (NgZone.isInAngularZone()) {\n\t                throw new Error('Expected to not be in Angular Zone, but it is!');\n\t            }\n\t        };\n\t        /**\n\t         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n\t         * outside of the Angular zone (typically started via {@link runOutsideAngular}).\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * within the Angular zone.\n\t         *\n\t         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n\t         */\n\t        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n\t        /**\n\t         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n\t         * rethrown.\n\t         */\n\t        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n\t        /**\n\t         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n\t         * the function.\n\t         *\n\t         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n\t         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n\t         *\n\t         * Any future tasks or microtasks scheduled from within this function will continue executing from\n\t         * outside of the Angular zone.\n\t         *\n\t         * Use {@link run} to reenter the Angular zone and do work that updates the application model.\n\t         */\n\t        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n\t        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n\t            /**\n\t             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n\t             */\n\t            get: function () { return this._onUnstable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n\t            /**\n\t             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n\t             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n\t             * For this reason this event can fire multiple times per VM Turn.\n\t             */\n\t            get: function () { return this._onMicrotaskEmpty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onStable\", {\n\t            /**\n\t             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n\t             * implies we are about to relinquish VM turn.\n\t             * This event gets called just once.\n\t             */\n\t            get: function () { return this._onStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"onError\", {\n\t            /**\n\t             * Notify that an error has been delivered.\n\t             */\n\t            get: function () { return this._onErrorEvents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"isStable\", {\n\t            /**\n\t             * Whether there are no outstanding microtasks or macrotasks.\n\t             */\n\t            get: function () { return this._isStable; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n\t            get: function () { return this._hasPendingMicrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n\t            get: function () { return this._hasPendingMacrotasks; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgZone.prototype.checkStable = function () {\n\t            var _this = this;\n\t            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n\t                try {\n\t                    this._nesting++;\n\t                    this._onMicrotaskEmpty.emit(null);\n\t                }\n\t                finally {\n\t                    this._nesting--;\n\t                    if (!this._hasPendingMicrotasks) {\n\t                        try {\n\t                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n\t                        }\n\t                        finally {\n\t                            this._isStable = true;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n\t            var _this = this;\n\t            this.inner = this.inner.fork({\n\t                name: 'angular',\n\t                properties: { 'isAngularZone': true },\n\t                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n\t                    try {\n\t                        _this.onEnter();\n\t                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n\t                    }\n\t                    finally {\n\t                        _this.onLeave();\n\t                    }\n\t                },\n\t                onHasTask: function (delegate, current, target, hasTaskState) {\n\t                    delegate.hasTask(target, hasTaskState);\n\t                    if (current === target) {\n\t                        // We are only interested in hasTask events which originate from our zone\n\t                        // (A child hasTask event is not interesting to us)\n\t                        if (hasTaskState.change == 'microTask') {\n\t                            _this.setHasMicrotask(hasTaskState.microTask);\n\t                        }\n\t                        else if (hasTaskState.change == 'macroTask') {\n\t                            _this.setHasMacrotask(hasTaskState.macroTask);\n\t                        }\n\t                    }\n\t                },\n\t                onHandleError: function (delegate, current, target, error) {\n\t                    delegate.handleError(target, error);\n\t                    _this.triggerError(error);\n\t                    return false;\n\t                }\n\t            });\n\t        };\n\t        NgZone.prototype.onEnter = function () {\n\t            this._nesting++;\n\t            if (this._isStable) {\n\t                this._isStable = false;\n\t                this._onUnstable.emit(null);\n\t            }\n\t        };\n\t        NgZone.prototype.onLeave = function () {\n\t            this._nesting--;\n\t            this.checkStable();\n\t        };\n\t        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n\t            this._hasPendingMicrotasks = hasMicrotasks;\n\t            this.checkStable();\n\t        };\n\t        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n\t        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n\t        return NgZone;\n\t    }());\n\t\n\t    /**\n\t     * The Testability service provides testing hooks that can be accessed from\n\t     * the browser and by services such as Protractor. Each bootstrapped Angular\n\t     * application on the page will have an instance of Testability.\n\t     * @experimental\n\t     */\n\t    var Testability = (function () {\n\t        function Testability(_ngZone) {\n\t            this._ngZone = _ngZone;\n\t            /** @internal */\n\t            this._pendingCount = 0;\n\t            /** @internal */\n\t            this._isZoneStable = true;\n\t            /**\n\t             * Whether any work was done since the last 'whenStable' callback. This is\n\t             * useful to detect if this could have potentially destabilized another\n\t             * component while it is stabilizing.\n\t             * @internal\n\t             */\n\t            this._didWork = false;\n\t            /** @internal */\n\t            this._callbacks = [];\n\t            this._watchAngularEvents();\n\t        }\n\t        /** @internal */\n\t        Testability.prototype._watchAngularEvents = function () {\n\t            var _this = this;\n\t            this._ngZone.onUnstable.subscribe({\n\t                next: function () {\n\t                    _this._didWork = true;\n\t                    _this._isZoneStable = false;\n\t                }\n\t            });\n\t            this._ngZone.runOutsideAngular(function () {\n\t                _this._ngZone.onStable.subscribe({\n\t                    next: function () {\n\t                        NgZone.assertNotInAngularZone();\n\t                        scheduleMicroTask(function () {\n\t                            _this._isZoneStable = true;\n\t                            _this._runCallbacksIfReady();\n\t                        });\n\t                    }\n\t                });\n\t            });\n\t        };\n\t        Testability.prototype.increasePendingRequestCount = function () {\n\t            this._pendingCount += 1;\n\t            this._didWork = true;\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.decreasePendingRequestCount = function () {\n\t            this._pendingCount -= 1;\n\t            if (this._pendingCount < 0) {\n\t                throw new Error('pending async requests below zero');\n\t            }\n\t            this._runCallbacksIfReady();\n\t            return this._pendingCount;\n\t        };\n\t        Testability.prototype.isStable = function () {\n\t            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n\t        };\n\t        /** @internal */\n\t        Testability.prototype._runCallbacksIfReady = function () {\n\t            var _this = this;\n\t            if (this.isStable()) {\n\t                // Schedules the call backs in a new frame so that it is always async.\n\t                scheduleMicroTask(function () {\n\t                    while (_this._callbacks.length !== 0) {\n\t                        (_this._callbacks.pop())(_this._didWork);\n\t                    }\n\t                    _this._didWork = false;\n\t                });\n\t            }\n\t            else {\n\t                // Not Ready\n\t                this._didWork = true;\n\t            }\n\t        };\n\t        Testability.prototype.whenStable = function (callback) {\n\t            this._callbacks.push(callback);\n\t            this._runCallbacksIfReady();\n\t        };\n\t        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n\t        /** @deprecated use findProviders */\n\t        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n\t            // TODO(juliemr): implement.\n\t            return [];\n\t        };\n\t        Testability.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        Testability.ctorParameters = [\n\t            { type: NgZone, },\n\t        ];\n\t        return Testability;\n\t    }());\n\t    /**\n\t     * A global registry of {@link Testability} instances for specific elements.\n\t     * @experimental\n\t     */\n\t    var TestabilityRegistry = (function () {\n\t        function TestabilityRegistry() {\n\t            /** @internal */\n\t            this._applications = new Map();\n\t            _testabilityGetter.addToWindow(this);\n\t        }\n\t        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n\t            this._applications.set(token, testability);\n\t        };\n\t        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n\t        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n\t        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n\t        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n\t            if (findInAncestors === void 0) { findInAncestors = true; }\n\t            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n\t        };\n\t        TestabilityRegistry.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        TestabilityRegistry.ctorParameters = [];\n\t        return TestabilityRegistry;\n\t    }());\n\t    var _NoopGetTestability = (function () {\n\t        function _NoopGetTestability() {\n\t        }\n\t        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n\t        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n\t            return null;\n\t        };\n\t        return _NoopGetTestability;\n\t    }());\n\t    /**\n\t     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n\t     * @experimental\n\t     */\n\t    function setTestabilityGetter(getter) {\n\t        _testabilityGetter = getter;\n\t    }\n\t    var _testabilityGetter = new _NoopGetTestability();\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _devMode = true;\n\t    var _runModeLocked = false;\n\t    var _platform;\n\t    /**\n\t     * Disable Angular's development mode, which turns off assertions and other\n\t     * checks within the framework.\n\t     *\n\t     * One important assertion this disables verifies that a change detection pass\n\t     * does not result in additional changes to any bindings (also known as\n\t     * unidirectional data flow).\n\t     *\n\t     * @stable\n\t     */\n\t    function enableProdMode() {\n\t        if (_runModeLocked) {\n\t            throw new Error('Cannot enable prod mode after platform setup.');\n\t        }\n\t        _devMode = false;\n\t    }\n\t    /**\n\t     * Returns whether Angular is in development mode. After called once,\n\t     * the value is locked and won't change any more.\n\t     *\n\t     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function isDevMode() {\n\t        _runModeLocked = true;\n\t        return _devMode;\n\t    }\n\t    /**\n\t     * Creates a platform.\n\t     * Platforms have to be eagerly created via this function.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatform(injector) {\n\t        if (_platform && !_platform.destroyed) {\n\t            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n\t        }\n\t        _platform = injector.get(PlatformRef);\n\t        var inits = injector.get(PLATFORM_INITIALIZER, null);\n\t        if (inits)\n\t            inits.forEach(function (init) { return init(); });\n\t        return _platform;\n\t    }\n\t    /**\n\t     * Creates a factory for a platform\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function createPlatformFactory(parentPlaformFactory, name, providers) {\n\t        if (providers === void 0) { providers = []; }\n\t        var marker = new OpaqueToken(\"Platform: \" + name);\n\t        return function (extraProviders) {\n\t            if (extraProviders === void 0) { extraProviders = []; }\n\t            if (!getPlatform()) {\n\t                if (parentPlaformFactory) {\n\t                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n\t                }\n\t                else {\n\t                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n\t                }\n\t            }\n\t            return assertPlatform(marker);\n\t        };\n\t    }\n\t    /**\n\t     * Checks that there currently is a platform\n\t     * which contains the given token as a provider.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function assertPlatform(requiredToken) {\n\t        var platform = getPlatform();\n\t        if (!platform) {\n\t            throw new Error('No platform exists!');\n\t        }\n\t        if (!platform.injector.get(requiredToken, null)) {\n\t            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n\t        }\n\t        return platform;\n\t    }\n\t    /**\n\t     * Destroy the existing platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function destroyPlatform() {\n\t        if (_platform && !_platform.destroyed) {\n\t            _platform.destroy();\n\t        }\n\t    }\n\t    /**\n\t     * Returns the current platform.\n\t     *\n\t     * @experimental APIs related to application bootstrap are currently under review.\n\t     */\n\t    function getPlatform() {\n\t        return _platform && !_platform.destroyed ? _platform : null;\n\t    }\n\t    /**\n\t     * The Angular platform is the entry point for Angular on a web page. Each page\n\t     * has exactly one platform, and services (such as reflection) which are common\n\t     * to every Angular application running on the page are bound in its scope.\n\t     *\n\t     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n\t     * explicitly by calling {@link createPlatform}().\n\t     *\n\t     * @stable\n\t     */\n\t    var PlatformRef = (function () {\n\t        function PlatformRef() {\n\t        }\n\t        /**\n\t         * Creates an instance of an `@NgModule` for the given platform\n\t         * for offline compilation.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * my_module.ts:\n\t         *\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * main.ts:\n\t         * import {MyModuleNgFactory} from './my_module.ngfactory';\n\t         * import {platformBrowser} from '@angular/platform-browser';\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n\t         * ```\n\t         *\n\t         * @experimental APIs related to application bootstrap are currently under review.\n\t         */\n\t        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            throw unimplemented();\n\t        };\n\t        /**\n\t         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n\t         *\n\t         * ## Simple Example\n\t         *\n\t         * ```typescript\n\t         * @NgModule({\n\t         *   imports: [BrowserModule]\n\t         * })\n\t         * class MyModule {}\n\t         *\n\t         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n\t         * ```\n\t         * @stable\n\t         */\n\t        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            throw unimplemented();\n\t        };\n\t        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n\t            /**\n\t             * Retrieve the platform {@link Injector}, which is the parent injector for\n\t             * every Angular application on the page and provides singleton providers.\n\t             */\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n\t            get: function () { throw unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return PlatformRef;\n\t    }());\n\t    function _callAndReportToErrorHandler(errorHandler, callback) {\n\t        try {\n\t            var result = callback();\n\t            if (isPromise(result)) {\n\t                return result.catch(function (e) {\n\t                    errorHandler.handleError(e);\n\t                    // rethrow as the exception handler might not do it\n\t                    throw e;\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t        catch (e) {\n\t            errorHandler.handleError(e);\n\t            // rethrow as the exception handler might not do it\n\t            throw e;\n\t        }\n\t    }\n\t    var PlatformRef_ = (function (_super) {\n\t        __extends$3(PlatformRef_, _super);\n\t        function PlatformRef_(_injector) {\n\t            _super.call(this);\n\t            this._injector = _injector;\n\t            this._modules = [];\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n\t            get: function () { return this._injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        PlatformRef_.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error('The platform has already been destroyed!');\n\t            }\n\t            this._modules.slice().forEach(function (module) { return module.destroy(); });\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t            this._destroyed = true;\n\t        };\n\t        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n\t            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n\t            var _this = this;\n\t            // Note: We need to create the NgZone _before_ we instantiate the module,\n\t            // as instantiating the module creates some providers eagerly.\n\t            // So we create a mini parent injector that just contains the new NgZone and\n\t            // pass that as parent to the NgModuleFactory.\n\t            if (!ngZone)\n\t                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n\t            // Attention: Don't use ApplicationRef.run here,\n\t            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n\t            return ngZone.run(function () {\n\t                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n\t                var moduleRef = moduleFactory.create(ngZoneInjector);\n\t                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n\t                if (!exceptionHandler) {\n\t                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n\t                }\n\t                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n\t                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n\t                return _callAndReportToErrorHandler(exceptionHandler, function () {\n\t                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n\t                    return initStatus.donePromise.then(function () {\n\t                        _this._moduleDoBootstrap(moduleRef);\n\t                        return moduleRef;\n\t                    });\n\t                });\n\t            });\n\t        };\n\t        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n\t        };\n\t        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n\t            var _this = this;\n\t            if (compilerOptions === void 0) { compilerOptions = []; }\n\t            var compilerFactory = this.injector.get(CompilerFactory);\n\t            var compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\t            // ugly internal api hack: generate host component factories for all declared components and\n\t            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n\t            // factories.\n\t            if (componentFactoryCallback) {\n\t                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n\t                    .then(function (_a) {\n\t                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n\t                    componentFactoryCallback(componentFactories);\n\t                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n\t                });\n\t            }\n\t            return compiler.compileModuleAsync(moduleType)\n\t                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n\t        };\n\t        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n\t            var appRef = moduleRef.injector.get(ApplicationRef);\n\t            if (moduleRef.bootstrapFactories.length > 0) {\n\t                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n\t            }\n\t            else if (moduleRef.instance.ngDoBootstrap) {\n\t                moduleRef.instance.ngDoBootstrap(appRef);\n\t            }\n\t            else {\n\t                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n\t                    \"Please define one of these.\");\n\t            }\n\t        };\n\t        PlatformRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        PlatformRef_.ctorParameters = [\n\t            { type: Injector, },\n\t        ];\n\t        return PlatformRef_;\n\t    }(PlatformRef));\n\t    /**\n\t     * A reference to an Angular application running on a page.\n\t     *\n\t     * For more about Angular applications, see the documentation for {@link bootstrap}.\n\t     *\n\t     * @stable\n\t     */\n\t    var ApplicationRef = (function () {\n\t        function ApplicationRef() {\n\t        }\n\t        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n\t            /**\n\t             * Get a list of component types registered to this application.\n\t             * This list is populated even before the component is created.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n\t            /**\n\t             * Get a list of components registered to this application.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ApplicationRef;\n\t    }());\n\t    var ApplicationRef_ = (function (_super) {\n\t        __extends$3(ApplicationRef_, _super);\n\t        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n\t            var _this = this;\n\t            _super.call(this);\n\t            this._zone = _zone;\n\t            this._console = _console;\n\t            this._injector = _injector;\n\t            this._exceptionHandler = _exceptionHandler;\n\t            this._componentFactoryResolver = _componentFactoryResolver;\n\t            this._initStatus = _initStatus;\n\t            this._testabilityRegistry = _testabilityRegistry;\n\t            this._testability = _testability;\n\t            this._bootstrapListeners = [];\n\t            this._rootComponents = [];\n\t            this._rootComponentTypes = [];\n\t            this._changeDetectorRefs = [];\n\t            this._runningTick = false;\n\t            this._enforceNoNewChanges = false;\n\t            this._enforceNoNewChanges = isDevMode();\n\t            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n\t        }\n\t        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n\t            this._changeDetectorRefs.push(changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n\t            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n\t        };\n\t        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n\t            var _this = this;\n\t            if (!this._initStatus.done) {\n\t                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n\t            }\n\t            var componentFactory;\n\t            if (componentOrFactory instanceof ComponentFactory) {\n\t                componentFactory = componentOrFactory;\n\t            }\n\t            else {\n\t                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n\t            }\n\t            this._rootComponentTypes.push(componentFactory.componentType);\n\t            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n\t            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n\t            var testability = compRef.injector.get(Testability, null);\n\t            if (testability) {\n\t                compRef.injector.get(TestabilityRegistry)\n\t                    .registerApplication(compRef.location.nativeElement, testability);\n\t            }\n\t            this._loadComponent(compRef);\n\t            if (isDevMode()) {\n\t                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n\t            }\n\t            return compRef;\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n\t            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n\t            this.tick();\n\t            this._rootComponents.push(componentRef);\n\t            // Get the listeners lazily to prevent DI cycles.\n\t            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n\t                .concat(this._bootstrapListeners);\n\t            listeners.forEach(function (listener) { return listener(componentRef); });\n\t        };\n\t        /** @internal */\n\t        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n\t            if (this._rootComponents.indexOf(componentRef) == -1) {\n\t                return;\n\t            }\n\t            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n\t            ListWrapper.remove(this._rootComponents, componentRef);\n\t        };\n\t        ApplicationRef_.prototype.tick = function () {\n\t            if (this._runningTick) {\n\t                throw new Error('ApplicationRef.tick is called recursively');\n\t            }\n\t            var scope = ApplicationRef_._tickScope();\n\t            try {\n\t                this._runningTick = true;\n\t                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n\t                if (this._enforceNoNewChanges) {\n\t                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n\t                }\n\t            }\n\t            finally {\n\t                this._runningTick = false;\n\t                wtfLeave(scope);\n\t            }\n\t        };\n\t        ApplicationRef_.prototype.ngOnDestroy = function () {\n\t            // TODO(alxhub): Dispose of the NgZone.\n\t            this._rootComponents.slice().forEach(function (component) { return component.destroy(); });\n\t        };\n\t        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n\t            get: function () { return this._rootComponentTypes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n\t            get: function () { return this._rootComponents; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /** @internal */\n\t        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n\t        ApplicationRef_.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationRef_.ctorParameters = [\n\t            { type: NgZone, },\n\t            { type: Console, },\n\t            { type: Injector, },\n\t            { type: ErrorHandler, },\n\t            { type: ComponentFactoryResolver, },\n\t            { type: ApplicationInitStatus, },\n\t            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n\t            { type: Testability, decorators: [{ type: Optional },] },\n\t        ];\n\t        return ApplicationRef_;\n\t    }(ApplicationRef));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n\t     *\n\t     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n\t     * NgModule Instance.\n\t     *\n\t     * @stable\n\t     */\n\t    var NgModuleRef = (function () {\n\t        function NgModuleRef() {\n\t        }\n\t        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n\t            /**\n\t             * The injector that contains all of the providers of the NgModule.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n\t            /**\n\t             * The ComponentFactoryResolver to get hold of the ComponentFactories\n\t             * declared in the `entryComponents` property of the module.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n\t            /**\n\t             * The NgModule instance.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return NgModuleRef;\n\t    }());\n\t    /**\n\t     * @experimental\n\t     */\n\t    var NgModuleFactory = (function () {\n\t        function NgModuleFactory(_injectorClass, _moduleType) {\n\t            this._injectorClass = _injectorClass;\n\t            this._moduleType = _moduleType;\n\t        }\n\t        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n\t            get: function () { return this._moduleType; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleFactory.prototype.create = function (parentInjector) {\n\t            if (!parentInjector) {\n\t                parentInjector = Injector.NULL;\n\t            }\n\t            var instance = new this._injectorClass(parentInjector);\n\t            instance.create();\n\t            return instance;\n\t        };\n\t        return NgModuleFactory;\n\t    }());\n\t    var _UNDEFINED = new Object();\n\t    var NgModuleInjector = (function (_super) {\n\t        __extends$9(NgModuleInjector, _super);\n\t        function NgModuleInjector(parent, factories, bootstrapFactories) {\n\t            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n\t            this.parent = parent;\n\t            this.bootstrapFactories = bootstrapFactories;\n\t            this._destroyListeners = [];\n\t            this._destroyed = false;\n\t        }\n\t        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n\t        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            if (token === Injector || token === ComponentFactoryResolver) {\n\t                return this;\n\t            }\n\t            var result = this.getInternal(token, _UNDEFINED);\n\t            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n\t        };\n\t        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        NgModuleInjector.prototype.destroy = function () {\n\t            if (this._destroyed) {\n\t                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n\t            }\n\t            this._destroyed = true;\n\t            this.destroyInternal();\n\t            this._destroyListeners.forEach(function (listener) { return listener(); });\n\t        };\n\t        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n\t        return NgModuleInjector;\n\t    }(CodegenComponentFactoryResolver));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Used to load ng module factories.\n\t     * @stable\n\t     */\n\t    var NgModuleFactoryLoader = (function () {\n\t        function NgModuleFactoryLoader() {\n\t        }\n\t        return NgModuleFactoryLoader;\n\t    }());\n\t    var moduleFactories = new Map();\n\t    /**\n\t     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n\t     * @experimental\n\t     */\n\t    function registerModuleFactory(id, factory) {\n\t        var existing = moduleFactories.get(id);\n\t        if (existing) {\n\t            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n\t        }\n\t        moduleFactories.set(id, factory);\n\t    }\n\t    /**\n\t     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n\t     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n\t     * cannot be found.\n\t     * @experimental\n\t     */\n\t    function getModuleFactory(id) {\n\t        var factory = moduleFactories.get(id);\n\t        if (!factory)\n\t            throw new Error(\"No module with ID \" + id + \" loaded\");\n\t        return factory;\n\t    }\n\t\n\t    /**\n\t     * An unmodifiable list of items that Angular keeps up to date when the state\n\t     * of the application changes.\n\t     *\n\t     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n\t     *\n\t     * Implements an iterable interface, therefore it can be used in both ES6\n\t     * javascript `for (var i of items)` loops as well as in Angular templates with\n\t     * `*ngFor=\"let i of myList\"`.\n\t     *\n\t     * Changes can be observed by subscribing to the changes `Observable`.\n\t     *\n\t     * NOTE: In the future this class will implement an `Observable` interface.\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n\t     * ```typescript\n\t     * @Component({...})\n\t     * class Container {\n\t     *   @ViewChildren(Item) items:QueryList<Item>;\n\t     * }\n\t     * ```\n\t     * @stable\n\t     */\n\t    var QueryList = (function () {\n\t        function QueryList() {\n\t            this._dirty = true;\n\t            this._results = [];\n\t            this._emitter = new EventEmitter();\n\t        }\n\t        Object.defineProperty(QueryList.prototype, \"changes\", {\n\t            get: function () { return this._emitter; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"length\", {\n\t            get: function () { return this._results.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"first\", {\n\t            get: function () { return this._results[0]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(QueryList.prototype, \"last\", {\n\t            get: function () { return this._results[this.length - 1]; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * See\n\t         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n\t         */\n\t        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n\t        /**\n\t         * See\n\t         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\t         */\n\t        QueryList.prototype.filter = function (fn) {\n\t            return this._results.filter(fn);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n\t         */\n\t        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n\t        /**\n\t         * See\n\t         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n\t         */\n\t        QueryList.prototype.reduce = function (fn, init) {\n\t            return this._results.reduce(fn, init);\n\t        };\n\t        /**\n\t         * See\n\t         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n\t         */\n\t        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n\t        /**\n\t         * See\n\t         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n\t         */\n\t        QueryList.prototype.some = function (fn) {\n\t            return this._results.some(fn);\n\t        };\n\t        QueryList.prototype.toArray = function () { return this._results.slice(); };\n\t        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n\t        QueryList.prototype.toString = function () { return this._results.toString(); };\n\t        QueryList.prototype.reset = function (res) {\n\t            this._results = ListWrapper.flatten(res);\n\t            this._dirty = false;\n\t        };\n\t        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n\t        /** internal */\n\t        QueryList.prototype.setDirty = function () { this._dirty = true; };\n\t        Object.defineProperty(QueryList.prototype, \"dirty\", {\n\t            /** internal */\n\t            get: function () { return this._dirty; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return QueryList;\n\t    }());\n\t\n\t    var _SEPARATOR = '#';\n\t    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n\t    /**\n\t     * Configuration for SystemJsNgModuleLoader.\n\t     * token.\n\t     *\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoaderConfig = (function () {\n\t        function SystemJsNgModuleLoaderConfig() {\n\t        }\n\t        return SystemJsNgModuleLoaderConfig;\n\t    }());\n\t    var DEFAULT_CONFIG = {\n\t        factoryPathPrefix: '',\n\t        factoryPathSuffix: '.ngfactory',\n\t    };\n\t    /**\n\t     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n\t     * @experimental\n\t     */\n\t    var SystemJsNgModuleLoader = (function () {\n\t        function SystemJsNgModuleLoader(_compiler, config) {\n\t            this._compiler = _compiler;\n\t            this._config = config || DEFAULT_CONFIG;\n\t        }\n\t        SystemJsNgModuleLoader.prototype.load = function (path) {\n\t            var offlineMode = this._compiler instanceof Compiler;\n\t            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n\t            var _this = this;\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t            }\n\t            return System.import(module)\n\t                .then(function (module) { return module[exportName]; })\n\t                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n\t                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n\t        };\n\t        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n\t            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n\t            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n\t            if (exportName === undefined) {\n\t                exportName = 'default';\n\t                factoryClassSuffix = '';\n\t            }\n\t            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n\t                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n\t                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n\t        };\n\t        SystemJsNgModuleLoader.decorators = [\n\t            { type: Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        SystemJsNgModuleLoader.ctorParameters = [\n\t            { type: Compiler, },\n\t            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n\t        ];\n\t        return SystemJsNgModuleLoader;\n\t    }());\n\t    function checkNotEmpty(value, modulePath, exportName) {\n\t        if (!value) {\n\t            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n\t        }\n\t        return value;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n\t     *\n\t     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n\t     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n\t     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n\t     * `TemplateRef` from a Component or a Directive via {@link Query}.\n\t     *\n\t     * To instantiate Embedded Views based on a Template, use\n\t     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n\t     * View Container.\n\t     * @stable\n\t     */\n\t    var TemplateRef = (function () {\n\t        function TemplateRef() {\n\t        }\n\t        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n\t            /**\n\t             * The location in the View where the Embedded View logically belongs to.\n\t             *\n\t             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n\t             * inherit from the contexts of this location.\n\t             *\n\t             * Typically new Embedded Views are attached to the View Container of this location, but in\n\t             * advanced use-cases, the View can be attached to a different container while keeping the\n\t             * data-binding and injection context from the original location.\n\t             *\n\t             */\n\t            // TODO(i): rename to anchor or location\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef;\n\t    }());\n\t    var TemplateRef_ = (function (_super) {\n\t        __extends$10(TemplateRef_, _super);\n\t        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n\t            _super.call(this);\n\t            this._parentView = _parentView;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._nativeElement = _nativeElement;\n\t        }\n\t        TemplateRef_.prototype.createEmbeddedView = function (context) {\n\t            var view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n\t            view.create(context || {});\n\t            return view.ref;\n\t        };\n\t        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n\t            get: function () { return new ElementRef(this._nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return TemplateRef_;\n\t    }(TemplateRef));\n\t\n\t    /**\n\t     * Represents a container where one or more Views can be attached.\n\t     *\n\t     * The container can contain two kinds of Views. Host Views, created by instantiating a\n\t     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n\t     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n\t     *\n\t     * The location of the View Container within the containing View is specified by the Anchor\n\t     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n\t     * have a single View Container.\n\t     *\n\t     * Root elements of Views attached to this container become siblings of the Anchor Element in\n\t     * the Rendered View.\n\t     *\n\t     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n\t     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n\t     * @stable\n\t     */\n\t    var ViewContainerRef = (function () {\n\t        function ViewContainerRef() {\n\t        }\n\t        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n\t            /**\n\t             * Anchor element that specifies the location of this container in the containing View.\n\t             * <!-- TODO: rename to anchorElement -->\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n\t            /**\n\t             * Returns the number of Views currently attached to this container.\n\t             */\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return ViewContainerRef;\n\t    }());\n\t    var ViewContainerRef_ = (function () {\n\t        function ViewContainerRef_(_element) {\n\t            this._element = _element;\n\t            /** @internal */\n\t            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n\t            /** @internal */\n\t            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n\t            /** @internal */\n\t            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n\t            /** @internal */\n\t            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n\t        }\n\t        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n\t            get: function () {\n\t                var views = this._element.nestedViews;\n\t                return isPresent(views) ? views.length : 0;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n\t            get: function () { return this._element.elementRef; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n\t            get: function () { return this._element.injector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n\t            get: function () { return this._element.parentInjector; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        // TODO(rado): profile and decide whether bounds checks should be added\n\t        // to the methods below.\n\t        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n\t            if (context === void 0) { context = null; }\n\t            if (index === void 0) { index = -1; }\n\t            var viewRef = templateRef.createEmbeddedView(context);\n\t            this.insert(viewRef, index);\n\t            return viewRef;\n\t        };\n\t        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n\t            if (index === void 0) { index = -1; }\n\t            if (injector === void 0) { injector = null; }\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            var s = this._createComponentInContainerScope();\n\t            var contextInjector = injector || this._element.parentInjector;\n\t            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n\t            this.insert(componentRef.hostView, index);\n\t            return wtfLeave(s, componentRef);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._insertScope();\n\t            if (index == -1)\n\t                index = this.length;\n\t            var viewRef_ = viewRef;\n\t            this._element.attachView(viewRef_.internalView, index);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n\t            var s = this._insertScope();\n\t            if (currentIndex == -1)\n\t                return;\n\t            var viewRef_ = viewRef;\n\t            this._element.moveView(viewRef_.internalView, currentIndex);\n\t            return wtfLeave(s, viewRef_);\n\t        };\n\t        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n\t            return this._element.nestedViews.indexOf(viewRef.internalView);\n\t        };\n\t        // TODO(i): rename to destroy\n\t        ViewContainerRef_.prototype.remove = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._removeScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            view.destroy();\n\t            // view is intentionally not returned to the client.\n\t            wtfLeave(s);\n\t        };\n\t        // TODO(i): refactor insert+remove into move\n\t        ViewContainerRef_.prototype.detach = function (index) {\n\t            if (index === void 0) { index = -1; }\n\t            var s = this._detachScope();\n\t            if (index == -1)\n\t                index = this.length - 1;\n\t            var view = this._element.detachView(index);\n\t            return wtfLeave(s, view.ref);\n\t        };\n\t        ViewContainerRef_.prototype.clear = function () {\n\t            for (var i = this.length - 1; i >= 0; i--) {\n\t                this.remove(i);\n\t            }\n\t        };\n\t        return ViewContainerRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var _queuedAnimations = [];\n\t    /** @internal */\n\t    function queueAnimationGlobally(player) {\n\t        _queuedAnimations.push(player);\n\t    }\n\t    /** @internal */\n\t    function triggerQueuedAnimations() {\n\t        // this code is wrapped into a single promise such that the\n\t        // onStart and onDone player callbacks are triggered outside\n\t        // of the digest cycle of animations\n\t        if (_queuedAnimations.length) {\n\t            Promise.resolve(null).then(_triggerAnimations);\n\t        }\n\t    }\n\t    function _triggerAnimations() {\n\t        for (var i = 0; i < _queuedAnimations.length; i++) {\n\t            var player = _queuedAnimations[i];\n\t            player.play();\n\t        }\n\t        _queuedAnimations = [];\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @stable\n\t     */\n\t    var ViewRef = (function () {\n\t        function ViewRef() {\n\t        }\n\t        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ViewRef;\n\t    }());\n\t    /**\n\t     * Represents an Angular View.\n\t     *\n\t     * <!-- TODO: move the next two paragraphs to the dev guide -->\n\t     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n\t     * Elements which are created and destroyed together.\n\t     *\n\t     * Properties of elements in a View can change, but the structure (number and order) of elements in\n\t     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n\t     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n\t     * <!-- /TODO -->\n\t     *\n\t     * ### Example\n\t     *\n\t     * Given this template...\n\t     *\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * We have two {@link TemplateRef}s:\n\t     *\n\t     * Outer {@link TemplateRef}:\n\t     * ```\n\t     * Count: {{items.length}}\n\t     * <ul>\n\t     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n\t     * </ul>\n\t     * ```\n\t     *\n\t     * Inner {@link TemplateRef}:\n\t     * ```\n\t     *   <li>{{item}}</li>\n\t     * ```\n\t     *\n\t     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n\t     *\n\t     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n\t     *\n\t     * ```\n\t     * <!-- ViewRef: outer-0 -->\n\t     * Count: 2\n\t     * <ul>\n\t     *   <template view-container-ref></template>\n\t     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n\t     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n\t     * </ul>\n\t     * <!-- /ViewRef: outer-0 -->\n\t     * ```\n\t     * @experimental\n\t     */\n\t    var EmbeddedViewRef = (function (_super) {\n\t        __extends$11(EmbeddedViewRef, _super);\n\t        function EmbeddedViewRef() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n\t            get: function () { return unimplemented(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ;\n\t        return EmbeddedViewRef;\n\t    }(ViewRef));\n\t    var ViewRef_ = (function () {\n\t        function ViewRef_(_view) {\n\t            this._view = _view;\n\t            this._view = _view;\n\t            this._originalMode = this._view.cdMode;\n\t        }\n\t        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n\t            get: function () { return this._view; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n\t            get: function () { return this._view.flatRootNodes; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n\t            get: function () { return this._view.destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n\t        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n\t        ViewRef_.prototype.detectChanges = function () {\n\t            this._view.detectChanges(false);\n\t            triggerQueuedAnimations();\n\t        };\n\t        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n\t        ViewRef_.prototype.reattach = function () {\n\t            this._view.cdMode = this._originalMode;\n\t            this.markForCheck();\n\t        };\n\t        ViewRef_.prototype.onDestroy = function (callback) {\n\t            if (!this._view.disposables) {\n\t                this._view.disposables = [];\n\t            }\n\t            this._view.disposables.push(callback);\n\t        };\n\t        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n\t        return ViewRef_;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var EventListener = (function () {\n\t        function EventListener(name, callback) {\n\t            this.name = name;\n\t            this.callback = callback;\n\t        }\n\t        ;\n\t        return EventListener;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugNode = (function () {\n\t        function DebugNode(nativeNode, parent, _debugInfo) {\n\t            this._debugInfo = _debugInfo;\n\t            this.nativeNode = nativeNode;\n\t            if (parent && parent instanceof DebugElement) {\n\t                parent.addChild(this);\n\t            }\n\t            else {\n\t                this.parent = null;\n\t            }\n\t            this.listeners = [];\n\t        }\n\t        Object.defineProperty(DebugNode.prototype, \"injector\", {\n\t            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n\t            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"context\", {\n\t            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"references\", {\n\t            get: function () {\n\t                return this._debugInfo ? this._debugInfo.references : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n\t            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugNode.prototype, \"source\", {\n\t            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugNode;\n\t    }());\n\t    /**\n\t     * @experimental All debugging apis are currently experimental.\n\t     */\n\t    var DebugElement = (function (_super) {\n\t        __extends$12(DebugElement, _super);\n\t        function DebugElement(nativeNode, parent, _debugInfo) {\n\t            _super.call(this, nativeNode, parent, _debugInfo);\n\t            this.properties = {};\n\t            this.attributes = {};\n\t            this.classes = {};\n\t            this.styles = {};\n\t            this.childNodes = [];\n\t            this.nativeElement = nativeNode;\n\t        }\n\t        DebugElement.prototype.addChild = function (child) {\n\t            if (child) {\n\t                this.childNodes.push(child);\n\t                child.parent = this;\n\t            }\n\t        };\n\t        DebugElement.prototype.removeChild = function (child) {\n\t            var childIndex = this.childNodes.indexOf(child);\n\t            if (childIndex !== -1) {\n\t                child.parent = null;\n\t                this.childNodes.splice(childIndex, 1);\n\t            }\n\t        };\n\t        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n\t            var siblingIndex = this.childNodes.indexOf(child);\n\t            if (siblingIndex !== -1) {\n\t                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n\t                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n\t                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n\t                for (var i = 0; i < newChildren.length; ++i) {\n\t                    var newChild = newChildren[i];\n\t                    if (newChild.parent) {\n\t                        newChild.parent.removeChild(newChild);\n\t                    }\n\t                    newChild.parent = this;\n\t                }\n\t            }\n\t        };\n\t        DebugElement.prototype.query = function (predicate) {\n\t            var results = this.queryAll(predicate);\n\t            return results[0] || null;\n\t        };\n\t        DebugElement.prototype.queryAll = function (predicate) {\n\t            var matches = [];\n\t            _queryElementChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        DebugElement.prototype.queryAllNodes = function (predicate) {\n\t            var matches = [];\n\t            _queryNodeChildren(this, predicate, matches);\n\t            return matches;\n\t        };\n\t        Object.defineProperty(DebugElement.prototype, \"children\", {\n\t            get: function () {\n\t                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n\t            this.listeners.forEach(function (listener) {\n\t                if (listener.name == eventName) {\n\t                    listener.callback(eventObj);\n\t                }\n\t            });\n\t        };\n\t        return DebugElement;\n\t    }(DebugNode));\n\t    /**\n\t     * @experimental\n\t     */\n\t    function asNativeElements(debugEls) {\n\t        return debugEls.map(function (el) { return el.nativeElement; });\n\t    }\n\t    function _queryElementChildren(element, predicate, matches) {\n\t        element.childNodes.forEach(function (node) {\n\t            if (node instanceof DebugElement) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                _queryElementChildren(node, predicate, matches);\n\t            }\n\t        });\n\t    }\n\t    function _queryNodeChildren(parentNode, predicate, matches) {\n\t        if (parentNode instanceof DebugElement) {\n\t            parentNode.childNodes.forEach(function (node) {\n\t                if (predicate(node)) {\n\t                    matches.push(node);\n\t                }\n\t                if (node instanceof DebugElement) {\n\t                    _queryNodeChildren(node, predicate, matches);\n\t                }\n\t            });\n\t        }\n\t    }\n\t    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n\t    var _nativeNodeToDebugNode = new Map();\n\t    /**\n\t     * @experimental\n\t     */\n\t    function getDebugNode(nativeNode) {\n\t        return _nativeNodeToDebugNode.get(nativeNode);\n\t    }\n\t    function indexDebugNode(node) {\n\t        _nativeNodeToDebugNode.set(node.nativeNode, node);\n\t    }\n\t    function removeDebugNodeFromIndex(node) {\n\t        _nativeNodeToDebugNode.delete(node.nativeNode);\n\t    }\n\t\n\t    function _reflector() {\n\t        return reflector;\n\t    }\n\t    var _CORE_PLATFORM_PROVIDERS = [\n\t        PlatformRef_,\n\t        { provide: PlatformRef, useExisting: PlatformRef_ },\n\t        { provide: Reflector, useFactory: _reflector, deps: [] },\n\t        { provide: ReflectorReader, useExisting: Reflector },\n\t        TestabilityRegistry,\n\t        Console,\n\t    ];\n\t    /**\n\t     * This platform has to be included in any other platform\n\t     *\n\t     * @experimental\n\t     */\n\t    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\t\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var LOCALE_ID = new OpaqueToken('LocaleId');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS = new OpaqueToken('Translations');\n\t    /**\n\t     * @experimental i18n support is experimental.\n\t     */\n\t    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\t\n\t    function _iterableDiffersFactory() {\n\t        return defaultIterableDiffers;\n\t    }\n\t    function _keyValueDiffersFactory() {\n\t        return defaultKeyValueDiffers;\n\t    }\n\t    /**\n\t     * This module includes the providers of @angular/core that are needed\n\t     * to bootstrap components via `ApplicationRef`.\n\t     *\n\t     * @experimental\n\t     */\n\t    var ApplicationModule = (function () {\n\t        function ApplicationModule() {\n\t        }\n\t        ApplicationModule.decorators = [\n\t            { type: NgModule, args: [{\n\t                        providers: [\n\t                            ApplicationRef_,\n\t                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n\t                            ApplicationInitStatus,\n\t                            Compiler,\n\t                            APP_ID_RANDOM_PROVIDER,\n\t                            ViewUtils,\n\t                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n\t                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n\t                            { provide: LOCALE_ID, useValue: 'en-US' },\n\t                        ]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ApplicationModule.ctorParameters = [];\n\t        return ApplicationModule;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n\t    var ANY_STATE = '*';\n\t    var DEFAULT_STATE = '*';\n\t    var EMPTY_STATE = 'void';\n\t\n\t    var AnimationGroupPlayer = (function () {\n\t        function AnimationGroupPlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            var count = 0;\n\t            var total = this._players.length;\n\t            if (total == 0) {\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else {\n\t                this._players.forEach(function (player) {\n\t                    player.parentPlayer = _this;\n\t                    player.onDone(function () {\n\t                        if (++count >= total) {\n\t                            _this._onFinish();\n\t                        }\n\t                    });\n\t                });\n\t            }\n\t        }\n\t        AnimationGroupPlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationGroupPlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._players.forEach(function (player) { return player.play(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n\t        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n\t        AnimationGroupPlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationGroupPlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t            }\n\t        };\n\t        AnimationGroupPlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n\t            this._players.forEach(function (player) { player.setPosition(p); });\n\t        };\n\t        AnimationGroupPlayer.prototype.getPosition = function () {\n\t            var min = 0;\n\t            this._players.forEach(function (player) {\n\t                var p = player.getPosition();\n\t                min = Math.min(p, min);\n\t            });\n\t            return min;\n\t        };\n\t        return AnimationGroupPlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationKeyframe = (function () {\n\t        function AnimationKeyframe(offset, styles) {\n\t            this.offset = offset;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationKeyframe;\n\t    }());\n\t\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationPlayer = (function () {\n\t        function AnimationPlayer() {\n\t        }\n\t        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationPlayer;\n\t    }());\n\t    var NoOpAnimationPlayer = (function () {\n\t        function NoOpAnimationPlayer() {\n\t            var _this = this;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._started = false;\n\t            this.parentPlayer = null;\n\t            scheduleMicroTask(function () { return _this._onFinish(); });\n\t        }\n\t        /** @internal */\n\t        NoOpAnimationPlayer.prototype._onFinish = function () {\n\t            this._onDoneFns.forEach(function (fn) { return fn(); });\n\t            this._onDoneFns = [];\n\t        };\n\t        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n\t        NoOpAnimationPlayer.prototype.init = function () { };\n\t        NoOpAnimationPlayer.prototype.play = function () {\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t            }\n\t            this._started = true;\n\t        };\n\t        NoOpAnimationPlayer.prototype.pause = function () { };\n\t        NoOpAnimationPlayer.prototype.restart = function () { };\n\t        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n\t        NoOpAnimationPlayer.prototype.destroy = function () { };\n\t        NoOpAnimationPlayer.prototype.reset = function () { };\n\t        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n\t        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n\t        return NoOpAnimationPlayer;\n\t    }());\n\t\n\t    var AnimationSequencePlayer = (function () {\n\t        function AnimationSequencePlayer(_players) {\n\t            var _this = this;\n\t            this._players = _players;\n\t            this._currentIndex = 0;\n\t            this._onDoneFns = [];\n\t            this._onStartFns = [];\n\t            this._finished = false;\n\t            this._started = false;\n\t            this._destroyed = false;\n\t            this.parentPlayer = null;\n\t            this._players.forEach(function (player) { player.parentPlayer = _this; });\n\t            this._onNext(false);\n\t        }\n\t        AnimationSequencePlayer.prototype._onNext = function (start) {\n\t            var _this = this;\n\t            if (this._finished)\n\t                return;\n\t            if (this._players.length == 0) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                scheduleMicroTask(function () { return _this._onFinish(); });\n\t            }\n\t            else if (this._currentIndex >= this._players.length) {\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t                this._onFinish();\n\t            }\n\t            else {\n\t                var player = this._players[this._currentIndex++];\n\t                player.onDone(function () { return _this._onNext(true); });\n\t                this._activePlayer = player;\n\t                if (start) {\n\t                    player.play();\n\t                }\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype._onFinish = function () {\n\t            if (!this._finished) {\n\t                this._finished = true;\n\t                this._onDoneFns.forEach(function (fn) { return fn(); });\n\t                this._onDoneFns = [];\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n\t        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n\t        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n\t        AnimationSequencePlayer.prototype.play = function () {\n\t            if (!isPresent(this.parentPlayer)) {\n\t                this.init();\n\t            }\n\t            if (!this.hasStarted()) {\n\t                this._onStartFns.forEach(function (fn) { return fn(); });\n\t                this._onStartFns = [];\n\t                this._started = true;\n\t            }\n\t            this._activePlayer.play();\n\t        };\n\t        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n\t        AnimationSequencePlayer.prototype.restart = function () {\n\t            this.reset();\n\t            if (this._players.length > 0) {\n\t                this._players[0].restart();\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.reset = function () {\n\t            this._players.forEach(function (player) { return player.reset(); });\n\t            this._destroyed = false;\n\t            this._finished = false;\n\t            this._started = false;\n\t        };\n\t        AnimationSequencePlayer.prototype.finish = function () {\n\t            this._onFinish();\n\t            this._players.forEach(function (player) { return player.finish(); });\n\t        };\n\t        AnimationSequencePlayer.prototype.destroy = function () {\n\t            if (!this._destroyed) {\n\t                this._onFinish();\n\t                this._players.forEach(function (player) { return player.destroy(); });\n\t                this._destroyed = true;\n\t                this._activePlayer = new NoOpAnimationPlayer();\n\t            }\n\t        };\n\t        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n\t        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n\t        return AnimationSequencePlayer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AUTO_STYLE = '*';\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationEntryMetadata = (function () {\n\t        function AnimationEntryMetadata(name, definitions) {\n\t            this.name = name;\n\t            this.definitions = definitions;\n\t        }\n\t        return AnimationEntryMetadata;\n\t    }());\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateMetadata = (function () {\n\t        function AnimationStateMetadata() {\n\t        }\n\t        return AnimationStateMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link state state animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateDeclarationMetadata = (function (_super) {\n\t        __extends$13(AnimationStateDeclarationMetadata, _super);\n\t        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n\t            _super.call(this);\n\t            this.stateNameExpr = stateNameExpr;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStateDeclarationMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the\n\t     * {@link transition transition animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStateTransitionMetadata = (function (_super) {\n\t        __extends$13(AnimationStateTransitionMetadata, _super);\n\t        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n\t            _super.call(this);\n\t            this.stateChangeExpr = stateChangeExpr;\n\t            this.steps = steps;\n\t        }\n\t        return AnimationStateTransitionMetadata;\n\t    }(AnimationStateMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationMetadata = (function () {\n\t        function AnimationMetadata() {\n\t        }\n\t        return AnimationMetadata;\n\t    }());\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationKeyframesSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n\t        function AnimationKeyframesSequenceMetadata(steps) {\n\t            _super.call(this);\n\t            this.steps = steps;\n\t        }\n\t        return AnimationKeyframesSequenceMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link style style animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationStyleMetadata = (function (_super) {\n\t        __extends$13(AnimationStyleMetadata, _super);\n\t        function AnimationStyleMetadata(styles, offset) {\n\t            if (offset === void 0) { offset = null; }\n\t            _super.call(this);\n\t            this.styles = styles;\n\t            this.offset = offset;\n\t        }\n\t        return AnimationStyleMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link animate animate\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationAnimateMetadata = (function (_super) {\n\t        __extends$13(AnimationAnimateMetadata, _super);\n\t        function AnimationAnimateMetadata(timings, styles) {\n\t            _super.call(this);\n\t            this.timings = timings;\n\t            this.styles = styles;\n\t        }\n\t        return AnimationAnimateMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationWithStepsMetadata = (function (_super) {\n\t        __extends$13(AnimationWithStepsMetadata, _super);\n\t        function AnimationWithStepsMetadata() {\n\t            _super.call(this);\n\t        }\n\t        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n\t            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationWithStepsMetadata;\n\t    }(AnimationMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n\t     * animation function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationSequenceMetadata = (function (_super) {\n\t        __extends$13(AnimationSequenceMetadata, _super);\n\t        function AnimationSequenceMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationSequenceMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * Metadata representing the entry of animations.\n\t     * Instances of this class are provided via the animation DSL when the {@link group group animation\n\t     * function} is called.\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationGroupMetadata = (function (_super) {\n\t        __extends$13(AnimationGroupMetadata, _super);\n\t        function AnimationGroupMetadata(_steps) {\n\t            _super.call(this);\n\t            this._steps = _steps;\n\t        }\n\t        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n\t            get: function () { return this._steps; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AnimationGroupMetadata;\n\t    }(AnimationWithStepsMetadata));\n\t    /**\n\t     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n\t     * amount of\n\t     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n\t     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n\t     * transition}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `animate` function accepts two input parameters: `timing` and `styles`:\n\t     *\n\t     * - `timing` is a string based value that can be a combination of a duration with optional\n\t     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n\t     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n\t     * delay=100, easing=ease-out`.\n\t     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n\t     * form.\n\t     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n\t     * keyframes keyframes}.\n\t     * If left empty then the styles from the destination state will be collected and used (this is\n\t     * useful when\n\t     * describing an animation step that will complete an animation by {@link\n\t     * transition#the-final-animate-call animating to the final state}).\n\t     *\n\t     * ```typescript\n\t     * // various functions for specifying timing data\n\t     * animate(500, style(...))\n\t     * animate(\"1s\", style(...))\n\t     * animate(\"100ms 0.5s\", style(...))\n\t     * animate(\"5s ease\", style(...))\n\t     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n\t     *\n\t     * // either style() of keyframes() can be used\n\t     * animate(500, style({ background: \"red\" }))\n\t     * animate(500, keyframes([\n\t     *   style({ background: \"blue\" })),\n\t     *   style({ background: \"red\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function animate(timing, styles) {\n\t        if (styles === void 0) { styles = null; }\n\t        var stylesEntry = styles;\n\t        if (!isPresent(stylesEntry)) {\n\t            var EMPTY_STYLE = {};\n\t            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n\t        }\n\t        return new AnimationAnimateMetadata(timing, stylesEntry);\n\t    }\n\t    /**\n\t     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n\t     * are useful when a series of styles must be animated/closed off\n\t     * at different statrting/ending times.\n\t     *\n\t     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once all of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `group` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n\t     * `animate()`\n\t     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n\t     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n\t     * time).\n\t     *\n\t     * ```typescript\n\t     * group([\n\t     *   animate(\"1s\", { background: \"black\" }))\n\t     *   animate(\"2s\", { color: \"white\" }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function group(steps) {\n\t        return new AnimationGroupMetadata(steps);\n\t    }\n\t    /**\n\t     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n\t     * by default when an array is passed as animation data into {@link transition transition}.)\n\t     *\n\t     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n\t     * transition}\n\t     * and it will only continue to the next instruction once each of the inner animation steps\n\t     * have completed.\n\t     *\n\t     * To perform animation styling in parallel with other animation steps then\n\t     * have a look at the {@link group group} animation function.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `steps` data that is passed into the `sequence` animation function can either consist\n\t     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n\t     * the\n\t     * provided styling data immediately while a call to `animate()` will apply its styling\n\t     * data over a given time depending on its timing data.\n\t     *\n\t     * ```typescript\n\t     * sequence([\n\t     *   style({ opacity: 0 })),\n\t     *   animate(\"1s\", { opacity: 1 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function sequence(steps) {\n\t        return new AnimationSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `style` declares a key/value object containing CSS properties/styles that can then\n\t     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n\t     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n\t     * pairs to be defined.\n\t     *\n\t     * ```typescript\n\t     * // string values are used for css properties\n\t     * style({ background: \"red\", color: \"blue\" })\n\t     *\n\t     * // numerical (pixel) values are also supported\n\t     * style({ width: 100, height: 0 })\n\t     * ```\n\t     *\n\t     * #### Auto-styles (using `*`)\n\t     *\n\t     * When an asterix (`*`) character is used as a value then it will be detected from the element\n\t     * being animated\n\t     * and applied as animation data when the animation starts.\n\t     *\n\t     * This feature proves useful for a state depending on layout and/or environment factors; in such\n\t     * cases\n\t     * the styles are calculated just before the animation starts.\n\t     *\n\t     * ```typescript\n\t     * // the steps below will animate from 0 to the\n\t     * // actual height of the element\n\t     * style({ height: 0 }),\n\t     * animate(\"1s\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function style(tokens) {\n\t        var input;\n\t        var offset = null;\n\t        if (typeof tokens === 'string') {\n\t            input = [tokens];\n\t        }\n\t        else {\n\t            if (Array.isArray(tokens)) {\n\t                input = tokens;\n\t            }\n\t            else {\n\t                input = [tokens];\n\t            }\n\t            input.forEach(function (entry) {\n\t                var entryOffset = entry['offset'];\n\t                if (isPresent(entryOffset)) {\n\t                    offset = offset == null ? parseFloat(entryOffset) : offset;\n\t                }\n\t            });\n\t        }\n\t        return new AnimationStyleMetadata(input, offset);\n\t    }\n\t    /**\n\t     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `state` declares an animation state within the given trigger. When a state is\n\t     * active within a component then its associated styles will persist on\n\t     * the element that the trigger is attached to (even when the animation ends).\n\t     *\n\t     * To animate between states, have a look at the animation {@link transition transition}\n\t     * DSL function. To register states to an animation trigger please have a look\n\t     * at the {@link trigger trigger} function.\n\t     *\n\t     * #### The `void` state\n\t     *\n\t     * The `void` state value is a reserved word that angular uses to determine when the element is not\n\t     * apart\n\t     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n\t     * associated element\n\t     * is void).\n\t     *\n\t     * #### The `*` (default) state\n\t     *\n\t     * The `*` state (when styled) is a fallback state that will be used if\n\t     * the state that is being animated is not declared within the trigger.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `state` will declare an animation state with its associated styles\n\t     * within the given trigger.\n\t     *\n\t     * - `stateNameExpr` can be one or more state names separated by commas.\n\t     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n\t     * the state\n\t     * has been reached.\n\t     *\n\t     * ```typescript\n\t     * // \"void\" is a reserved name for a state and is used to represent\n\t     * // the state in which an element is detached from from the application.\n\t     * state(\"void\", style({ height: 0 }))\n\t     *\n\t     * // user-defined states\n\t     * state(\"closed\", style({ height: 0 }))\n\t     * state(\"open, visible\", style({ height: \"*\" }))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function state(stateNameExpr, styles) {\n\t        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n\t    }\n\t    /**\n\t     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n\t     * by an `offset` value.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n\t     * animation function. Instead of applying animations from where they are\n\t     * currently to their destination, keyframes can describe how each style entry is applied\n\t     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n\t     *\n\t     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n\t     * what percentage of the animate time the styles will be applied.\n\t     *\n\t     * ```typescript\n\t     * // the provided offset values describe when each backgroundColor value is applied.\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\", offset: 0 }),\n\t     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n\t     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n\t     *   style({ backgroundColor: \"black\", offset: 1 })\n\t     * ]))\n\t     * ```\n\t     *\n\t     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n\t     * will\n\t     * be calculated automatically.\n\t     *\n\t     * ```typescript\n\t     * animate(\"5s\", keyframes([\n\t     *   style({ backgroundColor: \"red\" }) // offset = 0\n\t     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n\t     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n\t     *   style({ backgroundColor: \"black\" }) // offset = 1\n\t     * ]))\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function keyframes(steps) {\n\t        return new AnimationKeyframesSequenceMetadata(steps);\n\t    }\n\t    /**\n\t     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n\t     * provided\n\t     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n\t     * which consists\n\t     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n\t     *\n\t     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n\t     * to animate to\n\t     * a state value and persist its styles then one or more {@link state animation states} is expected\n\t     * to be defined.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n\t     * what the\n\t     * previous state is and what the current state has become. In other words, if a transition is\n\t     * defined that\n\t     * matches the old/current state criteria then the associated animation will be triggered.\n\t     *\n\t     * ```typescript\n\t     * // all transition/state changes are defined within an animation trigger\n\t     * trigger(\"myAnimationTrigger\", [\n\t     *   // if a state is defined then its styles will be persisted when the\n\t     *   // animation has fully completed itself\n\t     *   state(\"on\", style({ background: \"green\" })),\n\t     *   state(\"off\", style({ background: \"grey\" })),\n\t     *\n\t     *   // a transition animation that will be kicked off when the state value\n\t     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n\t     *   transition(\"on => off\", animate(500)),\n\t     *\n\t     *   // it is also possible to do run the same animation for both directions\n\t     *   transition(\"on <=> off\", animate(500)),\n\t     *\n\t     *   // or to define multiple states pairs separated by commas\n\t     *   transition(\"on => off, off => void\", animate(500)),\n\t     *\n\t     *   // this is a catch-all state change for when an element is inserted into\n\t     *   // the page and the destination state is unknown\n\t     *   transition(\"void => *\", [\n\t     *     style({ opacity: 0 }),\n\t     *     animate(500)\n\t     *   ]),\n\t     *\n\t     *   // this will capture a state change between any states\n\t     *   transition(\"* => *\", animate(\"1s 0s\")),\n\t     * ])\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * #### The final `animate` call\n\t     *\n\t     * If the final step within the transition steps is a call to `animate()` that **only**\n\t     * uses a timing value with **no style data** then it will be automatically used as the final\n\t     * animation\n\t     * arc for the element to animate itself to the final state. This involves an automatic mix of\n\t     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n\t     * applied state to be presented correctly.\n\t     *\n\t     * ```\n\t     * // start off by hiding the element, but make sure that it animates properly to whatever state\n\t     * // is currently active for \"myAnimationTrigger\"\n\t     * transition(\"void => *\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500)\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Transition Aliases (`:enter` and `:leave`)\n\t     *\n\t     * Given that enter (insertion) and leave (removal) animations are so common,\n\t     * the `transition` function accepts both `:enter` and `:leave` values which\n\t     * are aliases for the `void => *` and `* => void` state changes.\n\t     *\n\t     * ```\n\t     * transition(\":enter\", [\n\t     *   style({ opacity: 0 }),\n\t     *   animate(500, style({ opacity: 1 }))\n\t     * ])\n\t     * transition(\":leave\", [\n\t     *   animate(500, style({ opacity: 0 }))\n\t     * ])\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function transition(stateChangeExpr, steps) {\n\t        var animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n\t        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n\t    }\n\t    /**\n\t     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n\t     * animation\n\t     * DSL language. If this information is new, please navigate to the\n\t     * {@link Component#animations-anchor component animations metadata\n\t     * page} to gain a better understanding of how animations in Angular2 are used.\n\t     *\n\t     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n\t     * transition transition}\n\t     * entries that will be evaluated when the expression bound to the trigger changes.\n\t     *\n\t     * Triggers are registered within the component annotation data under the\n\t     * {@link Component#animations-anchor animations section}. An animation trigger can\n\t     * be placed on an element within a template by referencing the name of the\n\t     * trigger followed by the expression value that the trigger is bound to\n\t     * (in the form of `[@triggerName]=\"expression\"`.\n\t     *\n\t     * ### Usage\n\t     *\n\t     * `trigger` will create an animation trigger reference based on the provided `name` value.\n\t     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n\t     * {@link transition transition}\n\t     * declarations.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   selector: 'my-component',\n\t     *   templateUrl: 'my-component-tpl.html',\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *       state(...),\n\t     *       state(...),\n\t     *       transition(...),\n\t     *       transition(...)\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   myStatusExp = \"something\";\n\t     * }\n\t     * ```\n\t     *\n\t     * The template associated with this component will make use of the `myAnimationTrigger`\n\t     * animation trigger by binding to an element within its template code.\n\t     *\n\t     * ```html\n\t     * <!-- somewhere inside of my-component-tpl.html -->\n\t     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n\t     * ```\n\t     *\n\t     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n\t     *\n\t     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    function trigger(name, animation) {\n\t        return new AnimationEntryMetadata(name, animation);\n\t    }\n\t\n\t    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n\t        if (nullValue === void 0) { nullValue = null; }\n\t        var finalStyles = {};\n\t        Object.keys(newStyles).forEach(function (prop) {\n\t            var value = newStyles[prop];\n\t            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n\t        });\n\t        Object.keys(previousStyles).forEach(function (prop) {\n\t            if (!isPresent(finalStyles[prop])) {\n\t                finalStyles[prop] = nullValue;\n\t            }\n\t        });\n\t        return finalStyles;\n\t    }\n\t    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n\t        var limit = keyframes.length - 1;\n\t        var firstKeyframe = keyframes[0];\n\t        // phase 1: copy all the styles from the first keyframe into the lookup map\n\t        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n\t        var extraFirstKeyframeStyles = {};\n\t        var hasExtraFirstStyles = false;\n\t        Object.keys(collectedStyles).forEach(function (prop) {\n\t            var value = collectedStyles[prop];\n\t            // if the style is already defined in the first keyframe then\n\t            // we do not replace it.\n\t            if (!flatenedFirstKeyframeStyles[prop]) {\n\t                flatenedFirstKeyframeStyles[prop] = value;\n\t                extraFirstKeyframeStyles[prop] = value;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n\t        // phase 2: normalize the final keyframe\n\t        var finalKeyframe = keyframes[limit];\n\t        finalKeyframe.styles.styles.unshift(finalStateStyles);\n\t        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n\t        var extraFinalKeyframeStyles = {};\n\t        var hasExtraFinalStyles = false;\n\t        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n\t                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFinalStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFinalStyles) {\n\t            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n\t        }\n\t        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n\t            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n\t                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n\t                hasExtraFirstStyles = true;\n\t            }\n\t        });\n\t        if (hasExtraFirstStyles) {\n\t            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n\t        }\n\t        return keyframes;\n\t    }\n\t    function clearStyles(styles) {\n\t        var finalStyles = {};\n\t        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n\t        return finalStyles;\n\t    }\n\t    function collectAndResolveStyles(collection, styles) {\n\t        return styles.map(function (entry) {\n\t            var stylesObj = {};\n\t            Object.keys(entry).forEach(function (prop) {\n\t                var value = entry[prop];\n\t                if (value == FILL_STYLE_FLAG) {\n\t                    value = collection[prop];\n\t                    if (!isPresent(value)) {\n\t                        value = AUTO_STYLE;\n\t                    }\n\t                }\n\t                collection[prop] = value;\n\t                stylesObj[prop] = value;\n\t            });\n\t            return stylesObj;\n\t        });\n\t    }\n\t    function renderStyles(element, renderer, styles) {\n\t        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n\t    }\n\t    function flattenStyles(styles) {\n\t        var finalStyles = {};\n\t        styles.forEach(function (entry) {\n\t            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = entry[prop]; });\n\t        });\n\t        return finalStyles;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var AnimationStyles = (function () {\n\t        function AnimationStyles(styles) {\n\t            this.styles = styles;\n\t        }\n\t        return AnimationStyles;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * An instance of this class is returned as an event parameter when an animation\n\t     * callback is captured for an animation either during the start or done phase.\n\t     *\n\t     * ```typescript\n\t     * @Component({\n\t     *   host: {\n\t     *     '[@myAnimationTrigger]': 'someExpression',\n\t     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n\t     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n\t     *   },\n\t     *   animations: [\n\t     *     trigger(\"myAnimationTrigger\", [\n\t     *        // ...\n\t     *     ])\n\t     *   ]\n\t     * })\n\t     * class MyComponent {\n\t     *   someExpression: any = false;\n\t     *   captureStartEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     *\n\t     *   captureDoneEvent(event: AnimationTransitionEvent) {\n\t     *     // the toState, fromState and totalTime data is accessible from the event variable\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * @experimental Animation support is experimental.\n\t     */\n\t    var AnimationTransitionEvent = (function () {\n\t        function AnimationTransitionEvent(_a) {\n\t            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n\t            this.fromState = fromState;\n\t            this.toState = toState;\n\t            this.totalTime = totalTime;\n\t            this.phaseName = phaseName;\n\t        }\n\t        return AnimationTransitionEvent;\n\t    }());\n\t\n\t    var AnimationTransition = (function () {\n\t        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n\t            this._player = _player;\n\t            this._fromState = _fromState;\n\t            this._toState = _toState;\n\t            this._totalTime = _totalTime;\n\t        }\n\t        AnimationTransition.prototype._createEvent = function (phaseName) {\n\t            return new AnimationTransitionEvent({\n\t                fromState: this._fromState,\n\t                toState: this._toState,\n\t                totalTime: this._totalTime,\n\t                phaseName: phaseName\n\t            });\n\t        };\n\t        AnimationTransition.prototype.onStart = function (callback) {\n\t            var event = this._createEvent('start');\n\t            this._player.onStart(function () { return callback(event); });\n\t        };\n\t        AnimationTransition.prototype.onDone = function (callback) {\n\t            var event = this._createEvent('done');\n\t            this._player.onDone(function () { return callback(event); });\n\t        };\n\t        return AnimationTransition;\n\t    }());\n\t\n\t    var DebugDomRootRenderer = (function () {\n\t        function DebugDomRootRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n\t            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n\t        };\n\t        return DebugDomRootRenderer;\n\t    }());\n\t    var DebugDomRenderer = (function () {\n\t        function DebugDomRenderer(_delegate) {\n\t            this._delegate = _delegate;\n\t        }\n\t        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n\t            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n\t            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n\t            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n\t            debugEl.name = name;\n\t            indexDebugNode(debugEl);\n\t            return nativeEl;\n\t        };\n\t        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n\t        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n\t            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n\t            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return comment;\n\t        };\n\t        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n\t            var text = this._delegate.createText(parentElement, value, debugInfo);\n\t            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n\t            indexDebugNode(debugEl);\n\t            return text;\n\t        };\n\t        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n\t            var debugParent = getDebugNode(parentElement);\n\t            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n\t                var debugElement_1 = debugParent;\n\t                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n\t            }\n\t            this._delegate.projectNodes(parentElement, nodes);\n\t        };\n\t        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n\t            var debugNode = getDebugNode(node);\n\t            if (isPresent(debugNode)) {\n\t                var debugParent = debugNode.parent;\n\t                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n\t                    var debugViewRootNodes_1 = [];\n\t                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n\t                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n\t                }\n\t            }\n\t            this._delegate.attachViewAfter(node, viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n\t            viewRootNodes.forEach(function (node) {\n\t                var debugNode = getDebugNode(node);\n\t                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n\t                    debugNode.parent.removeChild(debugNode);\n\t                }\n\t            });\n\t            this._delegate.detachView(viewRootNodes);\n\t        };\n\t        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n\t            viewAllNodes = viewAllNodes || [];\n\t            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n\t            this._delegate.destroyView(hostElement, viewAllNodes);\n\t        };\n\t        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl)) {\n\t                debugEl.listeners.push(new EventListener(name, callback));\n\t            }\n\t            return this._delegate.listen(renderElement, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n\t            return this._delegate.listenGlobal(target, name, callback);\n\t        };\n\t        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.properties[propertyName] = propertyValue;\n\t            }\n\t            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.attributes[attributeName] = attributeValue;\n\t            }\n\t            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n\t        };\n\t        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n\t            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n\t        };\n\t        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.classes[className] = isAdd;\n\t            }\n\t            this._delegate.setElementClass(renderElement, className, isAdd);\n\t        };\n\t        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n\t            var debugEl = getDebugNode(renderElement);\n\t            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n\t                debugEl.styles[styleName] = styleValue;\n\t            }\n\t            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n\t        };\n\t        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n\t            this._delegate.invokeElementMethod(renderElement, methodName, args);\n\t        };\n\t        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n\t        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n\t            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n\t        };\n\t        return DebugDomRenderer;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var ViewType;\n\t    (function (ViewType) {\n\t        // A view that contains the host element with bound component directive.\n\t        // Contains a COMPONENT view\n\t        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n\t        // The view of the component\n\t        // Can contain 0 to n EMBEDDED views\n\t        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n\t        // A view that is embedded into another View via a <template> element\n\t        // inside of a COMPONENT view\n\t        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n\t    })(ViewType || (ViewType = {}));\n\t\n\t    var StaticNodeDebugInfo = (function () {\n\t        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n\t            this.providerTokens = providerTokens;\n\t            this.componentToken = componentToken;\n\t            this.refTokens = refTokens;\n\t        }\n\t        return StaticNodeDebugInfo;\n\t    }());\n\t    var DebugContext = (function () {\n\t        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t            this._tplRow = _tplRow;\n\t            this._tplCol = _tplCol;\n\t        }\n\t        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n\t            get: function () {\n\t                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"context\", {\n\t            get: function () { return this._view.context; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"component\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n\t                    return this.injector.get(staticNodeInfo.componentToken);\n\t                }\n\t                return null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n\t            get: function () {\n\t                var componentView = this._view;\n\t                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n\t                    componentView = componentView.parentView;\n\t                }\n\t                return componentView.parentElement;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"injector\", {\n\t            get: function () { return this._view.injector(this._nodeIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n\t            get: function () {\n\t                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n\t                    return this._view.allNodes[this._nodeIndex];\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n\t            get: function () {\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"source\", {\n\t            get: function () {\n\t                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(DebugContext.prototype, \"references\", {\n\t            get: function () {\n\t                var _this = this;\n\t                var varValues = {};\n\t                var staticNodeInfo = this._staticNodeInfo;\n\t                if (isPresent(staticNodeInfo)) {\n\t                    var refs_1 = staticNodeInfo.refTokens;\n\t                    Object.keys(refs_1).forEach(function (refName) {\n\t                        var refToken = refs_1[refName];\n\t                        var varValue;\n\t                        if (isBlank(refToken)) {\n\t                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n\t                        }\n\t                        else {\n\t                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n\t                        }\n\t                        varValues[refName] = varValue;\n\t                    });\n\t                }\n\t                return varValues;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return DebugContext;\n\t    }());\n\t\n\t    var ViewAnimationMap = (function () {\n\t        function ViewAnimationMap() {\n\t            this._map = new Map();\n\t            this._allPlayers = [];\n\t        }\n\t        ViewAnimationMap.prototype.find = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (isPresent(playersByAnimation)) {\n\t                return playersByAnimation[animationName];\n\t            }\n\t        };\n\t        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n\t            var el = this._map.get(element);\n\t            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n\t        };\n\t        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (!isPresent(playersByAnimation)) {\n\t                playersByAnimation = {};\n\t            }\n\t            var existingEntry = playersByAnimation[animationName];\n\t            if (isPresent(existingEntry)) {\n\t                this.remove(element, animationName);\n\t            }\n\t            playersByAnimation[animationName] = player;\n\t            this._allPlayers.push(player);\n\t            this._map.set(element, playersByAnimation);\n\t        };\n\t        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n\t        ViewAnimationMap.prototype.remove = function (element, animationName) {\n\t            var playersByAnimation = this._map.get(element);\n\t            if (playersByAnimation) {\n\t                var player = playersByAnimation[animationName];\n\t                delete playersByAnimation[animationName];\n\t                var index = this._allPlayers.indexOf(player);\n\t                this._allPlayers.splice(index, 1);\n\t                if (Object.keys(playersByAnimation).length === 0) {\n\t                    this._map.delete(element);\n\t                }\n\t            }\n\t        };\n\t        return ViewAnimationMap;\n\t    }());\n\t\n\t    var AnimationViewContext = (function () {\n\t        function AnimationViewContext() {\n\t            this._players = new ViewAnimationMap();\n\t        }\n\t        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n\t            var activeAnimationPlayers = this._players.getAllPlayers();\n\t            // we check for the length to avoid having GroupAnimationPlayer\n\t            // issue an unnecessary microtask when zero players are passed in\n\t            if (activeAnimationPlayers.length) {\n\t                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n\t            }\n\t            else {\n\t                callback();\n\t            }\n\t        };\n\t        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n\t            queueAnimationGlobally(player);\n\t            this._players.set(element, animationName, player);\n\t        };\n\t        AnimationViewContext.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n\t            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n\t            if (removeAllAnimations) {\n\t                this._players.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n\t            }\n\t            else {\n\t                var player = this._players.find(element, animationName);\n\t                if (player) {\n\t                    player.destroy();\n\t                }\n\t            }\n\t        };\n\t        return AnimationViewContext;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$15 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var ElementInjector = (function (_super) {\n\t        __extends$15(ElementInjector, _super);\n\t        function ElementInjector(_view, _nodeIndex) {\n\t            _super.call(this);\n\t            this._view = _view;\n\t            this._nodeIndex = _nodeIndex;\n\t        }\n\t        ElementInjector.prototype.get = function (token, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n\t        };\n\t        return ElementInjector;\n\t    }(Injector));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$14 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n\t    /**\n\t     * @experimental\n\t     */\n\t    var EMPTY_CONTEXT$1 = new Object();\n\t    var UNDEFINED$1 = new Object();\n\t    /**\n\t     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n\t     *\n\t     */\n\t    var AppView = (function () {\n\t        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            this.clazz = clazz;\n\t            this.componentType = componentType;\n\t            this.type = type;\n\t            this.viewUtils = viewUtils;\n\t            this.parentView = parentView;\n\t            this.parentIndex = parentIndex;\n\t            this.parentElement = parentElement;\n\t            this.cdMode = cdMode;\n\t            this.declaredViewContainer = declaredViewContainer;\n\t            this.viewContainer = null;\n\t            this.numberOfChecks = 0;\n\t            this.ref = new ViewRef_(this);\n\t            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n\t                this.renderer = viewUtils.renderComponent(componentType);\n\t            }\n\t            else {\n\t                this.renderer = parentView.renderer;\n\t            }\n\t            this._directRenderer = this.renderer.directRenderer;\n\t        }\n\t        Object.defineProperty(AppView.prototype, \"animationContext\", {\n\t            get: function () {\n\t                if (!this._animationContext) {\n\t                    this._animationContext = new AnimationViewContext();\n\t                }\n\t                return this._animationContext;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"destroyed\", {\n\t            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppView.prototype.create = function (context) {\n\t            this.context = context;\n\t            return this.createInternal(null);\n\t        };\n\t        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n\t            this.context = EMPTY_CONTEXT$1;\n\t            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n\t            this._hostInjector = hostInjector;\n\t            this._hostProjectableNodes = projectableNodes;\n\t            return this.createInternal(rootSelectorOrNode);\n\t        };\n\t        /**\n\t         * Overwritten by implementations.\n\t         * Returns the ComponentRef for the host element for ViewType.HOST.\n\t         */\n\t        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n\t        /**\n\t         * Overwritten by implementations.\n\t         */\n\t        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n\t        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n\t            this.lastRootNode = lastRootNode;\n\t            this.allNodes = allNodes;\n\t            this.disposables = disposables;\n\t            if (this.type === ViewType.COMPONENT) {\n\t                this.dirtyParentQueriesInternal();\n\t            }\n\t        };\n\t        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n\t            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n\t            var result = UNDEFINED$1;\n\t            var view = this;\n\t            while (result === UNDEFINED$1) {\n\t                if (isPresent(nodeIndex)) {\n\t                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n\t                }\n\t                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n\t                    result = view._hostInjector.get(token, notFoundValue);\n\t                }\n\t                nodeIndex = view.parentIndex;\n\t                view = view.parentView;\n\t            }\n\t            return result;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n\t            return notFoundResult;\n\t        };\n\t        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n\t        AppView.prototype.detachAndDestroy = function () {\n\t            if (this._hasExternalHostElement) {\n\t                this.detach();\n\t            }\n\t            else if (isPresent(this.viewContainer)) {\n\t                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n\t            }\n\t            this.destroy();\n\t        };\n\t        AppView.prototype.destroy = function () {\n\t            var _this = this;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                return;\n\t            }\n\t            var hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n\t            if (this.disposables) {\n\t                for (var i = 0; i < this.disposables.length; i++) {\n\t                    this.disposables[i]();\n\t                }\n\t            }\n\t            this.destroyInternal();\n\t            this.dirtyParentQueriesInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n\t            }\n\t            else {\n\t                this.renderer.destroyView(hostElement, this.allNodes);\n\t            }\n\t            this.cdMode = ChangeDetectorStatus.Destroyed;\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.destroyInternal = function () { };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detachInternal = function () { };\n\t        AppView.prototype.detach = function () {\n\t            var _this = this;\n\t            this.detachInternal();\n\t            if (this._animationContext) {\n\t                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n\t            }\n\t            else {\n\t                this._renderDetach();\n\t            }\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer) {\n\t                var projectedViews = this.declaredViewContainer.projectedViews;\n\t                var index = projectedViews.indexOf(this);\n\t                // perf: pop is faster than splice!\n\t                if (index >= projectedViews.length - 1) {\n\t                    projectedViews.pop();\n\t                }\n\t                else {\n\t                    projectedViews.splice(index, 1);\n\t                }\n\t            }\n\t            this.viewContainer = null;\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        AppView.prototype._renderDetach = function () {\n\t            if (this._directRenderer) {\n\t                this.visitRootNodesInternal(this._directRenderer.remove, null);\n\t            }\n\t            else {\n\t                this.renderer.detachView(this.flatRootNodes);\n\t            }\n\t        };\n\t        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.viewContainer = viewContainer;\n\t            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n\t                if (!this.declaredViewContainer.projectedViews) {\n\t                    this.declaredViewContainer.projectedViews = [];\n\t                }\n\t                this.declaredViewContainer.projectedViews.push(this);\n\t            }\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n\t            this._renderAttach(viewContainer, prevView);\n\t            this.dirtyParentQueriesInternal();\n\t        };\n\t        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n\t            var prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n\t            if (this._directRenderer) {\n\t                var nextSibling = this._directRenderer.nextSibling(prevNode);\n\t                if (nextSibling) {\n\t                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n\t                }\n\t                else {\n\t                    this.visitRootNodesInternal(this._directRenderer.appendChild, this._directRenderer.parentElement(prevNode));\n\t                }\n\t            }\n\t            else {\n\t                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n\t            }\n\t        };\n\t        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n\t            get: function () { return this.ref; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n\t            get: function () {\n\t                var nodes = [];\n\t                this.visitRootNodesInternal(addToArray, nodes);\n\t                return nodes;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n\t            if (this._directRenderer) {\n\t                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n\t            }\n\t            else {\n\t                var nodes = [];\n\t                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n\t                this.renderer.projectNodes(parentElement, nodes);\n\t            }\n\t        };\n\t        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n\t            switch (this.type) {\n\t                case ViewType.EMBEDDED:\n\t                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n\t                    break;\n\t                case ViewType.COMPONENT:\n\t                    if (this.parentView.type === ViewType.HOST) {\n\t                        var nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n\t                        for (var i = 0; i < nodes.length; i++) {\n\t                            cb(nodes[i], c);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n\t                    }\n\t                    break;\n\t            }\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.dirtyParentQueriesInternal = function () { };\n\t        AppView.prototype.detectChanges = function (throwOnChange) {\n\t            var s = _scope_check(this.clazz);\n\t            if (this.cdMode === ChangeDetectorStatus.Checked ||\n\t                this.cdMode === ChangeDetectorStatus.Errored ||\n\t                this.cdMode === ChangeDetectorStatus.Detached)\n\t                return;\n\t            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n\t                this.throwDestroyedError('detectChanges');\n\t            }\n\t            this.detectChangesInternal(throwOnChange);\n\t            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n\t                this.cdMode = ChangeDetectorStatus.Checked;\n\t            this.numberOfChecks++;\n\t            wtfLeave(s);\n\t        };\n\t        /**\n\t         * Overwritten by implementations\n\t         */\n\t        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n\t        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n\t        AppView.prototype.markPathToRootAsCheckOnce = function () {\n\t            var c = this;\n\t            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n\t                if (c.cdMode === ChangeDetectorStatus.Checked) {\n\t                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n\t                }\n\t                if (c.type === ViewType.COMPONENT) {\n\t                    c = c.parentView;\n\t                }\n\t                else {\n\t                    c = c.viewContainer ? c.viewContainer.parentView : null;\n\t                }\n\t            }\n\t        };\n\t        AppView.prototype.eventHandler = function (cb) {\n\t            return cb;\n\t        };\n\t        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n\t        return AppView;\n\t    }());\n\t    var DebugAppView = (function (_super) {\n\t        __extends$14(DebugAppView, _super);\n\t        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n\t            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n\t            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n\t            this.staticNodeDebugInfos = staticNodeDebugInfos;\n\t            this._currentDebugContext = null;\n\t        }\n\t        DebugAppView.prototype.create = function (context) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.create.call(this, context);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n\t            if (projectableNodes === void 0) { projectableNodes = null; }\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n\t            this._resetDebug();\n\t            try {\n\t                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detach = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detach.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.destroy = function () {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.destroy.call(this);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n\t            this._resetDebug();\n\t            try {\n\t                _super.prototype.detectChanges.call(this, throwOnChange);\n\t            }\n\t            catch (e) {\n\t                this._rethrowWithContext(e);\n\t                throw e;\n\t            }\n\t        };\n\t        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n\t        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n\t            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n\t        };\n\t        DebugAppView.prototype._rethrowWithContext = function (e) {\n\t            if (!(e instanceof ViewWrappedError)) {\n\t                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n\t                    this.cdMode = ChangeDetectorStatus.Errored;\n\t                }\n\t                if (isPresent(this._currentDebugContext)) {\n\t                    throw new ViewWrappedError(e, this._currentDebugContext);\n\t                }\n\t            }\n\t        };\n\t        DebugAppView.prototype.eventHandler = function (cb) {\n\t            var _this = this;\n\t            var superHandler = _super.prototype.eventHandler.call(this, cb);\n\t            return function (eventName, event) {\n\t                _this._resetDebug();\n\t                try {\n\t                    return superHandler.call(_this, eventName, event);\n\t                }\n\t                catch (e) {\n\t                    _this._rethrowWithContext(e);\n\t                    throw e;\n\t                }\n\t            };\n\t        };\n\t        return DebugAppView;\n\t    }(AppView));\n\t\n\t    /**\n\t     * A ViewContainer is created for elements that have a ViewContainerRef\n\t     * to keep track of the nested views.\n\t     */\n\t    var ViewContainer = (function () {\n\t        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n\t            this.index = index;\n\t            this.parentIndex = parentIndex;\n\t            this.parentView = parentView;\n\t            this.nativeElement = nativeElement;\n\t        }\n\t        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n\t            get: function () { return new ElementRef(this.nativeElement); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n\t            get: function () { return new ViewContainerRef_(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n\t            get: function () { return this.parentView.injector(this.parentIndex); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n\t            get: function () { return this.parentView.injector(this.index); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n\t            if (this.nestedViews) {\n\t                for (var i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].detectChanges(throwOnChange);\n\t                }\n\t            }\n\t        };\n\t        ViewContainer.prototype.destroyNestedViews = function () {\n\t            if (this.nestedViews) {\n\t                for (var i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].destroy();\n\t                }\n\t            }\n\t        };\n\t        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n\t            if (this.nestedViews) {\n\t                for (var i = 0; i < this.nestedViews.length; i++) {\n\t                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n\t                }\n\t            }\n\t        };\n\t        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n\t            var result = [];\n\t            if (this.nestedViews) {\n\t                for (var i = 0; i < this.nestedViews.length; i++) {\n\t                    var nestedView = this.nestedViews[i];\n\t                    if (nestedView.clazz === nestedViewClass) {\n\t                        result.push(callback(nestedView));\n\t                    }\n\t                }\n\t            }\n\t            if (this.projectedViews) {\n\t                for (var i = 0; i < this.projectedViews.length; i++) {\n\t                    var projectedView = this.projectedViews[i];\n\t                    if (projectedView.clazz === nestedViewClass) {\n\t                        result.push(callback(projectedView));\n\t                    }\n\t                }\n\t            }\n\t            return result;\n\t        };\n\t        ViewContainer.prototype.moveView = function (view, currentIndex) {\n\t            var previousIndex = this.nestedViews.indexOf(view);\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            nestedViews.splice(previousIndex, 1);\n\t            nestedViews.splice(currentIndex, 0, view);\n\t            var prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n\t            view.moveAfter(this, prevView);\n\t        };\n\t        ViewContainer.prototype.attachView = function (view, viewIndex) {\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            var nestedViews = this.nestedViews;\n\t            if (nestedViews == null) {\n\t                nestedViews = [];\n\t                this.nestedViews = nestedViews;\n\t            }\n\t            // perf: array.push is faster than array.splice!\n\t            if (viewIndex >= nestedViews.length) {\n\t                nestedViews.push(view);\n\t            }\n\t            else {\n\t                nestedViews.splice(viewIndex, 0, view);\n\t            }\n\t            var prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n\t            view.attachAfter(this, prevView);\n\t        };\n\t        ViewContainer.prototype.detachView = function (viewIndex) {\n\t            var view = this.nestedViews[viewIndex];\n\t            // perf: array.pop is faster than array.splice!\n\t            if (viewIndex >= this.nestedViews.length - 1) {\n\t                this.nestedViews.pop();\n\t            }\n\t            else {\n\t                this.nestedViews.splice(viewIndex, 1);\n\t            }\n\t            if (view.type === ViewType.COMPONENT) {\n\t                throw new Error(\"Component views can't be moved!\");\n\t            }\n\t            view.detach();\n\t            return view;\n\t        };\n\t        return ViewContainer;\n\t    }());\n\t\n\t    var __core_private__ = {\n\t        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n\t        ChangeDetectorStatus: ChangeDetectorStatus,\n\t        constructDependencies: constructDependencies,\n\t        LifecycleHooks: LifecycleHooks,\n\t        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n\t        ReflectorReader: ReflectorReader,\n\t        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n\t        ComponentRef_: ComponentRef_,\n\t        ViewContainer: ViewContainer,\n\t        AppView: AppView,\n\t        DebugAppView: DebugAppView,\n\t        NgModuleInjector: NgModuleInjector,\n\t        registerModuleFactory: registerModuleFactory,\n\t        ViewType: ViewType,\n\t        view_utils: view_utils,\n\t        ViewMetadata: ViewMetadata,\n\t        DebugContext: DebugContext,\n\t        StaticNodeDebugInfo: StaticNodeDebugInfo,\n\t        devModeEqual: devModeEqual,\n\t        UNINITIALIZED: UNINITIALIZED,\n\t        ValueUnwrapper: ValueUnwrapper,\n\t        RenderDebugInfo: RenderDebugInfo,\n\t        TemplateRef_: TemplateRef_,\n\t        ReflectionCapabilities: ReflectionCapabilities,\n\t        makeDecorator: makeDecorator,\n\t        DebugDomRootRenderer: DebugDomRootRenderer,\n\t        Console: Console,\n\t        reflector: reflector,\n\t        Reflector: Reflector,\n\t        NoOpAnimationPlayer: NoOpAnimationPlayer,\n\t        AnimationPlayer: AnimationPlayer,\n\t        AnimationSequencePlayer: AnimationSequencePlayer,\n\t        AnimationGroupPlayer: AnimationGroupPlayer,\n\t        AnimationKeyframe: AnimationKeyframe,\n\t        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n\t        balanceAnimationKeyframes: balanceAnimationKeyframes,\n\t        flattenStyles: flattenStyles,\n\t        clearStyles: clearStyles,\n\t        renderStyles: renderStyles,\n\t        collectAndResolveStyles: collectAndResolveStyles,\n\t        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n\t        AnimationStyles: AnimationStyles,\n\t        ANY_STATE: ANY_STATE,\n\t        DEFAULT_STATE: DEFAULT_STATE,\n\t        EMPTY_STATE: EMPTY_STATE,\n\t        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n\t        ComponentStillLoadingError: ComponentStillLoadingError,\n\t        isPromise: isPromise,\n\t        AnimationTransition: AnimationTransition\n\t    };\n\t\n\t    exports.createPlatform = createPlatform;\n\t    exports.assertPlatform = assertPlatform;\n\t    exports.destroyPlatform = destroyPlatform;\n\t    exports.getPlatform = getPlatform;\n\t    exports.PlatformRef = PlatformRef;\n\t    exports.ApplicationRef = ApplicationRef;\n\t    exports.enableProdMode = enableProdMode;\n\t    exports.isDevMode = isDevMode;\n\t    exports.createPlatformFactory = createPlatformFactory;\n\t    exports.APP_ID = APP_ID;\n\t    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n\t    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n\t    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n\t    exports.APP_INITIALIZER = APP_INITIALIZER;\n\t    exports.ApplicationInitStatus = ApplicationInitStatus;\n\t    exports.DebugElement = DebugElement;\n\t    exports.DebugNode = DebugNode;\n\t    exports.asNativeElements = asNativeElements;\n\t    exports.getDebugNode = getDebugNode;\n\t    exports.Testability = Testability;\n\t    exports.TestabilityRegistry = TestabilityRegistry;\n\t    exports.setTestabilityGetter = setTestabilityGetter;\n\t    exports.TRANSLATIONS = TRANSLATIONS;\n\t    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n\t    exports.LOCALE_ID = LOCALE_ID;\n\t    exports.ApplicationModule = ApplicationModule;\n\t    exports.wtfCreateScope = wtfCreateScope;\n\t    exports.wtfLeave = wtfLeave;\n\t    exports.wtfStartTimeRange = wtfStartTimeRange;\n\t    exports.wtfEndTimeRange = wtfEndTimeRange;\n\t    exports.Type = Type;\n\t    exports.EventEmitter = EventEmitter;\n\t    exports.ErrorHandler = ErrorHandler;\n\t    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n\t    exports.AnimationPlayer = AnimationPlayer;\n\t    exports.Sanitizer = Sanitizer;\n\t    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n\t    exports.Attribute = Attribute;\n\t    exports.ContentChild = ContentChild;\n\t    exports.ContentChildren = ContentChildren;\n\t    exports.Query = Query;\n\t    exports.ViewChild = ViewChild;\n\t    exports.ViewChildren = ViewChildren;\n\t    exports.Component = Component;\n\t    exports.Directive = Directive;\n\t    exports.HostBinding = HostBinding;\n\t    exports.HostListener = HostListener;\n\t    exports.Input = Input;\n\t    exports.Output = Output;\n\t    exports.Pipe = Pipe;\n\t    exports.AfterContentChecked = AfterContentChecked;\n\t    exports.AfterContentInit = AfterContentInit;\n\t    exports.AfterViewChecked = AfterViewChecked;\n\t    exports.AfterViewInit = AfterViewInit;\n\t    exports.DoCheck = DoCheck;\n\t    exports.OnChanges = OnChanges;\n\t    exports.OnDestroy = OnDestroy;\n\t    exports.OnInit = OnInit;\n\t    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n\t    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n\t    exports.NgModule = NgModule;\n\t    exports.Class = Class;\n\t    exports.forwardRef = forwardRef;\n\t    exports.resolveForwardRef = resolveForwardRef;\n\t    exports.Injector = Injector;\n\t    exports.ReflectiveInjector = ReflectiveInjector;\n\t    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n\t    exports.ReflectiveKey = ReflectiveKey;\n\t    exports.OpaqueToken = OpaqueToken;\n\t    exports.Inject = Inject;\n\t    exports.Optional = Optional;\n\t    exports.Injectable = Injectable;\n\t    exports.Self = Self;\n\t    exports.SkipSelf = SkipSelf;\n\t    exports.Host = Host;\n\t    exports.NgZone = NgZone;\n\t    exports.RenderComponentType = RenderComponentType;\n\t    exports.Renderer = Renderer;\n\t    exports.RootRenderer = RootRenderer;\n\t    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n\t    exports.Compiler = Compiler;\n\t    exports.CompilerFactory = CompilerFactory;\n\t    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n\t    exports.ComponentFactory = ComponentFactory;\n\t    exports.ComponentRef = ComponentRef;\n\t    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n\t    exports.ElementRef = ElementRef;\n\t    exports.NgModuleFactory = NgModuleFactory;\n\t    exports.NgModuleRef = NgModuleRef;\n\t    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n\t    exports.getModuleFactory = getModuleFactory;\n\t    exports.QueryList = QueryList;\n\t    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n\t    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n\t    exports.TemplateRef = TemplateRef;\n\t    exports.ViewContainerRef = ViewContainerRef;\n\t    exports.EmbeddedViewRef = EmbeddedViewRef;\n\t    exports.ViewRef = ViewRef;\n\t    exports.ChangeDetectorRef = ChangeDetectorRef;\n\t    exports.CollectionChangeRecord = CollectionChangeRecord;\n\t    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n\t    exports.IterableDiffers = IterableDiffers;\n\t    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n\t    exports.KeyValueDiffers = KeyValueDiffers;\n\t    exports.SimpleChange = SimpleChange;\n\t    exports.WrappedValue = WrappedValue;\n\t    exports.platformCore = platformCore;\n\t    exports.__core_private__ = __core_private__;\n\t    exports.AUTO_STYLE = AUTO_STYLE;\n\t    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n\t    exports.AnimationStateMetadata = AnimationStateMetadata;\n\t    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n\t    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n\t    exports.AnimationMetadata = AnimationMetadata;\n\t    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n\t    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n\t    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n\t    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n\t    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n\t    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n\t    exports.animate = animate;\n\t    exports.group = group;\n\t    exports.sequence = sequence;\n\t    exports.style = style;\n\t    exports.state = state;\n\t    exports.keyframes = keyframes;\n\t    exports.transition = transition;\n\t    exports.trigger = trigger;\n\t\n\t}));\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Observable_1 = __webpack_require__(4);\n\tvar Subscriber_1 = __webpack_require__(7);\n\tvar Subscription_1 = __webpack_require__(9);\n\tvar ObjectUnsubscribedError_1 = __webpack_require__(18);\n\tvar SubjectSubscription_1 = __webpack_require__(19);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\t/**\n\t * @class SubjectSubscriber<T>\n\t */\n\tvar SubjectSubscriber = (function (_super) {\n\t    __extends(SubjectSubscriber, _super);\n\t    function SubjectSubscriber(destination) {\n\t        _super.call(this, destination);\n\t        this.destination = destination;\n\t    }\n\t    return SubjectSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.SubjectSubscriber = SubjectSubscriber;\n\t/**\n\t * @class Subject<T>\n\t */\n\tvar Subject = (function (_super) {\n\t    __extends(Subject, _super);\n\t    function Subject() {\n\t        _super.call(this);\n\t        this.observers = [];\n\t        this.closed = false;\n\t        this.isStopped = false;\n\t        this.hasError = false;\n\t        this.thrownError = null;\n\t    }\n\t    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n\t        return new SubjectSubscriber(this);\n\t    };\n\t    Subject.prototype.lift = function (operator) {\n\t        var subject = new AnonymousSubject(this, this);\n\t        subject.operator = operator;\n\t        return subject;\n\t    };\n\t    Subject.prototype.next = function (value) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        if (!this.isStopped) {\n\t            var observers = this.observers;\n\t            var len = observers.length;\n\t            var copy = observers.slice();\n\t            for (var i = 0; i < len; i++) {\n\t                copy[i].next(value);\n\t            }\n\t        }\n\t    };\n\t    Subject.prototype.error = function (err) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.hasError = true;\n\t        this.thrownError = err;\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].error(err);\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.complete = function () {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        this.isStopped = true;\n\t        var observers = this.observers;\n\t        var len = observers.length;\n\t        var copy = observers.slice();\n\t        for (var i = 0; i < len; i++) {\n\t            copy[i].complete();\n\t        }\n\t        this.observers.length = 0;\n\t    };\n\t    Subject.prototype.unsubscribe = function () {\n\t        this.isStopped = true;\n\t        this.closed = true;\n\t        this.observers = null;\n\t    };\n\t    Subject.prototype._subscribe = function (subscriber) {\n\t        if (this.closed) {\n\t            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n\t        }\n\t        else if (this.hasError) {\n\t            subscriber.error(this.thrownError);\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else if (this.isStopped) {\n\t            subscriber.complete();\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t        else {\n\t            this.observers.push(subscriber);\n\t            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n\t        }\n\t    };\n\t    Subject.prototype.asObservable = function () {\n\t        var observable = new Observable_1.Observable();\n\t        observable.source = this;\n\t        return observable;\n\t    };\n\t    Subject.create = function (destination, source) {\n\t        return new AnonymousSubject(destination, source);\n\t    };\n\t    return Subject;\n\t}(Observable_1.Observable));\n\texports.Subject = Subject;\n\t/**\n\t * @class AnonymousSubject<T>\n\t */\n\tvar AnonymousSubject = (function (_super) {\n\t    __extends(AnonymousSubject, _super);\n\t    function AnonymousSubject(destination, source) {\n\t        _super.call(this);\n\t        this.destination = destination;\n\t        this.source = source;\n\t    }\n\t    AnonymousSubject.prototype.next = function (value) {\n\t        var destination = this.destination;\n\t        if (destination && destination.next) {\n\t            destination.next(value);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.error = function (err) {\n\t        var destination = this.destination;\n\t        if (destination && destination.error) {\n\t            this.destination.error(err);\n\t        }\n\t    };\n\t    AnonymousSubject.prototype.complete = function () {\n\t        var destination = this.destination;\n\t        if (destination && destination.complete) {\n\t            this.destination.complete();\n\t        }\n\t    };\n\t    AnonymousSubject.prototype._subscribe = function (subscriber) {\n\t        var source = this.source;\n\t        if (source) {\n\t            return this.source.subscribe(subscriber);\n\t        }\n\t        else {\n\t            return Subscription_1.Subscription.EMPTY;\n\t        }\n\t    };\n\t    return AnonymousSubject;\n\t}(Subject));\n\texports.AnonymousSubject = AnonymousSubject;\n\t//# sourceMappingURL=Subject.js.map\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar toSubscriber_1 = __webpack_require__(6);\n\tvar observable_1 = __webpack_require__(17);\n\t/**\n\t * A representation of any set of values over any amount of time. This the most basic building block\n\t * of RxJS.\n\t *\n\t * @class Observable<T>\n\t */\n\tvar Observable = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {Function} subscribe the function that is  called when the Observable is\n\t     * initially subscribed to. This function is given a Subscriber, to which new values\n\t     * can be `next`ed, or an `error` method can be called to raise an error, or\n\t     * `complete` can be called to notify of a successful completion.\n\t     */\n\t    function Observable(subscribe) {\n\t        this._isScalar = false;\n\t        if (subscribe) {\n\t            this._subscribe = subscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Creates a new Observable, with this Observable as the source, and the passed\n\t     * operator defined as the new observable's operator.\n\t     * @method lift\n\t     * @param {Operator} operator the operator defining the operation to take on the observable\n\t     * @return {Observable} a new observable with the Operator applied\n\t     */\n\t    Observable.prototype.lift = function (operator) {\n\t        var observable = new Observable();\n\t        observable.source = this;\n\t        observable.operator = operator;\n\t        return observable;\n\t    };\n\t    /**\n\t     * Registers handlers for handling emitted values, error and completions from the observable, and\n\t     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n\t     * @method subscribe\n\t     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n\t     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n\t     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n\t     *  the error will be thrown as unhandled\n\t     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n\t     * @return {ISubscription} a subscription reference to the registered handlers\n\t     */\n\t    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n\t        var operator = this.operator;\n\t        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\t        if (operator) {\n\t            operator.call(sink, this);\n\t        }\n\t        else {\n\t            sink.add(this._subscribe(sink));\n\t        }\n\t        if (sink.syncErrorThrowable) {\n\t            sink.syncErrorThrowable = false;\n\t            if (sink.syncErrorThrown) {\n\t                throw sink.syncErrorValue;\n\t            }\n\t        }\n\t        return sink;\n\t    };\n\t    /**\n\t     * @method forEach\n\t     * @param {Function} next a handler for each value emitted by the observable\n\t     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n\t     * @return {Promise} a promise that either resolves on observable completion or\n\t     *  rejects with the handled error\n\t     */\n\t    Observable.prototype.forEach = function (next, PromiseCtor) {\n\t        var _this = this;\n\t        if (!PromiseCtor) {\n\t            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n\t                PromiseCtor = root_1.root.Rx.config.Promise;\n\t            }\n\t            else if (root_1.root.Promise) {\n\t                PromiseCtor = root_1.root.Promise;\n\t            }\n\t        }\n\t        if (!PromiseCtor) {\n\t            throw new Error('no Promise impl found');\n\t        }\n\t        return new PromiseCtor(function (resolve, reject) {\n\t            var subscription = _this.subscribe(function (value) {\n\t                if (subscription) {\n\t                    // if there is a subscription, then we can surmise\n\t                    // the next handling is asynchronous. Any errors thrown\n\t                    // need to be rejected explicitly and unsubscribe must be\n\t                    // called manually\n\t                    try {\n\t                        next(value);\n\t                    }\n\t                    catch (err) {\n\t                        reject(err);\n\t                        subscription.unsubscribe();\n\t                    }\n\t                }\n\t                else {\n\t                    // if there is NO subscription, then we're getting a nexted\n\t                    // value synchronously during subscription. We can just call it.\n\t                    // If it errors, Observable's `subscribe` will ensure the\n\t                    // unsubscription logic is called, then synchronously rethrow the error.\n\t                    // After that, Promise will trap the error and send it\n\t                    // down the rejection path.\n\t                    next(value);\n\t                }\n\t            }, reject, resolve);\n\t        });\n\t    };\n\t    Observable.prototype._subscribe = function (subscriber) {\n\t        return this.source.subscribe(subscriber);\n\t    };\n\t    /**\n\t     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n\t     * @method Symbol.observable\n\t     * @return {Observable} this instance of the observable\n\t     */\n\t    Observable.prototype[observable_1.$$observable] = function () {\n\t        return this;\n\t    };\n\t    // HACK: Since TypeScript inherits static properties too, we have to\n\t    // fight against TypeScript here so Subject can have a different static create signature\n\t    /**\n\t     * Creates a new cold Observable by calling the Observable constructor\n\t     * @static true\n\t     * @owner Observable\n\t     * @method create\n\t     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n\t     * @return {Observable} a new cold observable\n\t     */\n\t    Observable.create = function (subscribe) {\n\t        return new Observable(subscribe);\n\t    };\n\t    return Observable;\n\t}());\n\texports.Observable = Observable;\n\t//# sourceMappingURL=Observable.js.map\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\tvar objectTypes = {\n\t    'boolean': false,\n\t    'function': true,\n\t    'object': true,\n\t    'number': false,\n\t    'string': false,\n\t    'undefined': false\n\t};\n\texports.root = (objectTypes[typeof self] && self) || (objectTypes[\"object\"] && window);\n\tvar freeGlobal = objectTypes[typeof global] && global;\n\tif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n\t    exports.root = freeGlobal;\n\t}\n\t//# sourceMappingURL=root.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Subscriber_1 = __webpack_require__(7);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\tfunction toSubscriber(nextOrObserver, error, complete) {\n\t    if (nextOrObserver) {\n\t        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n\t            return nextOrObserver;\n\t        }\n\t        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n\t            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n\t        }\n\t    }\n\t    if (!nextOrObserver && !error && !complete) {\n\t        return new Subscriber_1.Subscriber();\n\t    }\n\t    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n\t}\n\texports.toSubscriber = toSubscriber;\n\t//# sourceMappingURL=toSubscriber.js.map\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar isFunction_1 = __webpack_require__(8);\n\tvar Subscription_1 = __webpack_require__(9);\n\tvar Observer_1 = __webpack_require__(15);\n\tvar rxSubscriber_1 = __webpack_require__(16);\n\t/**\n\t * Implements the {@link Observer} interface and extends the\n\t * {@link Subscription} class. While the {@link Observer} is the public API for\n\t * consuming the values of an {@link Observable}, all Observers get converted to\n\t * a Subscriber, in order to provide Subscription-like capabilities such as\n\t * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n\t * implementing operators, but it is rarely used as a public API.\n\t *\n\t * @class Subscriber<T>\n\t */\n\tvar Subscriber = (function (_super) {\n\t    __extends(Subscriber, _super);\n\t    /**\n\t     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n\t     * defined Observer or a `next` callback function.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     */\n\t    function Subscriber(destinationOrNext, error, complete) {\n\t        _super.call(this);\n\t        this.syncErrorValue = null;\n\t        this.syncErrorThrown = false;\n\t        this.syncErrorThrowable = false;\n\t        this.isStopped = false;\n\t        switch (arguments.length) {\n\t            case 0:\n\t                this.destination = Observer_1.empty;\n\t                break;\n\t            case 1:\n\t                if (!destinationOrNext) {\n\t                    this.destination = Observer_1.empty;\n\t                    break;\n\t                }\n\t                if (typeof destinationOrNext === 'object') {\n\t                    if (destinationOrNext instanceof Subscriber) {\n\t                        this.destination = destinationOrNext;\n\t                        this.destination.add(this);\n\t                    }\n\t                    else {\n\t                        this.syncErrorThrowable = true;\n\t                        this.destination = new SafeSubscriber(this, destinationOrNext);\n\t                    }\n\t                    break;\n\t                }\n\t            default:\n\t                this.syncErrorThrowable = true;\n\t                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n\t                break;\n\t        }\n\t    }\n\t    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n\t    /**\n\t     * A static factory for a Subscriber, given a (potentially partial) definition\n\t     * of an Observer.\n\t     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n\t     * @param {function(e: ?any): void} [error] The `error` callback of an\n\t     * Observer.\n\t     * @param {function(): void} [complete] The `complete` callback of an\n\t     * Observer.\n\t     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n\t     * Observer represented by the given arguments.\n\t     */\n\t    Subscriber.create = function (next, error, complete) {\n\t        var subscriber = new Subscriber(next, error, complete);\n\t        subscriber.syncErrorThrowable = false;\n\t        return subscriber;\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `next` from\n\t     * the Observable, with a value. The Observable may call this method 0 or more\n\t     * times.\n\t     * @param {T} [value] The `next` value.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.next = function (value) {\n\t        if (!this.isStopped) {\n\t            this._next(value);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive notifications of type `error` from\n\t     * the Observable, with an attached {@link Error}. Notifies the Observer that\n\t     * the Observable has experienced an error condition.\n\t     * @param {any} [err] The `error` exception.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._error(err);\n\t        }\n\t    };\n\t    /**\n\t     * The {@link Observer} callback to receive a valueless notification of type\n\t     * `complete` from the Observable. Notifies the Observer that the Observable\n\t     * has finished sending push-based notifications.\n\t     * @return {void}\n\t     */\n\t    Subscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            this.isStopped = true;\n\t            this._complete();\n\t        }\n\t    };\n\t    Subscriber.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.isStopped = true;\n\t        _super.prototype.unsubscribe.call(this);\n\t    };\n\t    Subscriber.prototype._next = function (value) {\n\t        this.destination.next(value);\n\t    };\n\t    Subscriber.prototype._error = function (err) {\n\t        this.destination.error(err);\n\t        this.unsubscribe();\n\t    };\n\t    Subscriber.prototype._complete = function () {\n\t        this.destination.complete();\n\t        this.unsubscribe();\n\t    };\n\t    return Subscriber;\n\t}(Subscription_1.Subscription));\n\texports.Subscriber = Subscriber;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SafeSubscriber = (function (_super) {\n\t    __extends(SafeSubscriber, _super);\n\t    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n\t        _super.call(this);\n\t        this._parent = _parent;\n\t        var next;\n\t        var context = this;\n\t        if (isFunction_1.isFunction(observerOrNext)) {\n\t            next = observerOrNext;\n\t        }\n\t        else if (observerOrNext) {\n\t            context = observerOrNext;\n\t            next = observerOrNext.next;\n\t            error = observerOrNext.error;\n\t            complete = observerOrNext.complete;\n\t            if (isFunction_1.isFunction(context.unsubscribe)) {\n\t                this.add(context.unsubscribe.bind(context));\n\t            }\n\t            context.unsubscribe = this.unsubscribe.bind(this);\n\t        }\n\t        this._context = context;\n\t        this._next = next;\n\t        this._error = error;\n\t        this._complete = complete;\n\t    }\n\t    SafeSubscriber.prototype.next = function (value) {\n\t        if (!this.isStopped && this._next) {\n\t            var _parent = this._parent;\n\t            if (!_parent.syncErrorThrowable) {\n\t                this.__tryOrUnsub(this._next, value);\n\t            }\n\t            else if (this.__tryOrSetError(_parent, this._next, value)) {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.error = function (err) {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._error) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._error, err);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else if (!_parent.syncErrorThrowable) {\n\t                this.unsubscribe();\n\t                throw err;\n\t            }\n\t            else {\n\t                _parent.syncErrorValue = err;\n\t                _parent.syncErrorThrown = true;\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.complete = function () {\n\t        if (!this.isStopped) {\n\t            var _parent = this._parent;\n\t            if (this._complete) {\n\t                if (!_parent.syncErrorThrowable) {\n\t                    this.__tryOrUnsub(this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t                else {\n\t                    this.__tryOrSetError(_parent, this._complete);\n\t                    this.unsubscribe();\n\t                }\n\t            }\n\t            else {\n\t                this.unsubscribe();\n\t            }\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            this.unsubscribe();\n\t            throw err;\n\t        }\n\t    };\n\t    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n\t        try {\n\t            fn.call(this._context, value);\n\t        }\n\t        catch (err) {\n\t            parent.syncErrorValue = err;\n\t            parent.syncErrorThrown = true;\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    SafeSubscriber.prototype._unsubscribe = function () {\n\t        var _parent = this._parent;\n\t        this._context = null;\n\t        this._parent = null;\n\t        _parent.unsubscribe();\n\t    };\n\t    return SafeSubscriber;\n\t}(Subscriber));\n\t//# sourceMappingURL=Subscriber.js.map\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isFunction(x) {\n\t    return typeof x === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t//# sourceMappingURL=isFunction.js.map\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar isArray_1 = __webpack_require__(10);\n\tvar isObject_1 = __webpack_require__(11);\n\tvar isFunction_1 = __webpack_require__(8);\n\tvar tryCatch_1 = __webpack_require__(12);\n\tvar errorObject_1 = __webpack_require__(13);\n\tvar UnsubscriptionError_1 = __webpack_require__(14);\n\t/**\n\t * Represents a disposable resource, such as the execution of an Observable. A\n\t * Subscription has one important method, `unsubscribe`, that takes no argument\n\t * and just disposes the resource held by the subscription.\n\t *\n\t * Additionally, subscriptions may be grouped together through the `add()`\n\t * method, which will attach a child Subscription to the current Subscription.\n\t * When a Subscription is unsubscribed, all its children (and its grandchildren)\n\t * will be unsubscribed as well.\n\t *\n\t * @class Subscription\n\t */\n\tvar Subscription = (function () {\n\t    /**\n\t     * @param {function(): void} [unsubscribe] A function describing how to\n\t     * perform the disposal of resources when the `unsubscribe` method is called.\n\t     */\n\t    function Subscription(unsubscribe) {\n\t        /**\n\t         * A flag to indicate whether this Subscription has already been unsubscribed.\n\t         * @type {boolean}\n\t         */\n\t        this.closed = false;\n\t        if (unsubscribe) {\n\t            this._unsubscribe = unsubscribe;\n\t        }\n\t    }\n\t    /**\n\t     * Disposes the resources held by the subscription. May, for instance, cancel\n\t     * an ongoing Observable execution or cancel any other type of work that\n\t     * started when the Subscription was created.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.unsubscribe = function () {\n\t        var hasErrors = false;\n\t        var errors;\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n\t        this._subscriptions = null;\n\t        if (isFunction_1.isFunction(_unsubscribe)) {\n\t            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\t            if (trial === errorObject_1.errorObject) {\n\t                hasErrors = true;\n\t                (errors = errors || []).push(errorObject_1.errorObject.e);\n\t            }\n\t        }\n\t        if (isArray_1.isArray(_subscriptions)) {\n\t            var index = -1;\n\t            var len = _subscriptions.length;\n\t            while (++index < len) {\n\t                var sub = _subscriptions[index];\n\t                if (isObject_1.isObject(sub)) {\n\t                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\t                    if (trial === errorObject_1.errorObject) {\n\t                        hasErrors = true;\n\t                        errors = errors || [];\n\t                        var err = errorObject_1.errorObject.e;\n\t                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n\t                            errors = errors.concat(err.errors);\n\t                        }\n\t                        else {\n\t                            errors.push(err);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        if (hasErrors) {\n\t            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n\t        }\n\t    };\n\t    /**\n\t     * Adds a tear down to be called during the unsubscribe() of this\n\t     * Subscription.\n\t     *\n\t     * If the tear down being added is a subscription that is already\n\t     * unsubscribed, is the same reference `add` is being called on, or is\n\t     * `Subscription.EMPTY`, it will not be added.\n\t     *\n\t     * If this subscription is already in an `closed` state, the passed\n\t     * tear down logic will be executed immediately.\n\t     *\n\t     * @param {TeardownLogic} teardown The additional logic to execute on\n\t     * teardown.\n\t     * @return {Subscription} Returns the Subscription used or created to be\n\t     * added to the inner subscriptions list. This Subscription can be used with\n\t     * `remove()` to remove the passed teardown logic from the inner subscriptions\n\t     * list.\n\t     */\n\t    Subscription.prototype.add = function (teardown) {\n\t        if (!teardown || (teardown === Subscription.EMPTY)) {\n\t            return Subscription.EMPTY;\n\t        }\n\t        if (teardown === this) {\n\t            return this;\n\t        }\n\t        var sub = teardown;\n\t        switch (typeof teardown) {\n\t            case 'function':\n\t                sub = new Subscription(teardown);\n\t            case 'object':\n\t                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n\t                    break;\n\t                }\n\t                else if (this.closed) {\n\t                    sub.unsubscribe();\n\t                }\n\t                else {\n\t                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n\t                }\n\t                break;\n\t            default:\n\t                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n\t        }\n\t        return sub;\n\t    };\n\t    /**\n\t     * Removes a Subscription from the internal list of subscriptions that will\n\t     * unsubscribe during the unsubscribe process of this Subscription.\n\t     * @param {Subscription} subscription The subscription to remove.\n\t     * @return {void}\n\t     */\n\t    Subscription.prototype.remove = function (subscription) {\n\t        // HACK: This might be redundant because of the logic in `add()`\n\t        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n\t            return;\n\t        }\n\t        var subscriptions = this._subscriptions;\n\t        if (subscriptions) {\n\t            var subscriptionIndex = subscriptions.indexOf(subscription);\n\t            if (subscriptionIndex !== -1) {\n\t                subscriptions.splice(subscriptionIndex, 1);\n\t            }\n\t        }\n\t    };\n\t    Subscription.EMPTY = (function (empty) {\n\t        empty.closed = true;\n\t        return empty;\n\t    }(new Subscription()));\n\t    return Subscription;\n\t}());\n\texports.Subscription = Subscription;\n\t//# sourceMappingURL=Subscription.js.map\n\n/***/ },\n\n/***/ 10:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\t//# sourceMappingURL=isArray.js.map\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction isObject(x) {\n\t    return x != null && typeof x === 'object';\n\t}\n\texports.isObject = isObject;\n\t//# sourceMappingURL=isObject.js.map\n\n/***/ },\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar errorObject_1 = __webpack_require__(13);\n\tvar tryCatchTarget;\n\tfunction tryCatcher() {\n\t    try {\n\t        return tryCatchTarget.apply(this, arguments);\n\t    }\n\t    catch (e) {\n\t        errorObject_1.errorObject.e = e;\n\t        return errorObject_1.errorObject;\n\t    }\n\t}\n\tfunction tryCatch(fn) {\n\t    tryCatchTarget = fn;\n\t    return tryCatcher;\n\t}\n\texports.tryCatch = tryCatch;\n\t;\n\t//# sourceMappingURL=tryCatch.js.map\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// typeof any so that it we don't have to cast when comparing a result to the error object\n\texports.errorObject = { e: {} };\n\t//# sourceMappingURL=errorObject.js.map\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when one or more errors have occurred during the\n\t * `unsubscribe` of a {@link Subscription}.\n\t */\n\tvar UnsubscriptionError = (function (_super) {\n\t    __extends(UnsubscriptionError, _super);\n\t    function UnsubscriptionError(errors) {\n\t        _super.call(this);\n\t        this.errors = errors;\n\t        var err = Error.call(this, errors ?\n\t            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n\t        this.name = err.name = 'UnsubscriptionError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return UnsubscriptionError;\n\t}(Error));\n\texports.UnsubscriptionError = UnsubscriptionError;\n\t//# sourceMappingURL=UnsubscriptionError.js.map\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.empty = {\n\t    closed: true,\n\t    next: function (value) { },\n\t    error: function (err) { throw err; },\n\t    complete: function () { }\n\t};\n\t//# sourceMappingURL=Observer.js.map\n\n/***/ },\n\n/***/ 16:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tvar Symbol = root_1.root.Symbol;\n\texports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n\t    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\t//# sourceMappingURL=rxSubscriber.js.map\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar root_1 = __webpack_require__(5);\n\tfunction getSymbolObservable(context) {\n\t    var $$observable;\n\t    var Symbol = context.Symbol;\n\t    if (typeof Symbol === 'function') {\n\t        if (Symbol.observable) {\n\t            $$observable = Symbol.observable;\n\t        }\n\t        else {\n\t            $$observable = Symbol('observable');\n\t            Symbol.observable = $$observable;\n\t        }\n\t    }\n\t    else {\n\t        $$observable = '@@observable';\n\t    }\n\t    return $$observable;\n\t}\n\texports.getSymbolObservable = getSymbolObservable;\n\texports.$$observable = getSymbolObservable(root_1.root);\n\t//# sourceMappingURL=observable.js.map\n\n/***/ },\n\n/***/ 18:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\t/**\n\t * An error thrown when an action is invalid because the object has been\n\t * unsubscribed.\n\t *\n\t * @see {@link Subject}\n\t * @see {@link BehaviorSubject}\n\t *\n\t * @class ObjectUnsubscribedError\n\t */\n\tvar ObjectUnsubscribedError = (function (_super) {\n\t    __extends(ObjectUnsubscribedError, _super);\n\t    function ObjectUnsubscribedError() {\n\t        var err = _super.call(this, 'object unsubscribed');\n\t        this.name = err.name = 'ObjectUnsubscribedError';\n\t        this.stack = err.stack;\n\t        this.message = err.message;\n\t    }\n\t    return ObjectUnsubscribedError;\n\t}(Error));\n\texports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n\t//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n/***/ },\n\n/***/ 19:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscription_1 = __webpack_require__(9);\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar SubjectSubscription = (function (_super) {\n\t    __extends(SubjectSubscription, _super);\n\t    function SubjectSubscription(subject, subscriber) {\n\t        _super.call(this);\n\t        this.subject = subject;\n\t        this.subscriber = subscriber;\n\t        this.closed = false;\n\t    }\n\t    SubjectSubscription.prototype.unsubscribe = function () {\n\t        if (this.closed) {\n\t            return;\n\t        }\n\t        this.closed = true;\n\t        var subject = this.subject;\n\t        var observers = subject.observers;\n\t        this.subject = null;\n\t        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n\t            return;\n\t        }\n\t        var subscriberIndex = observers.indexOf(this.subscriber);\n\t        if (subscriberIndex !== -1) {\n\t            observers.splice(subscriberIndex, 1);\n\t        }\n\t    };\n\t    return SubjectSubscription;\n\t}(Subscription_1.Subscription));\n\texports.SubjectSubscription = SubjectSubscription;\n\t//# sourceMappingURL=SubjectSubscription.js.map\n\n/***/ },\n\n/***/ 254:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(1);\r\n\tvar paginate_pipe_1 = __webpack_require__(255);\r\n\tvar pagination_service_1 = __webpack_require__(256);\r\n\tvar pagination_controls_component_1 = __webpack_require__(257);\r\n\tvar pagination_controls_directive_1 = __webpack_require__(259);\r\n\tvar pagination_service_2 = __webpack_require__(256);\r\n\texports.PaginationService = pagination_service_2.PaginationService;\r\n\tvar pagination_controls_component_2 = __webpack_require__(257);\r\n\texports.PaginationControlsComponent = pagination_controls_component_2.PaginationControlsComponent;\r\n\tvar pagination_controls_directive_2 = __webpack_require__(259);\r\n\texports.PaginationControlsDirective = pagination_controls_directive_2.PaginationControlsDirective;\r\n\tvar paginate_pipe_2 = __webpack_require__(255);\r\n\texports.PaginatePipe = paginate_pipe_2.PaginatePipe;\r\n\tvar Ng2PaginationModule = (function () {\r\n\t    function Ng2PaginationModule() {\r\n\t    }\r\n\t    Ng2PaginationModule.decorators = [\r\n\t        { type: core_1.NgModule, args: [{\r\n\t                    imports: [common_1.CommonModule],\r\n\t                    declarations: [\r\n\t                        paginate_pipe_1.PaginatePipe,\r\n\t                        pagination_controls_component_1.PaginationControlsComponent,\r\n\t                        pagination_controls_directive_1.PaginationControlsDirective\r\n\t                    ],\r\n\t                    providers: [pagination_service_1.PaginationService],\r\n\t                    exports: [paginate_pipe_1.PaginatePipe, pagination_controls_component_1.PaginationControlsComponent, pagination_controls_directive_1.PaginationControlsDirective]\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    Ng2PaginationModule.ctorParameters = [];\r\n\t    return Ng2PaginationModule;\r\n\t}());\r\n\texports.Ng2PaginationModule = Ng2PaginationModule;\r\n\n\n/***/ },\n\n/***/ 255:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar pagination_service_1 = __webpack_require__(256);\r\n\tvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\n\tvar PaginatePipe = (function () {\r\n\t    function PaginatePipe(service) {\r\n\t        this.service = service;\r\n\t        // store the values from the last time the pipe was invoked\r\n\t        this.state = {};\r\n\t    }\r\n\t    PaginatePipe.prototype.transform = function (collection, args) {\r\n\t        // When an observable is passed through the AsyncPipe, it will output\r\n\t        // `null` until the subscription resolves. In this case, we want to\r\n\t        // use the cached data from the `state` object to prevent the NgFor\r\n\t        // from flashing empty until the real values arrive.\r\n\t        if (args instanceof Array) {\r\n\t            // compatible with angular2 before beta16\r\n\t            args = args[0];\r\n\t        }\r\n\t        if (!(collection instanceof Array)) {\r\n\t            var _id = args.id || this.service.defaultId;\r\n\t            if (this.state[_id]) {\r\n\t                return this.state[_id].slice;\r\n\t            }\r\n\t            else {\r\n\t                return collection;\r\n\t            }\r\n\t        }\r\n\t        var serverSideMode = args.totalItems !== undefined;\r\n\t        var instance = this.createInstance(collection, args);\r\n\t        var id = instance.id;\r\n\t        var start, end;\r\n\t        var perPage = instance.itemsPerPage;\r\n\t        this.service.register(instance);\r\n\t        if (!serverSideMode && collection instanceof Array) {\r\n\t            perPage = +perPage || LARGE_NUMBER;\r\n\t            start = (instance.currentPage - 1) * perPage;\r\n\t            end = start + perPage;\r\n\t            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n\t            if (isIdentical) {\r\n\t                return this.state[id].slice;\r\n\t            }\r\n\t            else {\r\n\t                var slice = collection.slice(start, end);\r\n\t                this.saveState(id, collection, slice, start, end);\r\n\t                this.service.change.emit(id);\r\n\t                return slice;\r\n\t            }\r\n\t        }\r\n\t        // save the state for server-side collection to avoid null\r\n\t        // flash as new data loads.\r\n\t        this.saveState(id, collection, collection, start, end);\r\n\t        return collection;\r\n\t    };\r\n\t    /**\r\n\t     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n\t     */\r\n\t    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n\t        var config = args;\r\n\t        this.checkConfig(config);\r\n\t        return {\r\n\t            id: config.id || this.service.defaultId(),\r\n\t            itemsPerPage: config.itemsPerPage || 0,\r\n\t            currentPage: config.currentPage || 1,\r\n\t            totalItems: config.totalItems || collection.length\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * Ensure the argument passed to the filter contains the required properties.\r\n\t     */\r\n\t    PaginatePipe.prototype.checkConfig = function (config) {\r\n\t        var required = ['itemsPerPage', 'currentPage'];\r\n\t        var missing = required.filter(function (prop) { return !config.hasOwnProperty(prop); });\r\n\t        if (0 < missing.length) {\r\n\t            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n\t     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n\t     * need to check that the collection, start and end points are all identical, and if so, return the\r\n\t     * last sliced array.\r\n\t     */\r\n\t    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n\t        this.state[id] = {\r\n\t            collection: collection,\r\n\t            size: collection.length,\r\n\t            slice: slice,\r\n\t            start: start,\r\n\t            end: end\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * For a given id, returns true if the collection, size, start and end values are identical.\r\n\t     */\r\n\t    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n\t        var state = this.state[id];\r\n\t        if (!state) {\r\n\t            return false;\r\n\t        }\r\n\t        var isMetaDataIdentical = state.size === collection.length &&\r\n\t            state.start === start &&\r\n\t            state.end === end;\r\n\t        if (!isMetaDataIdentical) {\r\n\t            return false;\r\n\t        }\r\n\t        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n\t    };\r\n\t    PaginatePipe.decorators = [\r\n\t        { type: core_1.Pipe, args: [{\r\n\t                    name: 'paginate',\r\n\t                    pure: false\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginatePipe.ctorParameters = [\r\n\t        { type: pagination_service_1.PaginationService, },\r\n\t    ];\r\n\t    return PaginatePipe;\r\n\t}());\r\n\texports.PaginatePipe = PaginatePipe;\r\n\n\n/***/ },\n\n/***/ 256:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar PaginationService = (function () {\r\n\t    function PaginationService() {\r\n\t        this.change = new core_1.EventEmitter();\r\n\t        this.instances = {};\r\n\t        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n\t    }\r\n\t    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n\t    PaginationService.prototype.register = function (instance) {\r\n\t        if (!instance.id) {\r\n\t            instance.id = this.DEFAULT_ID;\r\n\t        }\r\n\t        if (!this.instances[instance.id]) {\r\n\t            this.instances[instance.id] = instance;\r\n\t            this.change.emit(instance.id);\r\n\t        }\r\n\t        else {\r\n\t            var changed = this.updateInstance(instance);\r\n\t            if (changed) {\r\n\t                this.change.emit(instance.id);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Check each property of the instance and update any that have changed. Return\r\n\t     * true if any changes were made, else return false.\r\n\t     */\r\n\t    PaginationService.prototype.updateInstance = function (instance) {\r\n\t        var changed = false;\r\n\t        for (var prop in this.instances[instance.id]) {\r\n\t            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n\t                this.instances[instance.id][prop] = instance[prop];\r\n\t                changed = true;\r\n\t            }\r\n\t        }\r\n\t        return changed;\r\n\t    };\r\n\t    /**\r\n\t     * Returns the current page number.\r\n\t     */\r\n\t    PaginationService.prototype.getCurrentPage = function (id) {\r\n\t        if (this.instances[id]) {\r\n\t            return this.instances[id].currentPage;\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the current page number.\r\n\t     */\r\n\t    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n\t        if (this.instances[id]) {\r\n\t            var instance = this.instances[id];\r\n\t            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n\t            if (page <= maxPage && 1 <= page) {\r\n\t                this.instances[id].currentPage = page;\r\n\t                this.change.emit(id);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value of instance.totalItems\r\n\t     */\r\n\t    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n\t        if (this.instances[id] && 0 <= totalItems) {\r\n\t            this.instances[id].totalItems = totalItems;\r\n\t            this.change.emit(id);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Sets the value of instance.itemsPerPage.\r\n\t     */\r\n\t    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n\t        if (this.instances[id]) {\r\n\t            this.instances[id].itemsPerPage = itemsPerPage;\r\n\t            this.change.emit(id);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Returns a clone of the pagination instance object matching the id. If no\r\n\t     * id specified, returns the instance corresponding to the default id.\r\n\t     */\r\n\t    PaginationService.prototype.getInstance = function (id) {\r\n\t        if (id === void 0) { id = this.DEFAULT_ID; }\r\n\t        if (this.instances[id]) {\r\n\t            return this.clone(this.instances[id]);\r\n\t        }\r\n\t        return {};\r\n\t    };\r\n\t    /**\r\n\t     * Perform a shallow clone of an object.\r\n\t     */\r\n\t    PaginationService.prototype.clone = function (obj) {\r\n\t        var target = {};\r\n\t        for (var i in obj) {\r\n\t            if (obj.hasOwnProperty(i)) {\r\n\t                target[i] = obj[i];\r\n\t            }\r\n\t        }\r\n\t        return target;\r\n\t    };\r\n\t    return PaginationService;\r\n\t}());\r\n\texports.PaginationService = PaginationService;\r\n\n\n/***/ },\n\n/***/ 257:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar template_1 = __webpack_require__(258);\r\n\t/**\r\n\t * The default pagination controls component. Actually just a default implementation of a custom template.\r\n\t */\r\n\tvar PaginationControlsComponent = (function () {\r\n\t    function PaginationControlsComponent() {\r\n\t        this.maxSize = 7;\r\n\t        this.pageChange = new core_1.EventEmitter();\r\n\t        this._directionLinks = true;\r\n\t        this._autoHide = false;\r\n\t    }\r\n\t    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n\t        get: function () {\r\n\t            return this._directionLinks;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this._directionLinks = !!value && value !== 'false';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n\t        get: function () {\r\n\t            return this._autoHide;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this._autoHide = !!value && value !== 'false';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    PaginationControlsComponent.decorators = [\r\n\t        { type: core_1.Component, args: [{\r\n\t                    selector: 'pagination-controls',\r\n\t                    template: template_1.DEFAULT_TEMPLATE,\r\n\t                    styles: [template_1.DEFAULT_STYLES],\r\n\t                    changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginationControlsComponent.ctorParameters = [];\r\n\t    PaginationControlsComponent.propDecorators = {\r\n\t        'id': [{ type: core_1.Input },],\r\n\t        'maxSize': [{ type: core_1.Input },],\r\n\t        'directionLinks': [{ type: core_1.Input },],\r\n\t        'autoHide': [{ type: core_1.Input },],\r\n\t        'pageChange': [{ type: core_1.Output },],\r\n\t    };\r\n\t    return PaginationControlsComponent;\r\n\t}());\r\n\texports.PaginationControlsComponent = PaginationControlsComponent;\r\n\n\n/***/ },\n\n/***/ 258:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * The default template and styles for the pagination links are borrowed directly\r\n\t * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n\t */\r\n\t\"use strict\";\r\n\texports.DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ng2-pagination\\\" \\n        role=\\\"navigation\\\" \\n        aria-label=\\\"Pagination\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" aria-label=\\\"Next page\\\">\\n                Previous <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">Previous <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">Page</span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">You're on page</span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" aria-label=\\\"Next page\\\">\\n                Next <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">Next <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\n\texports.DEFAULT_STYLES = \"\\n.ng2-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ng2-pagination::before, .ng2-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ng2-pagination::after {\\n    clear: both; }\\n  .ng2-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    font-size: 0.875rem;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ng2-pagination li {\\n    display: inline-block; }\\n  .ng2-pagination a,\\n  .ng2-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ng2-pagination a:hover,\\n    .ng2-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ng2-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ng2-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ng2-pagination .disabled:hover {\\n      background: transparent; }\\n  .ng2-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n\\n.ng2-pagination .pagination-previous a::before,\\n.ng2-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ng2-pagination .pagination-next a::after,\\n.ng2-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ng2-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\n\n/***/ },\n\n/***/ 259:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar pagination_service_1 = __webpack_require__(256);\r\n\t/**\r\n\t * This directive is what powers all pagination controls components, including the default one.\r\n\t * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n\t * with the pagination controls.\r\n\t */\r\n\tvar PaginationControlsDirective = (function () {\r\n\t    function PaginationControlsDirective(service, changeDetectorRef) {\r\n\t        var _this = this;\r\n\t        this.service = service;\r\n\t        this.changeDetectorRef = changeDetectorRef;\r\n\t        this.maxSize = 7;\r\n\t        this.pageChange = new core_1.EventEmitter();\r\n\t        this.pages = [];\r\n\t        this.changeSub = this.service.change\r\n\t            .subscribe(function (id) {\r\n\t            if (_this.id === id) {\r\n\t                _this.updatePageLinks();\r\n\t                _this.changeDetectorRef.markForCheck();\r\n\t                _this.changeDetectorRef.detectChanges();\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n\t        if (this.id === undefined) {\r\n\t            this.id = this.service.defaultId();\r\n\t        }\r\n\t        this.updatePageLinks();\r\n\t    };\r\n\t    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n\t        this.updatePageLinks();\r\n\t    };\r\n\t    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n\t        this.changeSub.unsubscribe();\r\n\t    };\r\n\t    /**\r\n\t     * Go to the previous page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.previous = function () {\r\n\t        this.setCurrent(this.getCurrent() - 1);\r\n\t    };\r\n\t    /**\r\n\t     * Go to the next page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.next = function () {\r\n\t        this.setCurrent(this.getCurrent() + 1);\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if current page is first page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n\t        return this.getCurrent() === 1;\r\n\t    };\r\n\t    /**\r\n\t     * Returns true if current page is last page\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.isLastPage = function () {\r\n\t        return this.getLastPage() === this.getCurrent();\r\n\t    };\r\n\t    /**\r\n\t     * Set the current page number.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n\t        this.pageChange.emit(page);\r\n\t    };\r\n\t    /**\r\n\t     * Get the current page number.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.getCurrent = function () {\r\n\t        return this.service.getCurrentPage(this.id);\r\n\t    };\r\n\t    /**\r\n\t     * Returns the last page number\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.getLastPage = function () {\r\n\t        var inst = this.service.getInstance(this.id);\r\n\t        if (inst.totalItems < 1) {\r\n\t            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n\t            // but it makes sense to consider a single, empty page as the last page.\r\n\t            return 1;\r\n\t        }\r\n\t        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n\t    };\r\n\t    /**\r\n\t     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n\t     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n\t     * input values changes.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n\t        var _this = this;\r\n\t        var inst = this.service.getInstance(this.id);\r\n\t        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n\t        if (correctedCurrentPage !== inst.currentPage) {\r\n\t            setTimeout(function () {\r\n\t                _this.setCurrent(correctedCurrentPage);\r\n\t                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n\t     * If not, return a correct value for currentPage, or the current value if OK.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n\t        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n\t        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n\t            return totalPages;\r\n\t        }\r\n\t        else if (instance.currentPage < 1) {\r\n\t            return 1;\r\n\t        }\r\n\t        return instance.currentPage;\r\n\t    };\r\n\t    /**\r\n\t     * Returns an array of Page objects to use in the pagination controls.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n\t        // paginationRange could be a string if passed from attribute, so cast to number.\r\n\t        paginationRange = +paginationRange;\r\n\t        var pages = [];\r\n\t        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\t        var halfWay = Math.ceil(paginationRange / 2);\r\n\t        var isStart = currentPage <= halfWay;\r\n\t        var isEnd = totalPages - halfWay < currentPage;\r\n\t        var isMiddle = !isStart && !isEnd;\r\n\t        var ellipsesNeeded = paginationRange < totalPages;\r\n\t        var i = 1;\r\n\t        while (i <= totalPages && i <= paginationRange) {\r\n\t            var label = void 0;\r\n\t            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n\t            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n\t            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n\t            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n\t                label = '...';\r\n\t            }\r\n\t            else {\r\n\t                label = pageNumber;\r\n\t            }\r\n\t            pages.push({\r\n\t                label: label,\r\n\t                value: pageNumber\r\n\t            });\r\n\t            i++;\r\n\t        }\r\n\t        return pages;\r\n\t    };\r\n\t    /**\r\n\t     * Given the position in the sequence of pagination links [i],\r\n\t     * figure out what page number corresponds to that position.\r\n\t     */\r\n\t    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n\t        var halfWay = Math.ceil(paginationRange / 2);\r\n\t        if (i === paginationRange) {\r\n\t            return totalPages;\r\n\t        }\r\n\t        else if (i === 1) {\r\n\t            return i;\r\n\t        }\r\n\t        else if (paginationRange < totalPages) {\r\n\t            if (totalPages - halfWay < currentPage) {\r\n\t                return totalPages - paginationRange + i;\r\n\t            }\r\n\t            else if (halfWay < currentPage) {\r\n\t                return currentPage - halfWay + i;\r\n\t            }\r\n\t            else {\r\n\t                return i;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            return i;\r\n\t        }\r\n\t    };\r\n\t    PaginationControlsDirective.decorators = [\r\n\t        { type: core_1.Directive, args: [{\r\n\t                    selector: 'pagination-template,[pagination-template]',\r\n\t                    exportAs: 'paginationApi'\r\n\t                },] },\r\n\t    ];\r\n\t    /** @nocollapse */\r\n\t    PaginationControlsDirective.ctorParameters = [\r\n\t        { type: pagination_service_1.PaginationService, },\r\n\t        { type: core_1.ChangeDetectorRef, },\r\n\t    ];\r\n\t    PaginationControlsDirective.propDecorators = {\r\n\t        'id': [{ type: core_1.Input },],\r\n\t        'maxSize': [{ type: core_1.Input },],\r\n\t        'pageChange': [{ type: core_1.Output },],\r\n\t    };\r\n\t    return PaginationControlsDirective;\r\n\t}());\r\n\texports.PaginationControlsDirective = PaginationControlsDirective;\r\n\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// ng2-pagination.3e0bfc8166cd963b91e8.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e0bfc8166cd963b91e8","function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./dist/ng2-pagination'));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/index.js\n// module id = 0\n// module chunks = 4","/**\n * @license Angular v2.2.0\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.common = global.ng.common || {}),global.ng.core));\n}(this, function (exports,_angular_core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This class should not be used directly by an application developer. Instead, use\n     * {@link Location}.\n     *\n     * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n     * agnostic.\n     * This means that we can have different implementation of `PlatformLocation` for the different\n     * platforms\n     * that angular supports. For example, the default `PlatformLocation` is {@link\n     * BrowserPlatformLocation},\n     * however when you run your app in a WebWorker you use {@link WebWorkerPlatformLocation}.\n     *\n     * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n     * when\n     * they need to interact with the DOM apis like pushState, popState, etc...\n     *\n     * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n     * by\n     * the {@link Router} in order to navigate between routes. Since all interactions between {@link\n     * Router} /\n     * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n     * class\n     * they are all platform independent.\n     *\n     * @stable\n     */\n    var PlatformLocation = (function () {\n        function PlatformLocation() {\n        }\n        Object.defineProperty(PlatformLocation.prototype, \"pathname\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"search\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformLocation.prototype, \"hash\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformLocation;\n    }());\n\n    /**\n     * `LocationStrategy` is responsible for representing and reading route state\n     * from the browser's URL. Angular provides two strategies:\n     * {@link HashLocationStrategy} and {@link PathLocationStrategy} (default).\n     *\n     * This is used under the hood of the {@link Location} service.\n     *\n     * Applications should use the {@link Router} or {@link Location} services to\n     * interact with application route state.\n     *\n     * For instance, {@link HashLocationStrategy} produces URLs like\n     * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n     * `http://example.com/foo` as an equivalent URL.\n     *\n     * See these two classes for more.\n     *\n     * @stable\n     */\n    var LocationStrategy = (function () {\n        function LocationStrategy() {\n        }\n        return LocationStrategy;\n    }());\n    /**\n     * The `APP_BASE_HREF` token represents the base href to be used with the\n     * {@link PathLocationStrategy}.\n     *\n     * If you're using {@link PathLocationStrategy}, you must provide a provider to a string\n     * representing the URL prefix that should be preserved when generating and recognizing\n     * URLs.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * import {Component, NgModule} from '@angular/core';\n     * import {APP_BASE_HREF} from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var APP_BASE_HREF = new _angular_core.OpaqueToken('appBaseHref');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var _global = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    _global.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function isDate(obj) {\n        return obj instanceof Date && !isNaN(obj.valueOf());\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    var NumberWrapper = (function () {\n        function NumberWrapper() {\n        }\n        NumberWrapper.parseIntAutoRadix = function (text) {\n            var result = parseInt(text);\n            if (isNaN(result)) {\n                throw new Error('Invalid integer literal when parsing ' + text);\n            }\n            return result;\n        };\n        NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n        return NumberWrapper;\n    }());\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * `Location` is a service that applications can use to interact with a browser's URL.\n     * Depending on which {@link LocationStrategy} is used, `Location` will either persist\n     * to the URL's path or the URL's hash segment.\n     *\n     * Note: it's better to use {@link Router#navigate} service to trigger route changes. Use\n     * `Location` only if you need to interact with or create normalized URLs outside of\n     * routing.\n     *\n     * `Location` is responsible for normalizing the URL against the application's base href.\n     * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n     * trailing slash:\n     * - `/my/app/user/123` is normalized\n     * - `my/app/user/123` **is not** normalized\n     * - `/my/app/user/123/` **is not** normalized\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component} from '@angular/core';\n     * import {Location} from '@angular/common';\n     *\n     * @Component({selector: 'app-component'})\n     * class AppCmp {\n     *   constructor(location: Location) {\n     *     location.go('/foo');\n     *   }\n     * }\n     * ```\n     *\n     * @stable\n     */\n    var Location = (function () {\n        function Location(platformStrategy) {\n            var _this = this;\n            /** @internal */\n            this._subject = new _angular_core.EventEmitter();\n            this._platformStrategy = platformStrategy;\n            var browserBaseHref = this._platformStrategy.getBaseHref();\n            this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n            this._platformStrategy.onPopState(function (ev) {\n                _this._subject.emit({\n                    'url': _this.path(true),\n                    'pop': true,\n                    'type': ev.type,\n                });\n            });\n        }\n        /**\n         * Returns the normalized URL path.\n         */\n        // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n        // removed.\n        Location.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            return this.normalize(this._platformStrategy.path(includeHash));\n        };\n        /**\n         * Normalizes the given path and compares to the current normalized path.\n         */\n        Location.prototype.isCurrentPathEqualTo = function (path, query) {\n            if (query === void 0) { query = ''; }\n            return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n        };\n        /**\n         * Given a string representing a URL, returns the normalized URL path without leading or\n         * trailing slashes.\n         */\n        Location.prototype.normalize = function (url) {\n            return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n        };\n        /**\n         * Given a string representing a URL, returns the platform-specific external URL path.\n         * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n         * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n         * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n         */\n        Location.prototype.prepareExternalUrl = function (url) {\n            if (url.length > 0 && !url.startsWith('/')) {\n                url = '/' + url;\n            }\n            return this._platformStrategy.prepareExternalUrl(url);\n        };\n        // TODO: rename this method to pushState\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and pushes a\n         * new item onto the platform's history.\n         */\n        Location.prototype.go = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.pushState(null, '', path, query);\n        };\n        /**\n         * Changes the browsers URL to the normalized version of the given URL, and replaces\n         * the top item on the platform's history stack.\n         */\n        Location.prototype.replaceState = function (path, query) {\n            if (query === void 0) { query = ''; }\n            this._platformStrategy.replaceState(null, '', path, query);\n        };\n        /**\n         * Navigates forward in the platform's history.\n         */\n        Location.prototype.forward = function () { this._platformStrategy.forward(); };\n        /**\n         * Navigates back in the platform's history.\n         */\n        Location.prototype.back = function () { this._platformStrategy.back(); };\n        /**\n         * Subscribe to the platform's `popState` events.\n         */\n        Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n            if (onThrow === void 0) { onThrow = null; }\n            if (onReturn === void 0) { onReturn = null; }\n            return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n        };\n        /**\n         * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n         * is.\n         */\n        Location.normalizeQueryParams = function (params) {\n            return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;\n        };\n        /**\n         * Given 2 parts of a url, join them with a slash if needed.\n         */\n        Location.joinWithSlash = function (start, end) {\n            if (start.length == 0) {\n                return end;\n            }\n            if (end.length == 0) {\n                return start;\n            }\n            var slashes = 0;\n            if (start.endsWith('/')) {\n                slashes++;\n            }\n            if (end.startsWith('/')) {\n                slashes++;\n            }\n            if (slashes == 2) {\n                return start + end.substring(1);\n            }\n            if (slashes == 1) {\n                return start + end;\n            }\n            return start + '/' + end;\n        };\n        /**\n         * If url has a trailing slash, remove it, otherwise return url as is.\n         */\n        Location.stripTrailingSlash = function (url) {\n            if (/\\/$/g.test(url)) {\n                url = url.substring(0, url.length - 1);\n            }\n            return url;\n        };\n        Location.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        Location.ctorParameters = [\n            { type: LocationStrategy, },\n        ];\n        return Location;\n    }());\n    function _stripBaseHref(baseHref, url) {\n        if (baseHref.length > 0 && url.startsWith(baseHref)) {\n            return url.substring(baseHref.length);\n        }\n        return url;\n    }\n    function _stripIndexHtml(url) {\n        if (/\\/index.html$/g.test(url)) {\n            // '/index.html'.length == 11\n            return url.substring(0, url.length - 11);\n        }\n        return url;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `HashLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n     * of the browser's URL.\n     *\n     * For instance, if you call `location.go('/foo')`, the browser's URL will become\n     * `example.com#/foo`.\n     *\n     * ### Example\n     *\n     * ```\n     * import {Component, NgModule} from '@angular/core';\n     * import {\n     *   LocationStrategy,\n     *   HashLocationStrategy\n     * } from '@angular/common';\n     *\n     * @NgModule({\n     *   providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}]\n     * })\n     * class AppModule {}\n     * ```\n     *\n     * @stable\n     */\n    var HashLocationStrategy = (function (_super) {\n        __extends(HashLocationStrategy, _super);\n        function HashLocationStrategy(_platformLocation, _baseHref) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            this._baseHref = '';\n            if (isPresent(_baseHref)) {\n                this._baseHref = _baseHref;\n            }\n        }\n        HashLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        HashLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            // the hash value is always prefixed with a `#`\n            // and if it is empty then it will stay empty\n            var path = this._platformLocation.hash;\n            if (!isPresent(path))\n                path = '#';\n            return path.length > 0 ? path.substring(1) : path;\n        };\n        HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            var url = Location.joinWithSlash(this._baseHref, internal);\n            return url.length > 0 ? ('#' + url) : url;\n        };\n        HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.pushState(state, title, url);\n        };\n        HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n            var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n            if (url.length == 0) {\n                url = this._platformLocation.pathname;\n            }\n            this._platformLocation.replaceState(state, title, url);\n        };\n        HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        HashLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        HashLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return HashLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * `PathLocationStrategy` is a {@link LocationStrategy} used to configure the\n     * {@link Location} service to represent its state in the\n     * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n     * browser's URL.\n     *\n     * `PathLocationStrategy` is the default binding for {@link LocationStrategy}\n     * provided in {@link ROUTER_PROVIDERS}.\n     *\n     * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n     * or add a base element to the document. This URL prefix that will be preserved\n     * when generating and recognizing URLs.\n     *\n     * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * Similarly, if you add `<base href='/my/app'/>` to the document and call\n     * `location.go('/foo')`, the browser's URL will become\n     * `example.com/my/app/foo`.\n     *\n     * @stable\n     */\n    var PathLocationStrategy = (function (_super) {\n        __extends$1(PathLocationStrategy, _super);\n        function PathLocationStrategy(_platformLocation, href) {\n            _super.call(this);\n            this._platformLocation = _platformLocation;\n            if (isBlank(href)) {\n                href = this._platformLocation.getBaseHrefFromDOM();\n            }\n            if (isBlank(href)) {\n                throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n            }\n            this._baseHref = href;\n        }\n        PathLocationStrategy.prototype.onPopState = function (fn) {\n            this._platformLocation.onPopState(fn);\n            this._platformLocation.onHashChange(fn);\n        };\n        PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n        PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n            return Location.joinWithSlash(this._baseHref, internal);\n        };\n        PathLocationStrategy.prototype.path = function (includeHash) {\n            if (includeHash === void 0) { includeHash = false; }\n            var pathname = this._platformLocation.pathname +\n                Location.normalizeQueryParams(this._platformLocation.search);\n            var hash = this._platformLocation.hash;\n            return hash && includeHash ? \"\" + pathname + hash : pathname;\n        };\n        PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.pushState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n            var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n            this._platformLocation.replaceState(state, title, externalUrl);\n        };\n        PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n        PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n        PathLocationStrategy.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        PathLocationStrategy.ctorParameters = [\n            { type: PlatformLocation, },\n            { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [APP_BASE_HREF,] },] },\n        ];\n        return PathLocationStrategy;\n    }(LocationStrategy));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental\n     */\n    var NgLocalization = (function () {\n        function NgLocalization() {\n        }\n        return NgLocalization;\n    }());\n    /**\n     * Returns the plural category for a given value.\n     * - \"=value\" when the case exists,\n     * - the plural category otherwise\n     *\n     * @internal\n     */\n    function getPluralCategory(value, cases, ngLocalization) {\n        var nbCase = \"=\" + value;\n        return cases.indexOf(nbCase) > -1 ? nbCase : ngLocalization.getPluralCategory(value);\n    }\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    var NgLocaleLocalization = (function (_super) {\n        __extends$2(NgLocaleLocalization, _super);\n        function NgLocaleLocalization(_locale) {\n            _super.call(this);\n            this._locale = _locale;\n        }\n        NgLocaleLocalization.prototype.getPluralCategory = function (value) {\n            var plural = getPluralCase(this._locale, value);\n            switch (plural) {\n                case Plural.Zero:\n                    return 'zero';\n                case Plural.One:\n                    return 'one';\n                case Plural.Two:\n                    return 'two';\n                case Plural.Few:\n                    return 'few';\n                case Plural.Many:\n                    return 'many';\n                default:\n                    return 'other';\n            }\n        };\n        NgLocaleLocalization.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        NgLocaleLocalization.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return NgLocaleLocalization;\n    }(NgLocalization));\n    // This is generated code DO NOT MODIFY\n    // see angular2/script/cldr/gen_plural_rules.js\n    /** @experimental */\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale\n     *\n     * @experimental\n     */\n    function getPluralCase(locale, nLike) {\n        // TODO(vicb): lazy compute\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'agq':\n            case 'bas':\n            case 'cu':\n            case 'dav':\n            case 'dje':\n            case 'dua':\n            case 'dyo':\n            case 'ebu':\n            case 'ewo':\n            case 'guz':\n            case 'kam':\n            case 'khq':\n            case 'ki':\n            case 'kln':\n            case 'kok':\n            case 'ksf':\n            case 'lrc':\n            case 'lu':\n            case 'luo':\n            case 'luy':\n            case 'mer':\n            case 'mfe':\n            case 'mgh':\n            case 'mua':\n            case 'mzn':\n            case 'nmg':\n            case 'nus':\n            case 'qu':\n            case 'rn':\n            case 'rw':\n            case 'sbp':\n            case 'twq':\n            case 'vai':\n            case 'yav':\n            case 'yue':\n            case 'zgh':\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            default:\n                return Plural.Other;\n        }\n    }\n\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds and removes CSS classes on an HTML element.\n     *\n     * @howToUse\n     * ```\n     *     <some-element [ngClass]=\"'first second'\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n     *\n     *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n     * - `string` - the CSS classes listed in the string (space delimited) are added,\n     * - `Array` - the CSS classes declared as Array elements are added,\n     * - `Object` - keys are CSS classes that get added when the expression given in the value\n     *              evaluates to a truthy value, otherwise they are removed.\n     *\n     * @stable\n     */\n    var NgClass = (function () {\n        function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n            this._iterableDiffers = _iterableDiffers;\n            this._keyValueDiffers = _keyValueDiffers;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n            this._initialClasses = [];\n        }\n        Object.defineProperty(NgClass.prototype, \"klass\", {\n            set: function (v) {\n                this._applyInitialClasses(true);\n                this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n                this._applyInitialClasses(false);\n                this._applyClasses(this._rawClass, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgClass.prototype, \"ngClass\", {\n            set: function (v) {\n                this._cleanupClasses(this._rawClass);\n                this._iterableDiffer = null;\n                this._keyValueDiffer = null;\n                this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n                if (this._rawClass) {\n                    if (isListLikeIterable(this._rawClass)) {\n                        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create(null);\n                    }\n                    else {\n                        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create(null);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgClass.prototype.ngDoCheck = function () {\n            if (this._iterableDiffer) {\n                var changes = this._iterableDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyIterableChanges(changes);\n                }\n            }\n            else if (this._keyValueDiffer) {\n                var changes = this._keyValueDiffer.diff(this._rawClass);\n                if (changes) {\n                    this._applyKeyValueChanges(changes);\n                }\n            }\n        };\n        NgClass.prototype._cleanupClasses = function (rawClassVal) {\n            this._applyClasses(rawClassVal, true);\n            this._applyInitialClasses(false);\n        };\n        NgClass.prototype._applyKeyValueChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n            changes.forEachRemovedItem(function (record) {\n                if (record.previousValue) {\n                    _this._toggleClass(record.key, false);\n                }\n            });\n        };\n        NgClass.prototype._applyIterableChanges = function (changes) {\n            var _this = this;\n            changes.forEachAddedItem(function (record) {\n                if (typeof record.item === 'string') {\n                    _this._toggleClass(record.item, true);\n                }\n                else {\n                    throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + stringify(record.item));\n                }\n            });\n            changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n        };\n        NgClass.prototype._applyInitialClasses = function (isCleanup) {\n            var _this = this;\n            this._initialClasses.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n        };\n        NgClass.prototype._applyClasses = function (rawClassVal, isCleanup) {\n            var _this = this;\n            if (rawClassVal) {\n                if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                    rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, !isCleanup); });\n                }\n                else {\n                    Object.keys(rawClassVal).forEach(function (klass) {\n                        if (isPresent(rawClassVal[klass]))\n                            _this._toggleClass(klass, !isCleanup);\n                    });\n                }\n            }\n        };\n        NgClass.prototype._toggleClass = function (klass, enabled) {\n            var _this = this;\n            klass = klass.trim();\n            if (klass) {\n                klass.split(/\\s+/g).forEach(function (klass) { _this._renderer.setElementClass(_this._ngEl.nativeElement, klass, enabled); });\n            }\n        };\n        NgClass.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngClass]' },] },\n        ];\n        /** @nocollapse */\n        NgClass.ctorParameters = [\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgClass.propDecorators = {\n            'klass': [{ type: _angular_core.Input, args: ['class',] },],\n            'ngClass': [{ type: _angular_core.Input },],\n        };\n        return NgClass;\n    }());\n\n    var NgForRow = (function () {\n        function NgForRow($implicit, index, count) {\n            this.$implicit = $implicit;\n            this.index = index;\n            this.count = count;\n        }\n        Object.defineProperty(NgForRow.prototype, \"first\", {\n            get: function () { return this.index === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"last\", {\n            get: function () { return this.index === this.count - 1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"even\", {\n            get: function () { return this.index % 2 === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForRow.prototype, \"odd\", {\n            get: function () { return !this.even; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgForRow;\n    }());\n    /**\n     * The `NgFor` directive instantiates a template once per item from an iterable. The context for\n     * each instantiated template inherits from the outer context with the given loop variable set\n     * to the current item from the iterable.\n     *\n     * ### Local Variables\n     *\n     * `NgFor` provides several exported values that can be aliased to local variables:\n     *\n     * * `index` will be set to the current loop iteration for each template context.\n     * * `first` will be set to a boolean value indicating whether the item is the first one in the\n     *   iteration.\n     * * `last` will be set to a boolean value indicating whether the item is the last one in the\n     *   iteration.\n     * * `even` will be set to a boolean value indicating whether this item has an even index.\n     * * `odd` will be set to a boolean value indicating whether this item has an odd index.\n     *\n     * ### Change Propagation\n     *\n     * When the contents of the iterator changes, `NgFor` makes the corresponding changes to the DOM:\n     *\n     * * When an item is added, a new instance of the template is added to the DOM.\n     * * When an item is removed, its template instance is removed from the DOM.\n     * * When items are reordered, their respective templates are reordered in the DOM.\n     * * Otherwise, the DOM element for that item will remain the same.\n     *\n     * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n     * those changes in the DOM. This has important implications for animations and any stateful\n     * controls\n     * (such as `<input>` elements which accept user input) that are present. Inserted rows can be\n     * animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such\n     * as user input.\n     *\n     * It is possible for the identities of elements in the iterator to change while the data does not.\n     * This can happen, for example, if the iterator produced from an RPC to the server, and that\n     * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n     * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n     * elements were deleted and all new elements inserted). This is an expensive operation and should\n     * be avoided if possible.\n     *\n     * To customize the default tracking algorithm, `NgFor` supports `trackBy` option.\n     * `trackBy` takes a function which has two arguments: `index` and `item`.\n     * If `trackBy` is given, Angular tracks changes by the return value of the function.\n     *\n     * ### Syntax\n     *\n     * - `<li *ngFor=\"let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     * - `<li template=\"ngFor let item of items; let i = index; trackBy: trackByFn\">...</li>`\n     *\n     * With `<template>` element:\n     *\n     * ```\n     * <template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n     *   <li>...</li>\n     * </template>\n     * ```\n     *\n     * ### Example\n     *\n     * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n     * example.\n     *\n     * @stable\n     */\n    var NgFor = (function () {\n        function NgFor(_viewContainer, _template, _differs, _cdr) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._differs = _differs;\n            this._cdr = _cdr;\n            this._differ = null;\n        }\n        Object.defineProperty(NgFor.prototype, \"ngForTemplate\", {\n            set: function (value) {\n                if (value) {\n                    this._template = value;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgFor.prototype.ngOnChanges = function (changes) {\n            if ('ngForOf' in changes) {\n                // React on ngForOf changes only once all inputs have been initialized\n                var value = changes['ngForOf'].currentValue;\n                if (!this._differ && value) {\n                    try {\n                        this._differ = this._differs.find(value).create(this._cdr, this.ngForTrackBy);\n                    }\n                    catch (e) {\n                        throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                    }\n                }\n            }\n        };\n        NgFor.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this.ngForOf);\n                if (changes)\n                    this._applyChanges(changes);\n            }\n        };\n        NgFor.prototype._applyChanges = function (changes) {\n            var _this = this;\n            var insertTuples = [];\n            changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n                if (item.previousIndex == null) {\n                    var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForRow(null, null, null), currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n                else if (currentIndex == null) {\n                    _this._viewContainer.remove(adjustedPreviousIndex);\n                }\n                else {\n                    var view = _this._viewContainer.get(adjustedPreviousIndex);\n                    _this._viewContainer.move(view, currentIndex);\n                    var tuple = new RecordViewTuple(item, view);\n                    insertTuples.push(tuple);\n                }\n            });\n            for (var i = 0; i < insertTuples.length; i++) {\n                this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n            }\n            for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n                var viewRef = this._viewContainer.get(i);\n                viewRef.context.index = i;\n                viewRef.context.count = ilen;\n            }\n            changes.forEachIdentityChange(function (record) {\n                var viewRef = _this._viewContainer.get(record.currentIndex);\n                viewRef.context.$implicit = record.item;\n            });\n        };\n        NgFor.prototype._perViewChange = function (view, record) {\n            view.context.$implicit = record.item;\n        };\n        NgFor.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngFor][ngForOf]' },] },\n        ];\n        /** @nocollapse */\n        NgFor.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.IterableDiffers, },\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        NgFor.propDecorators = {\n            'ngForOf': [{ type: _angular_core.Input },],\n            'ngForTrackBy': [{ type: _angular_core.Input },],\n            'ngForTemplate': [{ type: _angular_core.Input },],\n        };\n        return NgFor;\n    }());\n    var RecordViewTuple = (function () {\n        function RecordViewTuple(record, view) {\n            this.record = record;\n            this.view = view;\n        }\n        return RecordViewTuple;\n    }());\n\n    /**\n     * Removes or recreates a portion of the DOM tree based on an {expression}.\n     *\n     * If the expression assigned to `ngIf` evaluates to a falsy value then the element\n     * is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/fe0kgemFBtmQOY31b4tw?p=preview)):\n     *\n     * ```\n     * <div *ngIf=\"errorCount > 0\" class=\"error\">\n     *   <!-- Error message displayed when the errorCount property in the current context is greater\n     * than 0. -->\n     *   {{errorCount}} errors detected\n     * </div>\n     * ```\n     *\n     * ### Syntax\n     *\n     * - `<div *ngIf=\"condition\">...</div>`\n     * - `<div template=\"ngIf condition\">...</div>`\n     * - `<template [ngIf]=\"condition\"><div>...</div></template>`\n     *\n     * @stable\n     */\n    var NgIf = (function () {\n        function NgIf(_viewContainer, _template) {\n            this._viewContainer = _viewContainer;\n            this._template = _template;\n            this._hasView = false;\n        }\n        Object.defineProperty(NgIf.prototype, \"ngIf\", {\n            set: function (condition) {\n                if (condition && !this._hasView) {\n                    this._hasView = true;\n                    this._viewContainer.createEmbeddedView(this._template);\n                }\n                else if (!condition && this._hasView) {\n                    this._hasView = false;\n                    this._viewContainer.clear();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgIf.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngIf]' },] },\n        ];\n        /** @nocollapse */\n        NgIf.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n        ];\n        NgIf.propDecorators = {\n            'ngIf': [{ type: _angular_core.Input },],\n        };\n        return NgIf;\n    }());\n\n    var SwitchView = (function () {\n        function SwitchView(_viewContainerRef, _templateRef) {\n            this._viewContainerRef = _viewContainerRef;\n            this._templateRef = _templateRef;\n            this._created = false;\n        }\n        SwitchView.prototype.create = function () {\n            this._created = true;\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\n        };\n        SwitchView.prototype.destroy = function () {\n            this._created = false;\n            this._viewContainerRef.clear();\n        };\n        SwitchView.prototype.enforceState = function (created) {\n            if (created && !this._created) {\n                this.create();\n            }\n            else if (!created && this._created) {\n                this.destroy();\n            }\n        };\n        return SwitchView;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     *     <container-element [ngSwitch]=\"switch_expression\">\n     *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n     *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n     *       <ng-container *ngSwitchCase=\"match_expression_3\">\n     *         <!-- use a ng-container to group multiple root nodes -->\n     *         <inner-element></inner-element>\n     *         <inner-other-element></inner-other-element>\n     *       </ng-container>\n     *       <some-element *ngSwitchDefault>...</some-element>\n     *     </container-element>\n     * ```\n     * @description\n     *\n     * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n     * switch expression.\n     *\n     * In other words:\n     * - you define a container element (where you place the directive with a switch expression on the\n     * `[ngSwitch]=\"...\"` attribute)\n     * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n     * root elements.\n     *\n     * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n     * be preserved at the location.\n     *\n     * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n     * expression is evaluated.\n     * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n     * stamped out.\n     *\n     * @stable\n     */\n    var NgSwitch = (function () {\n        function NgSwitch() {\n            this._defaultUsed = false;\n            this._caseCount = 0;\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n            set: function (newValue) {\n                this._ngSwitch = newValue;\n                if (this._caseCount === 0) {\n                    this._updateDefaultCases(true);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n        /** @internal */\n        NgSwitch.prototype._addDefault = function (view) {\n            if (!this._defaultViews) {\n                this._defaultViews = [];\n            }\n            this._defaultViews.push(view);\n        };\n        /** @internal */\n        NgSwitch.prototype._matchCase = function (value) {\n            var matched = value == this._ngSwitch;\n            this._lastCasesMatched = this._lastCasesMatched || matched;\n            this._lastCaseCheckIndex++;\n            if (this._lastCaseCheckIndex === this._caseCount) {\n                this._updateDefaultCases(!this._lastCasesMatched);\n                this._lastCaseCheckIndex = 0;\n                this._lastCasesMatched = false;\n            }\n            return matched;\n        };\n        NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n            if (this._defaultViews && useDefault !== this._defaultUsed) {\n                this._defaultUsed = useDefault;\n                for (var i = 0; i < this._defaultViews.length; i++) {\n                    var defaultView = this._defaultViews[i];\n                    defaultView.enforceState(useDefault);\n                }\n            }\n        };\n        NgSwitch.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitch]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitch.ctorParameters = [];\n        NgSwitch.propDecorators = {\n            'ngSwitch': [{ type: _angular_core.Input },],\n        };\n        return NgSwitch;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgSwitch} when the\n     *             given expression evaluate to respectively the same/different value as the switch\n     *             expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     * </container-element>\n     *```\n     * @description\n     *\n     * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n     * expression.\n     *\n     * If multiple match expressions match the switch expression value, all of them are displayed.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchCase = (function () {\n        function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n            this.ngSwitch = ngSwitch;\n            ngSwitch._addCase();\n            this._view = new SwitchView(viewContainer, templateRef);\n        }\n        NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n        NgSwitchCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchCase]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchCase.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        NgSwitchCase.propDecorators = {\n            'ngSwitchCase': [{ type: _angular_core.Input },],\n        };\n        return NgSwitchCase;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a view that is added to the parent {@link NgSwitch} when no case expressions\n     * match the\n     *             switch expression.\n     *\n     * @howToUse\n     * ```\n     * <container-element [ngSwitch]=\"switch_expression\">\n     *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n     *   <some-other-element *ngSwitchDefault>...</some-other-element>\n     * </container-element>\n     * ```\n     *\n     * @description\n     *\n     * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n     * expression.\n     *\n     * See {@link NgSwitch} for more details and example.\n     *\n     * @stable\n     */\n    var NgSwitchDefault = (function () {\n        function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n            ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n        }\n        NgSwitchDefault.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngSwitchDefault]' },] },\n        ];\n        /** @nocollapse */\n        NgSwitchDefault.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n            { type: _angular_core.TemplateRef, },\n            { type: NgSwitch, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgSwitchDefault;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">there is nothing</ng-container>\n     *   <ng-container *ngPluralCase=\"'=1'\">there is one</ng-container>\n     *   <ng-container *ngPluralCase=\"'few'\">there are a few</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">there are exactly #</ng-container>\n     * </some-element>\n     * ```\n     *\n     * @description\n     *\n     * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n     * that match the switch expression's pluralization category.\n     *\n     * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n     * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n     * expression:\n     * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n     *   matches the switch expression exactly,\n     * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n     *   value matches aren't found and the value maps to its category for the defined locale.\n     *\n     * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n     *\n     * @experimental\n     */\n    var NgPlural = (function () {\n        function NgPlural(_localization) {\n            this._localization = _localization;\n            this._caseViews = {};\n        }\n        Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n            set: function (value) {\n                this._switchValue = value;\n                this._updateView();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n        NgPlural.prototype._updateView = function () {\n            this._clearViews();\n            var cases = Object.keys(this._caseViews);\n            var key = getPluralCategory(this._switchValue, cases, this._localization);\n            this._activateView(this._caseViews[key]);\n        };\n        NgPlural.prototype._clearViews = function () {\n            if (this._activeView)\n                this._activeView.destroy();\n        };\n        NgPlural.prototype._activateView = function (view) {\n            if (view) {\n                this._activeView = view;\n                this._activeView.create();\n            }\n        };\n        NgPlural.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPlural]' },] },\n        ];\n        /** @nocollapse */\n        NgPlural.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        NgPlural.propDecorators = {\n            'ngPlural': [{ type: _angular_core.Input },],\n        };\n        return NgPlural;\n    }());\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Creates a view that will be added/removed from the parent {@link NgPlural} when the\n     *             given expression matches the plural expression according to CLDR rules.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngPlural]=\"value\">\n     *   <ng-container *ngPluralCase=\"'=0'\">...</ng-container>\n     *   <ng-container *ngPluralCase=\"'other'\">...</ng-container>\n     * </some-element>\n     *```\n     *\n     * See {@link NgPlural} for more details and example.\n     *\n     * @experimental\n     */\n    var NgPluralCase = (function () {\n        function NgPluralCase(value, template, viewContainer, ngPlural) {\n            this.value = value;\n            ngPlural.addCase(value, new SwitchView(viewContainer, template));\n        }\n        NgPluralCase.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngPluralCase]' },] },\n        ];\n        /** @nocollapse */\n        NgPluralCase.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['ngPluralCase',] },] },\n            { type: _angular_core.TemplateRef, },\n            { type: _angular_core.ViewContainerRef, },\n            { type: NgPlural, decorators: [{ type: _angular_core.Host },] },\n        ];\n        return NgPluralCase;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Update an HTML element styles.\n     *\n     * @howToUse\n     * ```\n     * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n     *\n     * <some-element [ngStyle]=\"objExp\">...</some-element>\n     * ```\n     *\n     * @description\n     *\n     * The styles are updated according to the value of the expression evaluation:\n     * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n     * - values are the values assigned to those properties (expressed in the given unit).\n     *\n     * @stable\n     */\n    var NgStyle = (function () {\n        function NgStyle(_differs, _ngEl, _renderer) {\n            this._differs = _differs;\n            this._ngEl = _ngEl;\n            this._renderer = _renderer;\n        }\n        Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n            set: function (v) {\n                this._ngStyle = v;\n                if (!this._differ && v) {\n                    this._differ = this._differs.find(v).create(null);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgStyle.prototype.ngDoCheck = function () {\n            if (this._differ) {\n                var changes = this._differ.diff(this._ngStyle);\n                if (changes) {\n                    this._applyChanges(changes);\n                }\n            }\n        };\n        NgStyle.prototype._applyChanges = function (changes) {\n            var _this = this;\n            changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n            changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n            changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        };\n        NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n            var _a = nameAndUnit.split('.'), name = _a[0], unit = _a[1];\n            value = value && unit ? \"\" + value + unit : value;\n            this._renderer.setElementStyle(this._ngEl.nativeElement, name, value);\n        };\n        NgStyle.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngStyle]' },] },\n        ];\n        /** @nocollapse */\n        NgStyle.ctorParameters = [\n            { type: _angular_core.KeyValueDiffers, },\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n        ];\n        NgStyle.propDecorators = {\n            'ngStyle': [{ type: _angular_core.Input },],\n        };\n        return NgStyle;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     *\n     * @whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n     *\n     * @howToUse\n     * ```\n     * <template [ngTemplateOutlet]=\"templateRefExpression\"\n     *           [ngOutletContext]=\"objectExpression\">\n     * </template>\n     * ```\n     *\n     * @description\n     *\n     * You can attach a context object to the `EmbeddedViewRef` by setting `[ngOutletContext]`.\n     * `[ngOutletContext]` should be an object, the object's keys will be the local template variables\n     * available within the `TemplateRef`.\n     *\n     * Note: using the key `$implicit` in the context object will set it's value as default.\n     *\n     * @experimental\n     */\n    var NgTemplateOutlet = (function () {\n        function NgTemplateOutlet(_viewContainerRef) {\n            this._viewContainerRef = _viewContainerRef;\n        }\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngOutletContext\", {\n            set: function (context) { this._context = context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgTemplateOutlet.prototype, \"ngTemplateOutlet\", {\n            set: function (templateRef) { this._templateRef = templateRef; },\n            enumerable: true,\n            configurable: true\n        });\n        NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this._templateRef) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, this._context);\n            }\n        };\n        NgTemplateOutlet.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngTemplateOutlet]' },] },\n        ];\n        /** @nocollapse */\n        NgTemplateOutlet.ctorParameters = [\n            { type: _angular_core.ViewContainerRef, },\n        ];\n        NgTemplateOutlet.propDecorators = {\n            'ngOutletContext': [{ type: _angular_core.Input },],\n            'ngTemplateOutlet': [{ type: _angular_core.Input },],\n        };\n        return NgTemplateOutlet;\n    }());\n\n    /**\n     * A collection of Angular directives that are likely to be used in each and every Angular\n     * application.\n     */\n    var COMMON_DIRECTIVES = [\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        NgStyle,\n        NgSwitch,\n        NgSwitchCase,\n        NgSwitchDefault,\n        NgPlural,\n        NgPluralCase,\n    ];\n\n    var isPromise = _angular_core.__core_private__.isPromise;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends$4(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends$4(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var InvalidPipeArgumentError = (function (_super) {\n        __extends$3(InvalidPipeArgumentError, _super);\n        function InvalidPipeArgumentError(type, value) {\n            _super.call(this, \"Invalid argument '\" + value + \"' for pipe '\" + stringify(type) + \"'\");\n        }\n        return InvalidPipeArgumentError;\n    }(BaseError));\n\n    var ObservableStrategy = (function () {\n        function ObservableStrategy() {\n        }\n        ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n        };\n        ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n        ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n        return ObservableStrategy;\n    }());\n    var PromiseStrategy = (function () {\n        function PromiseStrategy() {\n        }\n        PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n            return async.then(updateLatestValue, function (e) { throw e; });\n        };\n        PromiseStrategy.prototype.dispose = function (subscription) { };\n        PromiseStrategy.prototype.onDestroy = function (subscription) { };\n        return PromiseStrategy;\n    }());\n    var _promiseStrategy = new PromiseStrategy();\n    var _observableStrategy = new ObservableStrategy();\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Unwraps a value from an asynchronous primitive.\n     * @howToUse `observable_or_promise_expression | async`\n     * @description\n     * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n     * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n     * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n     * potential memory leaks.\n     *\n     *\n     * ## Examples\n     *\n     * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n     * promise.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n     *\n     * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n     * to the view. The Observable continuesly updates the view with the current time.\n     *\n     * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n     *\n     * @stable\n     */\n    var AsyncPipe = (function () {\n        function AsyncPipe(_ref) {\n            this._ref = _ref;\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n            this._strategy = null;\n        }\n        AsyncPipe.prototype.ngOnDestroy = function () {\n            if (this._subscription) {\n                this._dispose();\n            }\n        };\n        AsyncPipe.prototype.transform = function (obj) {\n            if (!this._obj) {\n                if (obj) {\n                    this._subscribe(obj);\n                }\n                this._latestReturnedValue = this._latestValue;\n                return this._latestValue;\n            }\n            if (obj !== this._obj) {\n                this._dispose();\n                return this.transform(obj);\n            }\n            if (this._latestValue === this._latestReturnedValue) {\n                return this._latestReturnedValue;\n            }\n            this._latestReturnedValue = this._latestValue;\n            return _angular_core.WrappedValue.wrap(this._latestValue);\n        };\n        AsyncPipe.prototype._subscribe = function (obj) {\n            var _this = this;\n            this._obj = obj;\n            this._strategy = this._selectStrategy(obj);\n            this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n        };\n        AsyncPipe.prototype._selectStrategy = function (obj) {\n            if (isPromise(obj)) {\n                return _promiseStrategy;\n            }\n            if (obj.subscribe) {\n                return _observableStrategy;\n            }\n            throw new InvalidPipeArgumentError(AsyncPipe, obj);\n        };\n        AsyncPipe.prototype._dispose = function () {\n            this._strategy.dispose(this._subscription);\n            this._latestValue = null;\n            this._latestReturnedValue = null;\n            this._subscription = null;\n            this._obj = null;\n        };\n        AsyncPipe.prototype._updateLatestValue = function (async, value) {\n            if (async === this._obj) {\n                this._latestValue = value;\n                this._ref.markForCheck();\n            }\n        };\n        AsyncPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'async', pure: false },] },\n        ];\n        /** @nocollapse */\n        AsyncPipe.ctorParameters = [\n            { type: _angular_core.ChangeDetectorRef, },\n        ];\n        return AsyncPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NumberFormatStyle;\n    (function (NumberFormatStyle) {\n        NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n        NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n        NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    })(NumberFormatStyle || (NumberFormatStyle = {}));\n    var NumberFormatter = (function () {\n        function NumberFormatter() {\n        }\n        NumberFormatter.format = function (num, locale, style, _a) {\n            var _b = _a === void 0 ? {} : _a, minimumIntegerDigits = _b.minimumIntegerDigits, minimumFractionDigits = _b.minimumFractionDigits, maximumFractionDigits = _b.maximumFractionDigits, currency = _b.currency, _c = _b.currencyAsSymbol, currencyAsSymbol = _c === void 0 ? false : _c;\n            var options = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                minimumFractionDigits: minimumFractionDigits,\n                maximumFractionDigits: maximumFractionDigits,\n                style: NumberFormatStyle[style].toLowerCase()\n            };\n            if (style == NumberFormatStyle.Currency) {\n                options.currency = currency;\n                options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n            }\n            return new Intl.NumberFormat(locale, options).format(num);\n        };\n        return NumberFormatter;\n    }());\n    var DATE_FORMATS_SPLIT = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n    var PATTERN_ALIASES = {\n        yMMMdjms: datePartGetterFactory(combine([\n            digitCondition('year', 1),\n            nameCondition('month', 3),\n            digitCondition('day', 1),\n            digitCondition('hour', 1),\n            digitCondition('minute', 1),\n            digitCondition('second', 1),\n        ])),\n        yMdjm: datePartGetterFactory(combine([\n            digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n            digitCondition('hour', 1), digitCondition('minute', 1)\n        ])),\n        yMMMMEEEEd: datePartGetterFactory(combine([\n            digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n            digitCondition('day', 1)\n        ])),\n        yMMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n        yMMMd: datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n        yMd: datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n        jms: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n        jm: datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n    };\n    var DATE_FORMATS = {\n        yyyy: datePartGetterFactory(digitCondition('year', 4)),\n        yy: datePartGetterFactory(digitCondition('year', 2)),\n        y: datePartGetterFactory(digitCondition('year', 1)),\n        MMMM: datePartGetterFactory(nameCondition('month', 4)),\n        MMM: datePartGetterFactory(nameCondition('month', 3)),\n        MM: datePartGetterFactory(digitCondition('month', 2)),\n        M: datePartGetterFactory(digitCondition('month', 1)),\n        LLLL: datePartGetterFactory(nameCondition('month', 4)),\n        L: datePartGetterFactory(nameCondition('month', 1)),\n        dd: datePartGetterFactory(digitCondition('day', 2)),\n        d: datePartGetterFactory(digitCondition('day', 1)),\n        HH: digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n        H: hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n        hh: digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n        h: hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        jj: datePartGetterFactory(digitCondition('hour', 2)),\n        j: datePartGetterFactory(digitCondition('hour', 1)),\n        mm: digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n        m: datePartGetterFactory(digitCondition('minute', 1)),\n        ss: digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n        s: datePartGetterFactory(digitCondition('second', 1)),\n        // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n        // we can be just safely rely on using `sss` since we currently don't support single or two digit\n        // fractions\n        sss: datePartGetterFactory(digitCondition('second', 3)),\n        EEEE: datePartGetterFactory(nameCondition('weekday', 4)),\n        EEE: datePartGetterFactory(nameCondition('weekday', 3)),\n        EE: datePartGetterFactory(nameCondition('weekday', 2)),\n        E: datePartGetterFactory(nameCondition('weekday', 1)),\n        a: hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n        Z: timeZoneGetter('short'),\n        z: timeZoneGetter('long'),\n        ww: datePartGetterFactory({}),\n        // first Thursday of the year. not support ?\n        w: datePartGetterFactory({}),\n        // of the year not support ?\n        G: datePartGetterFactory(nameCondition('era', 1)),\n        GG: datePartGetterFactory(nameCondition('era', 2)),\n        GGG: datePartGetterFactory(nameCondition('era', 3)),\n        GGGG: datePartGetterFactory(nameCondition('era', 4))\n    };\n    function digitModifier(inner) {\n        return function (date, locale) {\n            var result = inner(date, locale);\n            return result.length == 1 ? '0' + result : result;\n        };\n    }\n    function hourClockExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n    }\n    function hourExtractor(inner) {\n        return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n    }\n    function intlDateFormat(date, locale, options) {\n        return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n    }\n    function timeZoneGetter(timezone) {\n        // To workaround `Intl` API restriction for single timezone let format with 24 hours\n        var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n        return function (date, locale) {\n            var result = intlDateFormat(date, locale, options);\n            // Then extract first 3 letters that related to hours\n            return result ? result.substring(3) : '';\n        };\n    }\n    function hour12Modify(options, value) {\n        options.hour12 = value;\n        return options;\n    }\n    function digitCondition(prop, len) {\n        var result = {};\n        result[prop] = len === 2 ? '2-digit' : 'numeric';\n        return result;\n    }\n    function nameCondition(prop, len) {\n        var result = {};\n        if (len < 4) {\n            result[prop] = len > 1 ? 'short' : 'narrow';\n        }\n        else {\n            result[prop] = 'long';\n        }\n        return result;\n    }\n    function combine(options) {\n        return (_a = Object).assign.apply(_a, [{}].concat(options));\n        var _a;\n    }\n    function datePartGetterFactory(ret) {\n        return function (date, locale) { return intlDateFormat(date, locale, ret); };\n    }\n    var DATE_FORMATTER_CACHE = new Map();\n    function dateFormatter(format, date, locale) {\n        var fn = PATTERN_ALIASES[format];\n        if (fn)\n            return fn(date, locale);\n        var parts = DATE_FORMATTER_CACHE.get(format);\n        if (!parts) {\n            parts = [];\n            var match = void 0;\n            DATE_FORMATS_SPLIT.exec(format);\n            while (format) {\n                match = DATE_FORMATS_SPLIT.exec(format);\n                if (match) {\n                    parts = parts.concat(match.slice(1));\n                    format = parts.pop();\n                }\n                else {\n                    parts.push(format);\n                    format = null;\n                }\n            }\n            DATE_FORMATTER_CACHE.set(format, parts);\n        }\n        return parts.reduce(function (text, part) {\n            var fn = DATE_FORMATS[part];\n            return text + (fn ? fn(date, locale) : partToTime(part));\n        }, '');\n    }\n    function partToTime(part) {\n        return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    }\n    var DateFormatter = (function () {\n        function DateFormatter() {\n        }\n        DateFormatter.format = function (date, locale, pattern) {\n            return dateFormatter(pattern, date, locale);\n        };\n        return DateFormatter;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a date according to locale rules.\n     * @howToUse `date_expression | date[:format]`\n     * @description\n     *\n     * Where:\n     * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n     * (https://www.w3.org/TR/NOTE-datetime).\n     * - `format` indicates which date/time components to include. The format can be predifined as\n     *   shown below or custom as shown in the table.\n     *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n     *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n     *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n     *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n     *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n     *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n     *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n     *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n     *\n     *\n     *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n     *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n     *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n     *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n     *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n     *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n     *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n     *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n     *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n     *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n     *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n     *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n     *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n     *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n     *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n     *\n     * In javascript, only the components specified will be respected (not the ordering,\n     * punctuations, ...) and details of the formatting will be dependent on the locale.\n     *\n     * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n     *\n     * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n     * applied and the formatted text will have the same day, month and year of the expression.\n     *\n     * WARNINGS:\n     * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n     *   Instead users should treat the date as an immutable object and change the reference when the\n     *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n     *   which would be an expensive operation).\n     * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n     *   browsers.\n     *\n     * ### Examples\n     *\n     * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n     * in the _local_ time and locale is 'en-US':\n     *\n     * ```\n     *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n     *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n     *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n     *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n     * ```\n     *\n     * {@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n     *\n     * @stable\n     */\n    var DatePipe = (function () {\n        function DatePipe(_locale) {\n            this._locale = _locale;\n        }\n        DatePipe.prototype.transform = function (value, pattern) {\n            if (pattern === void 0) { pattern = 'mediumDate'; }\n            var date;\n            if (isBlank$1(value))\n                return null;\n            if (typeof value === 'string') {\n                value = value.trim();\n            }\n            if (isDate(value)) {\n                date = value;\n            }\n            else if (NumberWrapper.isNumeric(value)) {\n                date = new Date(parseFloat(value));\n            }\n            else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n                /**\n                * For ISO Strings without time the day, month and year must be extracted from the ISO String\n                * before Date creation to avoid time offset and errors in the new Date.\n                * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n                * date, some browsers (e.g. IE 9) will throw an invalid Date error\n                * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n                * is applied\n                * Note: ISO months are 0 for January, 1 for February, ...\n                */\n                var _a = value.split('-').map(function (val) { return parseInt(val, 10); }), y = _a[0], m = _a[1], d = _a[2];\n                date = new Date(y, m - 1, d);\n            }\n            else {\n                date = new Date(value);\n            }\n            if (!isDate(date)) {\n                throw new InvalidPipeArgumentError(DatePipe, value);\n            }\n            return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n        };\n        /** @internal */\n        DatePipe._ALIASES = {\n            'medium': 'yMMMdjms',\n            'short': 'yMdjm',\n            'fullDate': 'yMMMMEEEEd',\n            'longDate': 'yMMMMd',\n            'mediumDate': 'yMMMd',\n            'shortDate': 'yMd',\n            'mediumTime': 'jms',\n            'shortTime': 'jm'\n        };\n        DatePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'date', pure: true },] },\n        ];\n        /** @nocollapse */\n        DatePipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DatePipe;\n    }());\n    function isBlank$1(obj) {\n        return obj == null || obj === '';\n    }\n\n    var _INTERPOLATION_REGEXP = /#/g;\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n     * @howToUse `expression | i18nPlural:mapping`\n     * @description\n     *\n     *  Where:\n     *  - `expression` is a number.\n     *  - `mapping` is an object that mimics the ICU format, see\n     *    http://userguide.icu-project.org/formatparse/messages\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n     *\n     * @experimental\n     */\n    var I18nPluralPipe = (function () {\n        function I18nPluralPipe(_localization) {\n            this._localization = _localization;\n        }\n        I18nPluralPipe.prototype.transform = function (value, pluralMap) {\n            if (isBlank(value))\n                return '';\n            if (typeof pluralMap !== 'object' || pluralMap === null) {\n                throw new InvalidPipeArgumentError(I18nPluralPipe, pluralMap);\n            }\n            var key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n            return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n        };\n        I18nPluralPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nPlural', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nPluralPipe.ctorParameters = [\n            { type: NgLocalization, },\n        ];\n        return I18nPluralPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Generic selector that displays the string that matches the current value.\n     * @howToUse `expression | i18nSelect:mapping`\n     * @description\n     *\n     *  Where `mapping` is an object that indicates the text that should be displayed\n     *  for different values of the provided `expression`.\n     *  If none of the keys of the mapping match the value of the `expression`, then the content\n     *  of the `other` key is returned when present, otherwise an empty string is returned.\n     *\n     *  ## Example\n     *\n     * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n     *\n     *  @experimental\n     */\n    var I18nSelectPipe = (function () {\n        function I18nSelectPipe() {\n        }\n        I18nSelectPipe.prototype.transform = function (value, mapping) {\n            if (value == null)\n                return '';\n            if (typeof mapping !== 'object' || typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(I18nSelectPipe, mapping);\n            }\n            if (mapping.hasOwnProperty(value)) {\n                return mapping[value];\n            }\n            if (mapping.hasOwnProperty('other')) {\n                return mapping['other'];\n            }\n            return '';\n        };\n        I18nSelectPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'i18nSelect', pure: true },] },\n        ];\n        /** @nocollapse */\n        I18nSelectPipe.ctorParameters = [];\n        return I18nSelectPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Converts value into JSON string.\n     * @howToUse `expression | json`\n     * @description\n     *\n     * Converts value into string using `JSON.stringify`. Useful for debugging.\n     *\n     * ### Example\n     * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n     *\n     * @stable\n     */\n    var JsonPipe = (function () {\n        function JsonPipe() {\n        }\n        JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n        JsonPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'json', pure: false },] },\n        ];\n        /** @nocollapse */\n        JsonPipe.ctorParameters = [];\n        return JsonPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to lowercase.\n     * @howToUse `expression | lowercase`\n     * @description\n     *\n     * Converts value into a lowercase string using `String.prototype.toLowerCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var LowerCasePipe = (function () {\n        function LowerCasePipe() {\n        }\n        LowerCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(LowerCasePipe, value);\n            }\n            return value.toLowerCase();\n        };\n        LowerCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'lowercase' },] },\n        ];\n        /** @nocollapse */\n        LowerCasePipe.ctorParameters = [];\n        return LowerCasePipe;\n    }());\n\n    var _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n    function formatNumber(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n        if (currency === void 0) { currency = null; }\n        if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n        if (isBlank(value))\n            return null;\n        // Convert strings to numbers\n        value = typeof value === 'string' && NumberWrapper.isNumeric(value) ? +value : value;\n        if (typeof value !== 'number') {\n            throw new InvalidPipeArgumentError(pipe, value);\n        }\n        var minInt;\n        var minFraction;\n        var maxFraction;\n        if (style !== NumberFormatStyle.Currency) {\n            // rely on Intl default for currency\n            minInt = 1;\n            minFraction = 0;\n            maxFraction = 3;\n        }\n        if (digits) {\n            var parts = digits.match(_NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digits + \" is not a valid digit info for number pipes\");\n            }\n            if (isPresent(parts[1])) {\n                minInt = NumberWrapper.parseIntAutoRadix(parts[1]);\n            }\n            if (isPresent(parts[3])) {\n                minFraction = NumberWrapper.parseIntAutoRadix(parts[3]);\n            }\n            if (isPresent(parts[5])) {\n                maxFraction = NumberWrapper.parseIntAutoRadix(parts[5]);\n            }\n        }\n        return NumberFormatter.format(value, locale, style, {\n            minimumIntegerDigits: minInt,\n            minimumFractionDigits: minFraction,\n            maximumFractionDigits: maxFraction,\n            currency: currency,\n            currencyAsSymbol: currencyAsSymbol,\n        });\n    }\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number according to locale rules.\n     * @howToUse `number_expression | number[:digitInfo]`\n     *\n     * Formats a number as text. Group sizing and separator and other locale-specific\n     * configurations are based on the active locale.\n     *\n     * where `expression` is a number:\n     *  - `digitInfo` is a `string` which has a following format: <br>\n     *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n     *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n     *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n     *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n     *\n     * For more information on the acceptable range for each of these numbers and other\n     * details see your native internationalization library.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n     *\n     * @stable\n     */\n    var DecimalPipe = (function () {\n        function DecimalPipe(_locale) {\n            this._locale = _locale;\n        }\n        DecimalPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n        };\n        DecimalPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'number' },] },\n        ];\n        /** @nocollapse */\n        DecimalPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return DecimalPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as a percentage according to locale rules.\n     * @howToUse `number_expression | percent[:digitInfo]`\n     *\n     * @description\n     *\n     * Formats a number as percentage.\n     *\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n     *\n     * @stable\n     */\n    var PercentPipe = (function () {\n        function PercentPipe(_locale) {\n            this._locale = _locale;\n        }\n        PercentPipe.prototype.transform = function (value, digits) {\n            if (digits === void 0) { digits = null; }\n            return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n        };\n        PercentPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'percent' },] },\n        ];\n        /** @nocollapse */\n        PercentPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return PercentPipe;\n    }());\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Formats a number as currency using locale rules.\n     * @howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n     * @description\n     *\n     * Use `currency` to format a number as currency.\n     *\n     * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n     *    as `USD` for the US dollar and `EUR` for the euro.\n     * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n     *   - `true`: use symbol (e.g. `$`).\n     *   - `false`(default): use code (e.g. `USD`).\n     * - `digitInfo` See {@link DecimalPipe} for detailed description.\n     *\n     * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n     * and may require a polyfill. See {@linkDocs guide/browser-support} for details.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n     *\n     * @stable\n     */\n    var CurrencyPipe = (function () {\n        function CurrencyPipe(_locale) {\n            this._locale = _locale;\n        }\n        CurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n            if (currencyCode === void 0) { currencyCode = 'USD'; }\n            if (symbolDisplay === void 0) { symbolDisplay = false; }\n            if (digits === void 0) { digits = null; }\n            return formatNumber(CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n        };\n        CurrencyPipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'currency' },] },\n        ];\n        /** @nocollapse */\n        CurrencyPipe.ctorParameters = [\n            { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.LOCALE_ID,] },] },\n        ];\n        return CurrencyPipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n     * @howToUse `array_or_string_expression | slice:start[:end]`\n     * @description\n     *\n     * Where the input expression is a `List` or `String`, and:\n     * - `start`: The starting index of the subset to return.\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * - `end`: The ending index of the subset to return.\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     *\n     * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n     * and `String.prototype.slice()`.\n     *\n     * When operating on a [List], the returned list is always a copy even when all\n     * the elements are being returned.\n     *\n     * When operating on a blank value, the pipe returns the blank value.\n     *\n     * ## List Example\n     *\n     * This `ngFor` example:\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n     *\n     * produces the following:\n     *\n     *     <li>b</li>\n     *     <li>c</li>\n     *\n     * ## String Examples\n     *\n     * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n     *\n     * @stable\n     */\n    var SlicePipe = (function () {\n        function SlicePipe() {\n        }\n        SlicePipe.prototype.transform = function (value, start, end) {\n            if (isBlank(value))\n                return value;\n            if (!this.supports(value)) {\n                throw new InvalidPipeArgumentError(SlicePipe, value);\n            }\n            return value.slice(start, end);\n        };\n        SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n        SlicePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'slice', pure: false },] },\n        ];\n        /** @nocollapse */\n        SlicePipe.ctorParameters = [];\n        return SlicePipe;\n    }());\n\n    /**\n     * @ngModule CommonModule\n     * @whatItDoes Transforms string to uppercase.\n     * @howToUse `expression | uppercase`\n     * @description\n     *\n     * Converts value into an uppercase string using `String.prototype.toUpperCase()`.\n     *\n     * ### Example\n     *\n     * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n     *\n     * @stable\n     */\n    var UpperCasePipe = (function () {\n        function UpperCasePipe() {\n        }\n        UpperCasePipe.prototype.transform = function (value) {\n            if (isBlank(value))\n                return value;\n            if (typeof value !== 'string') {\n                throw new InvalidPipeArgumentError(UpperCasePipe, value);\n            }\n            return value.toUpperCase();\n        };\n        UpperCasePipe.decorators = [\n            { type: _angular_core.Pipe, args: [{ name: 'uppercase' },] },\n        ];\n        /** @nocollapse */\n        UpperCasePipe.ctorParameters = [];\n        return UpperCasePipe;\n    }());\n\n    /**\n     * A collection of Angular pipes that are likely to be used in each and every application.\n     */\n    var COMMON_PIPES = [\n        AsyncPipe,\n        UpperCasePipe,\n        LowerCasePipe,\n        JsonPipe,\n        SlicePipe,\n        DecimalPipe,\n        PercentPipe,\n        CurrencyPipe,\n        DatePipe,\n        I18nPluralPipe,\n        I18nSelectPipe,\n    ];\n\n    // Note: This does not contain the location providers,\n    // as they need some platform specific implementations to work.\n    /**\n     * The module that includes all the basic Angular directives like {@link NgIf}, {@link NgFor}, ...\n     *\n     * @stable\n     */\n    var CommonModule = (function () {\n        function CommonModule() {\n        }\n        CommonModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                        providers: [\n                            { provide: NgLocalization, useClass: NgLocaleLocalization },\n                        ],\n                    },] },\n        ];\n        /** @nocollapse */\n        CommonModule.ctorParameters = [];\n        return CommonModule;\n    }());\n\n    exports.NgLocalization = NgLocalization;\n    exports.CommonModule = CommonModule;\n    exports.NgClass = NgClass;\n    exports.NgFor = NgFor;\n    exports.NgIf = NgIf;\n    exports.NgPlural = NgPlural;\n    exports.NgPluralCase = NgPluralCase;\n    exports.NgStyle = NgStyle;\n    exports.NgSwitch = NgSwitch;\n    exports.NgSwitchCase = NgSwitchCase;\n    exports.NgSwitchDefault = NgSwitchDefault;\n    exports.NgTemplateOutlet = NgTemplateOutlet;\n    exports.AsyncPipe = AsyncPipe;\n    exports.DatePipe = DatePipe;\n    exports.I18nPluralPipe = I18nPluralPipe;\n    exports.I18nSelectPipe = I18nSelectPipe;\n    exports.JsonPipe = JsonPipe;\n    exports.LowerCasePipe = LowerCasePipe;\n    exports.CurrencyPipe = CurrencyPipe;\n    exports.DecimalPipe = DecimalPipe;\n    exports.PercentPipe = PercentPipe;\n    exports.SlicePipe = SlicePipe;\n    exports.UpperCasePipe = UpperCasePipe;\n    exports.PlatformLocation = PlatformLocation;\n    exports.LocationStrategy = LocationStrategy;\n    exports.APP_BASE_HREF = APP_BASE_HREF;\n    exports.HashLocationStrategy = HashLocationStrategy;\n    exports.PathLocationStrategy = PathLocationStrategy;\n    exports.Location = Location;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/common/bundles/common.umd.js\n// module id = 1\n// module chunks = 0 1 4","/**\n * @license Angular v2.2.0\n * (c) 2010-2016 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Subject'), require('rxjs/Observable')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'rxjs/Subject', 'rxjs/Observable'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = global.ng.core || {}),global.Rx,global.Rx));\n}(this, function (exports,rxjs_Subject,rxjs_Observable) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var globalScope;\n    if (typeof window === 'undefined') {\n        if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n            globalScope = self;\n        }\n        else {\n            globalScope = global;\n        }\n    }\n    else {\n        globalScope = window;\n    }\n    function scheduleMicroTask(fn) {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n    // Need to declare a new variable for global here since TypeScript\n    // exports the original value of the symbol.\n    var global$1 = globalScope;\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n    // TODO: remove calls to assert in production environment\n    // Note: Can't just export this and import in in other files\n    // as `assert` is a reserved keyword in Dart\n    global$1.assert = function assert(condition) {\n        // TODO: to be fixed properly via #2830, noop for now\n    };\n    function isPresent(obj) {\n        return obj != null;\n    }\n    function isBlank(obj) {\n        return obj == null;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return token.overriddenName;\n        }\n        if (token.name) {\n            return token.name;\n        }\n        var res = token.toString();\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    function print(obj) {\n        console.log(obj);\n    }\n    function warn(obj) {\n        console.warn(obj);\n    }\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            if (globalScope.Symbol && Symbol.iterator) {\n                _symbolIterator = Symbol.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    var _nextClassId = 0;\n    var Reflect = global$1.Reflect;\n    function extractAnnotation(annotation) {\n        if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n            // it is a decorator, extract annotation\n            annotation = annotation.annotation;\n        }\n        return annotation;\n    }\n    function applyParams(fnOrArray, key) {\n        if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n            fnOrArray === Number || fnOrArray === Array) {\n            throw new Error(\"Can not use native \" + stringify(fnOrArray) + \" as constructor\");\n        }\n        if (typeof fnOrArray === 'function') {\n            return fnOrArray;\n        }\n        if (Array.isArray(fnOrArray)) {\n            var annotations = fnOrArray;\n            var annoLength = annotations.length - 1;\n            var fn = fnOrArray[annoLength];\n            if (typeof fn !== 'function') {\n                throw new Error(\"Last position of Class method array must be Function in key \" + key + \" was '\" + stringify(fn) + \"'\");\n            }\n            if (annoLength != fn.length) {\n                throw new Error(\"Number of annotations (\" + annoLength + \") does not match number of arguments (\" + fn.length + \") in the function: \" + stringify(fn));\n            }\n            var paramsAnnotations = [];\n            for (var i = 0, ii = annotations.length - 1; i < ii; i++) {\n                var paramAnnotations = [];\n                paramsAnnotations.push(paramAnnotations);\n                var annotation = annotations[i];\n                if (Array.isArray(annotation)) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        paramAnnotations.push(extractAnnotation(annotation[j]));\n                    }\n                }\n                else if (typeof annotation === 'function') {\n                    paramAnnotations.push(extractAnnotation(annotation));\n                }\n                else {\n                    paramAnnotations.push(annotation);\n                }\n            }\n            Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n            return fn;\n        }\n        throw new Error(\"Only Function or Array is supported in Class definition for key '\" + key + \"' is '\" + stringify(fnOrArray) + \"'\");\n    }\n    /**\n     * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n     *\n     * ## Basic Example\n     *\n     * ```\n     * var Greeter = ng.Class({\n     *   constructor: function(name) {\n     *     this.name = name;\n     *   },\n     *\n     *   greet: function() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class Greeter {\n     *   constructor(name) {\n     *     this.name = name;\n     *   }\n     *\n     *   greet() {\n     *     alert('Hello ' + this.name + '!');\n     *   }\n     * }\n     * ```\n     *\n     * or equivalent to ES5:\n     *\n     * ```\n     * var Greeter = function (name) {\n     *   this.name = name;\n     * }\n     *\n     * Greeter.prototype.greet = function () {\n     *   alert('Hello ' + this.name + '!');\n     * }\n     * ```\n     *\n     * ### Example with parameter annotations\n     *\n     * ```\n     * var MyService = ng.Class({\n     *   constructor: [String, [new Optional(), Service], function(name, myService) {\n     *     ...\n     *   }]\n     * });\n     * ```\n     *\n     * is equivalent to ES6:\n     *\n     * ```\n     * class MyService {\n     *   constructor(name: string, @Optional() myService: Service) {\n     *     ...\n     *   }\n     * }\n     * ```\n     *\n     * ### Example with inheritance\n     *\n     * ```\n     * var Shape = ng.Class({\n     *   constructor: (color) {\n     *     this.color = color;\n     *   }\n     * });\n     *\n     * var Square = ng.Class({\n     *   extends: Shape,\n     *   constructor: function(color, size) {\n     *     Shape.call(this, color);\n     *     this.size = size;\n     *   }\n     * });\n     * ```\n     * @stable\n     */\n    function Class(clsDef) {\n        var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n        var proto = constructor.prototype;\n        if (clsDef.hasOwnProperty('extends')) {\n            if (typeof clsDef.extends === 'function') {\n                constructor.prototype = proto =\n                    Object.create(clsDef.extends.prototype);\n            }\n            else {\n                throw new Error(\"Class definition 'extends' property must be a constructor function was: \" + stringify(clsDef.extends));\n            }\n        }\n        for (var key in clsDef) {\n            if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n                proto[key] = applyParams(clsDef[key], key);\n            }\n        }\n        if (this && this.annotations instanceof Array) {\n            Reflect.defineMetadata('annotations', this.annotations, constructor);\n        }\n        var constructorName = constructor['name'];\n        if (!constructorName || constructorName === 'constructor') {\n            constructor['overriddenName'] = \"class\" + _nextClassId++;\n        }\n        return constructor;\n    }\n    function makeDecorator(name, props, parentClass, chainFn) {\n        if (chainFn === void 0) { chainFn = null; }\n        var metaCtor = makeMetadataCtor([props]);\n        function DecoratorFactory(objOrType) {\n            if (!(Reflect && Reflect.getMetadata)) {\n                throw 'reflect-metadata shim is required when using class decorators';\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, objOrType);\n                return this;\n            }\n            var annotationInstance = new DecoratorFactory(objOrType);\n            var chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n            chainAnnotation.push(annotationInstance);\n            var TypeDecorator = function TypeDecorator(cls) {\n                var annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n                annotations.push(annotationInstance);\n                Reflect.defineMetadata('annotations', annotations, cls);\n                return cls;\n            };\n            TypeDecorator.annotations = chainAnnotation;\n            TypeDecorator.Class = Class;\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            props.forEach(function (prop, i) {\n                var argVal = args[i];\n                if (Array.isArray(prop)) {\n                    // plain parameter\n                    _this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n                }\n                else {\n                    for (var propName in prop) {\n                        _this[propName] =\n                            argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n                    }\n                }\n            });\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                var parameters = Reflect.getMetadata('parameters', cls) || [];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                parameters[index] = parameters[index] || [];\n                parameters[index].push(annotationInstance);\n                Reflect.defineMetadata('parameters', parameters, cls);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, [void 0].concat(args)))();\n            return function PropDecorator(target, name) {\n                var meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                Reflect.defineMetadata('propMetadata', meta, target.constructor);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.toString = function () { return (\"@\" + name); };\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * Inject decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', [['token', undefined]]);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional', []);\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Injectable = makeParamDecorator('Injectable', []);\n    /**\n     * Self decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self', []);\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf', []);\n    /**\n     * Host decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host', []);\n\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n     *\n     * ```typescript\n     * var t = new OpaqueToken(\"value\");\n     *\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: t, useValue: \"bindingValue\"}\n     * ]);\n     *\n     * expect(injector.get(t)).toEqual(\"bindingValue\");\n     * ```\n     *\n     * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n     * caused by multiple providers using the same string as two different tokens.\n     *\n     * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n     * error messages.\n     * @stable\n     */\n    // so that metadata is gathered for this class\n    var OpaqueToken = (function () {\n        function OpaqueToken(_desc) {\n            this._desc = _desc;\n        }\n        OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n        OpaqueToken.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        OpaqueToken.ctorParameters = [\n            null,\n        ];\n        return OpaqueToken;\n    }());\n\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new OpaqueToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', [['attributeName', undefined]]);\n    /**\n     * Base class for query metadata.\n     *\n     * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n     * more information.\n     *\n     * @stable\n     */\n    var Query = (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *  @stable\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a content query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ContentChild to get the first element or the directive matching the selector from the\n     * content DOM. If the content DOM changes, and a new child matches the selector,\n     * the property will be updated.\n     *\n     * Content queries are set before the `ngAfterContentInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried element.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: false,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * @whatItDoes Configures a view query.\n     *\n     * @howToUse\n     *\n     * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n     *\n     * @description\n     *\n     * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n     * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n     * and the changes observable of the query list will emit a new value.\n     *\n     * View queries are set before the `ngAfterViewInit` callback is called.\n     *\n     * **Metadata Properties**:\n     *\n     * * **selector** - the directive type or the name used for querying.\n     * * **read** - read a different token from the queried elements.\n     *\n     * Let's look at an example:\n     *\n     * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n     *\n     * **npm package**: `@angular/core`\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', [\n        ['selector', undefined], {\n            first: false,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', [\n        ['selector', undefined], {\n            first: true,\n            isViewQuery: true,\n            descendants: true,\n            read: undefined,\n        }\n    ], Query);\n\n    /**\n     * Describes within the change detector which strategy will be used the next time change\n     * detection is triggered.\n     * @stable\n     */\n    exports.ChangeDetectionStrategy;\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    /**\n     * Describes the status of the detector.\n     */\n    var ChangeDetectorStatus;\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return isBlank(changeDetectionStrategy) ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * Directive decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Directive = makeDecorator('Directive', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        providers: undefined,\n        exportAs: undefined,\n        queries: undefined\n    });\n    /**\n     * Component decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', {\n        selector: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        host: undefined,\n        exportAs: undefined,\n        moduleId: undefined,\n        providers: undefined,\n        viewProviders: undefined,\n        changeDetection: exports.ChangeDetectionStrategy.Default,\n        queries: undefined,\n        templateUrl: undefined,\n        template: undefined,\n        styleUrls: undefined,\n        styles: undefined,\n        animations: undefined,\n        encapsulation: undefined,\n        interpolation: undefined,\n        entryComponents: undefined\n    }, Directive);\n    /**\n     * Pipe decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', {\n        name: undefined,\n        pure: true,\n    });\n    /**\n     * Input decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n    /**\n     * Output decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n    /**\n     * HostBinding decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var LifecycleHooks;\n    (function (LifecycleHooks) {\n        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    })(LifecycleHooks || (LifecycleHooks = {}));\n    var LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    /**\n     * @whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n     *\n     * @description\n     * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n     * and content children are checked if at least one of them has changed.\n     * The `changes` parameter contains the changed properties.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnChanges = (function () {\n        function OnChanges() {\n        }\n        return OnChanges;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n     *\n     * @description\n     * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n     * first time, and before any of its children have been checked. It is invoked only once when the\n     * directive is instantiated.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnInit = (function () {\n        function OnInit() {\n        }\n        return OnInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n     *\n     * @description\n     * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n     * algorithm. The default change detection algorithm looks for differences by comparing\n     * bound-property values by reference across change detection runs.\n     *\n     * Note that a directive typically should not use both `DoCheck` and {@link OnChanges} to respond to\n     * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n     * detector detects changes.\n     *\n     * See {@link KeyValueDiffers} and {@link IterableDiffers} for implementing custom dirty checking\n     * for collections.\n     *\n     * See {@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var DoCheck = (function () {\n        function DoCheck() {\n        }\n        return DoCheck;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called when a directive or pipe is destroyed.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n     *\n     * @description\n     * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n     * instance is destroyed.\n     *\n     * See {@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var OnDestroy = (function () {\n        function OnDestroy() {\n        }\n        return OnDestroy;\n    }());\n    /**\n     *\n     * @whatItDoes Lifecycle hook that is called after a directive's content has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentInit = (function () {\n        function AfterContentInit() {\n        }\n        return AfterContentInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a directive's content.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterContentChecked = (function () {\n        function AfterContentChecked() {\n        }\n        return AfterContentChecked;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after a component's view has been fully\n     * initialized.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewInit = (function () {\n        function AfterViewInit() {\n        }\n        return AfterViewInit;\n    }());\n    /**\n     * @whatItDoes Lifecycle hook that is called after every check of a component's view.\n     * @howToUse\n     * {@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n     *\n     * @description\n     * See {@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n     *\n     * @stable\n     */\n    var AfterViewChecked = (function () {\n        function AfterViewChecked() {\n        }\n        return AfterViewChecked;\n    }());\n\n    /**\n     * Defines a schema that will allow:\n     * - any non-Angular elements with a `-` in their name,\n     * - any properties on elements with a `-` in their name which is the common rule for custom\n     * elements.\n     *\n     * @stable\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that will allow any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * NgModule decorator and metadata.\n     *\n     * @stable\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', {\n        providers: undefined,\n        declarations: undefined,\n        imports: undefined,\n        exports: undefined,\n        entryComponents: undefined,\n        bootstrap: undefined,\n        schemas: undefined,\n        id: undefined,\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines template and style encapsulation options available for Component's {@link Component}.\n     *\n     * See {@link ViewMetadata#encapsulation}.\n     * @stable\n     */\n    exports.ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via\n         * {@link ViewMetadata#styles} or {@link ViewMetadata#stylesUrls}, and adding the new Host Element\n         * attribute to all selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n    /**\n     * Metadata properties available for configuring Views.\n     *\n     * For details on the `@Component` annotation, see {@link Component}.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   selector: 'greet',\n     *   template: 'Hello {{name}}!',\n     * })\n     * class Greet {\n     *   name: string;\n     *\n     *   constructor() {\n     *     this.name = 'World';\n     *   }\n     * }\n     * ```\n     *\n     * @deprecated Use Component instead.\n     *\n     * {@link Component}\n     */\n    var ViewMetadata = (function () {\n        function ViewMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, templateUrl = _b.templateUrl, template = _b.template, encapsulation = _b.encapsulation, styles = _b.styles, styleUrls = _b.styleUrls, animations = _b.animations, interpolation = _b.interpolation;\n            this.templateUrl = templateUrl;\n            this.template = template;\n            this.styleUrls = styleUrls;\n            this.styles = styles;\n            this.encapsulation = encapsulation;\n            this.animations = animations;\n            this.interpolation = interpolation;\n        }\n        return ViewMetadata;\n    }());\n\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared,\n     * but not yet defined. It is also used when the `token` which we use when creating a query is not\n     * yet defined.\n     *\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * See: {@link forwardRef}\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * @stable\n     */\n    var BaseError = (function (_super) {\n        __extends(BaseError, _super);\n        function BaseError(message) {\n            // Errors don't use current this, instead they create a new instance.\n            // We have to do forward all of our api to the nativeInstance.\n            var nativeError = _super.call(this, message);\n            this._nativeError = nativeError;\n        }\n        Object.defineProperty(BaseError.prototype, \"message\", {\n            get: function () { return this._nativeError.message; },\n            set: function (message) { this._nativeError.message = message; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"name\", {\n            get: function () { return this._nativeError.name; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BaseError.prototype, \"stack\", {\n            get: function () { return this._nativeError.stack; },\n            set: function (value) { this._nativeError.stack = value; },\n            enumerable: true,\n            configurable: true\n        });\n        BaseError.prototype.toString = function () { return this._nativeError.toString(); };\n        return BaseError;\n    }(Error));\n    /**\n     * @stable\n     */\n    var WrappedError = (function (_super) {\n        __extends(WrappedError, _super);\n        function WrappedError(message, error) {\n            _super.call(this, message + \" caused by: \" + (error instanceof Error ? error.message : error));\n            this.originalError = error;\n        }\n        Object.defineProperty(WrappedError.prototype, \"stack\", {\n            get: function () {\n                return (this.originalError instanceof Error ? this.originalError : this._nativeError)\n                    .stack;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return WrappedError;\n    }(BaseError));\n\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var _NullInjector = (function () {\n        function _NullInjector() {\n        }\n        _NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return _NullInjector;\n    }());\n    /**\n     * @whatItDoes Injector interface\n     * @howToUse\n     * ```\n     * const injector: Injector = ...;\n     * injector.get(...);\n     * ```\n     *\n     * @description\n     * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @stable\n     */\n    var Injector = (function () {\n        function Injector() {\n        }\n        /**\n         * Retrieves an instance from the injector based on the provided token.\n         * If not found:\n         * - Throws {@link NoProviderError} if no `notFoundValue` that is not equal to\n         * Injector.THROW_IF_NOT_FOUND is given\n         * - Returns the `notFoundValue` otherwise\n         */\n        Injector.prototype.get = function (token, notFoundValue) { return unimplemented(); };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new _NullInjector();\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    /**\n     * Base class for all errors arising from misconfigured providers.\n     * @stable\n     */\n    var AbstractProviderError = (function (_super) {\n        __extends$1(AbstractProviderError, _super);\n        function AbstractProviderError(injector, key, constructResolvingMessage) {\n            _super.call(this, 'DI Error');\n            this.keys = [key];\n            this.injectors = [injector];\n            this.constructResolvingMessage = constructResolvingMessage;\n            this.message = this.constructResolvingMessage(this.keys);\n        }\n        AbstractProviderError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n            this.message = this.constructResolvingMessage(this.keys);\n        };\n        return AbstractProviderError;\n    }(BaseError));\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoProviderError = (function (_super) {\n        __extends$1(NoProviderError, _super);\n        function NoProviderError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                var first = stringify(keys[0].token);\n                return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n            });\n        }\n        return NoProviderError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     * @stable\n     */\n    var CyclicDependencyError = (function (_super) {\n        __extends$1(CyclicDependencyError, _super);\n        function CyclicDependencyError(injector, key) {\n            _super.call(this, injector, key, function (keys) {\n                return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n            });\n        }\n        return CyclicDependencyError;\n    }(AbstractProviderError));\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     * @stable\n     */\n    var InstantiationError = (function (_super) {\n        __extends$1(InstantiationError, _super);\n        function InstantiationError(injector, originalException, originalStack, key) {\n            _super.call(this, 'DI Error', originalException);\n            this.keys = [key];\n            this.injectors = [injector];\n        }\n        InstantiationError.prototype.addKey = function (injector, key) {\n            this.injectors.push(injector);\n            this.keys.push(key);\n        };\n        Object.defineProperty(InstantiationError.prototype, \"message\", {\n            get: function () {\n                var first = stringify(this.keys[0].token);\n                return this.originalError.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(this.keys) + \".\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(InstantiationError.prototype, \"causeKey\", {\n            get: function () { return this.keys[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return InstantiationError;\n    }(WrappedError));\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     * @stable\n     */\n    var InvalidProviderError = (function (_super) {\n        __extends$1(InvalidProviderError, _super);\n        function InvalidProviderError(provider) {\n            _super.call(this, \"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n        }\n        return InvalidProviderError;\n    }(BaseError));\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     * @stable\n     */\n    var NoAnnotationError = (function (_super) {\n        __extends$1(NoAnnotationError, _super);\n        function NoAnnotationError(typeOrFunc, params) {\n            _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));\n        }\n        NoAnnotationError._genMessage = function (typeOrFunc, params) {\n            var signature = [];\n            for (var i = 0, ii = params.length; i < ii; i++) {\n                var parameter = params[i];\n                if (!parameter || parameter.length == 0) {\n                    signature.push('?');\n                }\n                else {\n                    signature.push(parameter.map(stringify).join(' '));\n                }\n            }\n            return 'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n                signature.join(', ') + '). ' +\n                'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n                stringify(typeOrFunc) + '\\' is decorated with Injectable.';\n        };\n        return NoAnnotationError;\n    }(BaseError));\n    /**\n     * Thrown when getting an object by index.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     * @stable\n     */\n    var OutOfBoundsError = (function (_super) {\n        __extends$1(OutOfBoundsError, _super);\n        function OutOfBoundsError(index) {\n            _super.call(this, \"Index \" + index + \" is out-of-bounds.\");\n        }\n        return OutOfBoundsError;\n    }(BaseError));\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    var MixingMultiProvidersWithRegularProvidersError = (function (_super) {\n        __extends$1(MixingMultiProvidersWithRegularProvidersError, _super);\n        function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n            _super.call(this, 'Cannot mix multi providers and regular providers, got: ' + provider1.toString() + ' ' +\n                provider2.toString());\n        }\n        return MixingMultiProvidersWithRegularProvidersError;\n    }(BaseError));\n\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @experimental\n     */\n    var ReflectiveKey = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n        }\n        Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n            /**\n             * Returns a stringified token.\n             */\n            get: function () { return stringify(this.token); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    /**\n     * @internal\n     */\n    var KeyRegistry = (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Represents a type that a Component or other object is instances of.\n     *\n     * @description\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @stable\n     */\n    var Type = Function;\n\n    var ReflectionCapabilities = (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || global$1.Reflect;\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new (t.bind.apply(t, [void 0].concat(args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && isPresent(paramAnnotations[i])) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Prefer the direct API.\n            if (type.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (type.ctorParameters) {\n                var ctorParameters = type.ctorParameters;\n                var paramTypes = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // API for metadata created by invoking the decorators.\n            if (isPresent(this._reflect) && isPresent(this._reflect.getMetadata)) {\n                var paramAnnotations = this._reflect.getMetadata('parameters', type);\n                var paramTypes = this._reflect.getMetadata('design:paramtypes', type);\n                if (paramTypes || paramAnnotations) {\n                    return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n                }\n            }\n            // The array has to be filled with `undefined` because holes would be skipped by `some`\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var annotations = this._reflect.getMetadata('annotations', typeOrFunc);\n                if (annotations)\n                    return annotations;\n            }\n            return [];\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (this._reflect && this._reflect.getMetadata) {\n                var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);\n                if (propMetadata)\n                    return propMetadata;\n            }\n            return {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, runtime) { return runtime; };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides read-only access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var ReflectorReader = (function () {\n        function ReflectorReader() {\n        }\n        return ReflectorReader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = (function (_super) {\n        __extends$2(Reflector, _super);\n        function Reflector(reflectionCapabilities) {\n            _super.call(this);\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }(ReflectorReader));\n\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = (function () {\n        function ReflectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {\n            this.key = key;\n            this.optional = optional;\n            this.lowerBoundVisibility = lowerBoundVisibility;\n            this.upperBoundVisibility = upperBoundVisibility;\n            this.properties = properties;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null, null, []);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n        }\n        Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n            get: function () { return this.resolvedFactories[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving {@link\n     * Provider}.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = (function () {\n        function ResolvedReflectiveFactory(\n            /**\n             * Factory function which can return an instance of an object represented by a key.\n             */\n            factory,\n            /**\n             * Arguments (dependencies) to the `factory` function.\n             */\n            dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the {@link Provider} into {@link ResolvedProvider}.\n     *\n     * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n     * convenience provider syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where\n     * each key is contained exactly once and multi providers\n     * have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw new MixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw new InvalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var depProps = [];\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null, null, depProps);\n            }\n            else {\n                return _createDependency(metadata, optional, null, null, depProps);\n            }\n        }\n        var lowerBoundVisibility = null;\n        var upperBoundVisibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof Host) {\n                upperBoundVisibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof SkipSelf) {\n                lowerBoundVisibility = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n        }\n        else {\n            throw new NoAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);\n    }\n\n    // Threshold for the dynamic version\n    var _MAX_CONSTRUCTION_COUNTER = 10;\n    var UNDEFINED = new Object();\n    var ReflectiveProtoInjectorInlineStrategy = (function () {\n        function ReflectiveProtoInjectorInlineStrategy(protoEI, providers) {\n            this.provider0 = null;\n            this.provider1 = null;\n            this.provider2 = null;\n            this.provider3 = null;\n            this.provider4 = null;\n            this.provider5 = null;\n            this.provider6 = null;\n            this.provider7 = null;\n            this.provider8 = null;\n            this.provider9 = null;\n            this.keyId0 = null;\n            this.keyId1 = null;\n            this.keyId2 = null;\n            this.keyId3 = null;\n            this.keyId4 = null;\n            this.keyId5 = null;\n            this.keyId6 = null;\n            this.keyId7 = null;\n            this.keyId8 = null;\n            this.keyId9 = null;\n            var length = providers.length;\n            if (length > 0) {\n                this.provider0 = providers[0];\n                this.keyId0 = providers[0].key.id;\n            }\n            if (length > 1) {\n                this.provider1 = providers[1];\n                this.keyId1 = providers[1].key.id;\n            }\n            if (length > 2) {\n                this.provider2 = providers[2];\n                this.keyId2 = providers[2].key.id;\n            }\n            if (length > 3) {\n                this.provider3 = providers[3];\n                this.keyId3 = providers[3].key.id;\n            }\n            if (length > 4) {\n                this.provider4 = providers[4];\n                this.keyId4 = providers[4].key.id;\n            }\n            if (length > 5) {\n                this.provider5 = providers[5];\n                this.keyId5 = providers[5].key.id;\n            }\n            if (length > 6) {\n                this.provider6 = providers[6];\n                this.keyId6 = providers[6].key.id;\n            }\n            if (length > 7) {\n                this.provider7 = providers[7];\n                this.keyId7 = providers[7].key.id;\n            }\n            if (length > 8) {\n                this.provider8 = providers[8];\n                this.keyId8 = providers[8].key.id;\n            }\n            if (length > 9) {\n                this.provider9 = providers[9];\n                this.keyId9 = providers[9].key.id;\n            }\n        }\n        ReflectiveProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index == 0)\n                return this.provider0;\n            if (index == 1)\n                return this.provider1;\n            if (index == 2)\n                return this.provider2;\n            if (index == 3)\n                return this.provider3;\n            if (index == 4)\n                return this.provider4;\n            if (index == 5)\n                return this.provider5;\n            if (index == 6)\n                return this.provider6;\n            if (index == 7)\n                return this.provider7;\n            if (index == 8)\n                return this.provider8;\n            if (index == 9)\n                return this.provider9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function (injector) {\n            return new ReflectiveInjectorInlineStrategy(injector, this);\n        };\n        return ReflectiveProtoInjectorInlineStrategy;\n    }());\n    var ReflectiveProtoInjectorDynamicStrategy = (function () {\n        function ReflectiveProtoInjectorDynamicStrategy(protoInj, providers) {\n            this.providers = providers;\n            var len = providers.length;\n            this.keyIds = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = providers[i].key.id;\n            }\n        }\n        ReflectiveProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this.providers.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.providers[index];\n        };\n        ReflectiveProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function (ei) {\n            return new ReflectiveInjectorDynamicStrategy(this, ei);\n        };\n        return ReflectiveProtoInjectorDynamicStrategy;\n    }());\n    var ReflectiveProtoInjector = (function () {\n        function ReflectiveProtoInjector(providers) {\n            this.numberOfProviders = providers.length;\n            this._strategy = providers.length > _MAX_CONSTRUCTION_COUNTER ?\n                new ReflectiveProtoInjectorDynamicStrategy(this, providers) :\n                new ReflectiveProtoInjectorInlineStrategy(this, providers);\n        }\n        ReflectiveProtoInjector.fromResolvedProviders = function (providers) {\n            return new ReflectiveProtoInjector(providers);\n        };\n        ReflectiveProtoInjector.prototype.getProviderAtIndex = function (index) {\n            return this._strategy.getProviderAtIndex(index);\n        };\n        return ReflectiveProtoInjector;\n    }());\n    var ReflectiveInjectorInlineStrategy = (function () {\n        function ReflectiveInjectorInlineStrategy(injector, protoStrategy) {\n            this.injector = injector;\n            this.protoStrategy = protoStrategy;\n            this.obj0 = UNDEFINED;\n            this.obj1 = UNDEFINED;\n            this.obj2 = UNDEFINED;\n            this.obj3 = UNDEFINED;\n            this.obj4 = UNDEFINED;\n            this.obj5 = UNDEFINED;\n            this.obj6 = UNDEFINED;\n            this.obj7 = UNDEFINED;\n            this.obj8 = UNDEFINED;\n            this.obj9 = UNDEFINED;\n        }\n        ReflectiveInjectorInlineStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorInlineStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            var inj = this.injector;\n            if (p.keyId0 === keyId) {\n                if (this.obj0 === UNDEFINED) {\n                    this.obj0 = inj._new(p.provider0);\n                }\n                return this.obj0;\n            }\n            if (p.keyId1 === keyId) {\n                if (this.obj1 === UNDEFINED) {\n                    this.obj1 = inj._new(p.provider1);\n                }\n                return this.obj1;\n            }\n            if (p.keyId2 === keyId) {\n                if (this.obj2 === UNDEFINED) {\n                    this.obj2 = inj._new(p.provider2);\n                }\n                return this.obj2;\n            }\n            if (p.keyId3 === keyId) {\n                if (this.obj3 === UNDEFINED) {\n                    this.obj3 = inj._new(p.provider3);\n                }\n                return this.obj3;\n            }\n            if (p.keyId4 === keyId) {\n                if (this.obj4 === UNDEFINED) {\n                    this.obj4 = inj._new(p.provider4);\n                }\n                return this.obj4;\n            }\n            if (p.keyId5 === keyId) {\n                if (this.obj5 === UNDEFINED) {\n                    this.obj5 = inj._new(p.provider5);\n                }\n                return this.obj5;\n            }\n            if (p.keyId6 === keyId) {\n                if (this.obj6 === UNDEFINED) {\n                    this.obj6 = inj._new(p.provider6);\n                }\n                return this.obj6;\n            }\n            if (p.keyId7 === keyId) {\n                if (this.obj7 === UNDEFINED) {\n                    this.obj7 = inj._new(p.provider7);\n                }\n                return this.obj7;\n            }\n            if (p.keyId8 === keyId) {\n                if (this.obj8 === UNDEFINED) {\n                    this.obj8 = inj._new(p.provider8);\n                }\n                return this.obj8;\n            }\n            if (p.keyId9 === keyId) {\n                if (this.obj9 === UNDEFINED) {\n                    this.obj9 = inj._new(p.provider9);\n                }\n                return this.obj9;\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getObjAtIndex = function (index) {\n            if (index == 0)\n                return this.obj0;\n            if (index == 1)\n                return this.obj1;\n            if (index == 2)\n                return this.obj2;\n            if (index == 3)\n                return this.obj3;\n            if (index == 4)\n                return this.obj4;\n            if (index == 5)\n                return this.obj5;\n            if (index == 6)\n                return this.obj6;\n            if (index == 7)\n                return this.obj7;\n            if (index == 8)\n                return this.obj8;\n            if (index == 9)\n                return this.obj9;\n            throw new OutOfBoundsError(index);\n        };\n        ReflectiveInjectorInlineStrategy.prototype.getMaxNumberOfObjects = function () { return _MAX_CONSTRUCTION_COUNTER; };\n        return ReflectiveInjectorInlineStrategy;\n    }());\n    var ReflectiveInjectorDynamicStrategy = (function () {\n        function ReflectiveInjectorDynamicStrategy(protoStrategy, injector) {\n            this.protoStrategy = protoStrategy;\n            this.injector = injector;\n            this.objs = new Array(protoStrategy.providers.length).fill(UNDEFINED);\n        }\n        ReflectiveInjectorDynamicStrategy.prototype.resetConstructionCounter = function () { this.injector._constructionCounter = 0; };\n        ReflectiveInjectorDynamicStrategy.prototype.instantiateProvider = function (provider) {\n            return this.injector._new(provider);\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjByKeyId = function (keyId) {\n            var p = this.protoStrategy;\n            for (var i = 0; i < p.keyIds.length; i++) {\n                if (p.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this.injector._new(p.providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getObjAtIndex = function (index) {\n            if (index < 0 || index >= this.objs.length) {\n                throw new OutOfBoundsError(index);\n            }\n            return this.objs[index];\n        };\n        ReflectiveInjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function () { return this.objs.length; };\n        return ReflectiveInjectorDynamicStrategy;\n    }());\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @stable\n     */\n    var ReflectiveInjector = (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of {@link ResolvedReflectiveProvider}s.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         * See {@link ReflectiveInjector#fromResolvedProviders} for more info.\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         *\n         * This function is slower than the corresponding `fromResolvedProviders`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#fromResolvedProviders}.\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            if (parent === void 0) { parent = null; }\n            return new ReflectiveInjector_(ReflectiveProtoInjector.fromResolvedProviders(providers), parent);\n        };\n        Object.defineProperty(ReflectiveInjector.prototype, \"parent\", {\n            /**\n             * Parent of this injector.\n             *\n             * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n             * -->\n             *\n             * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n             *\n             * ```typescript\n             * var parent = ReflectiveInjector.resolveAndCreate([]);\n             * var child = parent.resolveAndCreateChild([]);\n             * expect(child.parent).toBe(parent);\n             * ```\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Resolves an array of providers and creates a child injector from those providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * The passed-in providers can be an array of `Type`, {@link Provider},\n         * or a recursive array of more providers.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n         * var child = parent.resolveAndCreateChild([ChildProvider]);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         *\n         * This function is slower than the corresponding `createChildFromResolved`\n         * because it needs to resolve the passed-in providers first.\n         * See {@link Injector#resolve} and {@link Injector#createChildFromResolved}.\n         */\n        ReflectiveInjector.prototype.resolveAndCreateChild = function (providers) { return unimplemented(); };\n        /**\n         * Creates a child injector from previously resolved providers.\n         *\n         * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n         * -->\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n         *\n         * ```typescript\n         * class ParentProvider {}\n         * class ChildProvider {}\n         *\n         * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n         * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n         *\n         * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n         * var child = parent.createChildFromResolved(childProviders);\n         *\n         * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n         * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n         * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.createChildFromResolved = function (providers) {\n            return unimplemented();\n        };\n        /**\n         * Resolves a provider and instantiates an object in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         *\n         * var car = injector.resolveAndInstantiate(Car);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n         * ```\n         */\n        ReflectiveInjector.prototype.resolveAndInstantiate = function (provider) { return unimplemented(); };\n        /**\n         * Instantiates an object using a resolved provider in the context of the injector.\n         *\n         * The created object does not get cached by the injector.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n         * var carProvider = ReflectiveInjector.resolve([Car])[0];\n         * var car = injector.instantiateResolved(carProvider);\n         * expect(car.engine).toBe(injector.get(Engine));\n         * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n         * ```\n         */\n        ReflectiveInjector.prototype.instantiateResolved = function (provider) { return unimplemented(); };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_proto /* ProtoInjector */, _parent) {\n            if (_parent === void 0) { _parent = null; }\n            /** @internal */\n            this._constructionCounter = 0;\n            this._proto = _proto;\n            this._parent = _parent;\n            this._strategy = _proto._strategy.createInjectorStrategy(this);\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.getAt = function (index) { return this._strategy.getObjAtIndex(index); };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ReflectiveInjector_.prototype, \"internalStrategy\", {\n            /**\n             * @internal\n             * Internal. Do not use.\n             * We return `any` not to export the InjectorStrategy type.\n             */\n            get: function () { return this._strategy; },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var proto = new ReflectiveProtoInjector(providers);\n            var inj = new ReflectiveInjector_(proto);\n            inj._parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {\n                throw new CyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps = ResolvedReflectiveFactory.dependencies;\n            var length = deps.length;\n            var d0;\n            var d1;\n            var d2;\n            var d3;\n            var d4;\n            var d5;\n            var d6;\n            var d7;\n            var d8;\n            var d9;\n            var d10;\n            var d11;\n            var d12;\n            var d13;\n            var d14;\n            var d15;\n            var d16;\n            var d17;\n            var d18;\n            var d19;\n            try {\n                d0 = length > 0 ? this._getByReflectiveDependency(provider, deps[0]) : null;\n                d1 = length > 1 ? this._getByReflectiveDependency(provider, deps[1]) : null;\n                d2 = length > 2 ? this._getByReflectiveDependency(provider, deps[2]) : null;\n                d3 = length > 3 ? this._getByReflectiveDependency(provider, deps[3]) : null;\n                d4 = length > 4 ? this._getByReflectiveDependency(provider, deps[4]) : null;\n                d5 = length > 5 ? this._getByReflectiveDependency(provider, deps[5]) : null;\n                d6 = length > 6 ? this._getByReflectiveDependency(provider, deps[6]) : null;\n                d7 = length > 7 ? this._getByReflectiveDependency(provider, deps[7]) : null;\n                d8 = length > 8 ? this._getByReflectiveDependency(provider, deps[8]) : null;\n                d9 = length > 9 ? this._getByReflectiveDependency(provider, deps[9]) : null;\n                d10 = length > 10 ? this._getByReflectiveDependency(provider, deps[10]) : null;\n                d11 = length > 11 ? this._getByReflectiveDependency(provider, deps[11]) : null;\n                d12 = length > 12 ? this._getByReflectiveDependency(provider, deps[12]) : null;\n                d13 = length > 13 ? this._getByReflectiveDependency(provider, deps[13]) : null;\n                d14 = length > 14 ? this._getByReflectiveDependency(provider, deps[14]) : null;\n                d15 = length > 15 ? this._getByReflectiveDependency(provider, deps[15]) : null;\n                d16 = length > 16 ? this._getByReflectiveDependency(provider, deps[16]) : null;\n                d17 = length > 17 ? this._getByReflectiveDependency(provider, deps[17]) : null;\n                d18 = length > 18 ? this._getByReflectiveDependency(provider, deps[18]) : null;\n                d19 = length > 19 ? this._getByReflectiveDependency(provider, deps[19]) : null;\n            }\n            catch (e) {\n                if (e instanceof AbstractProviderError || e instanceof InstantiationError) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                switch (length) {\n                    case 0:\n                        obj = factory();\n                        break;\n                    case 1:\n                        obj = factory(d0);\n                        break;\n                    case 2:\n                        obj = factory(d0, d1);\n                        break;\n                    case 3:\n                        obj = factory(d0, d1, d2);\n                        break;\n                    case 4:\n                        obj = factory(d0, d1, d2, d3);\n                        break;\n                    case 5:\n                        obj = factory(d0, d1, d2, d3, d4);\n                        break;\n                    case 6:\n                        obj = factory(d0, d1, d2, d3, d4, d5);\n                        break;\n                    case 7:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6);\n                        break;\n                    case 8:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);\n                        break;\n                    case 9:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);\n                        break;\n                    case 10:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);\n                        break;\n                    case 11:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);\n                        break;\n                    case 12:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);\n                        break;\n                    case 13:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);\n                        break;\n                    case 14:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);\n                        break;\n                    case 15:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);\n                        break;\n                    case 16:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);\n                        break;\n                    case 17:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);\n                        break;\n                    case 18:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);\n                        break;\n                    case 19:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);\n                        break;\n                    case 20:\n                        obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);\n                        break;\n                    default:\n                        throw new Error(\"Cannot instantiate '\" + provider.key.displayName + \"' because it has more than 20 dependencies\");\n                }\n            }\n            catch (e) {\n                throw new InstantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (provider, dep) {\n            return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, lowerBoundVisibility, upperBoundVisibility, notFoundValue) {\n            if (key === INJECTOR_KEY) {\n                return this;\n            }\n            if (upperBoundVisibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, lowerBoundVisibility);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw new NoProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._strategy.getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, lowerBoundVisibility) {\n            var inj;\n            if (lowerBoundVisibility instanceof SkipSelf) {\n                inj = this._parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._strategy.getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_._parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        return ReflectiveInjector_;\n    }());\n    var INJECTOR_KEY = ReflectiveKey.get(Injector);\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._proto.numberOfProviders);\n        for (var i = 0; i < injector._proto.numberOfProviders; ++i) {\n            res[i] = fn(injector._proto.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @whatItDoes Provides a hook for centralized exception handling.\n     *\n     * @description\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @stable\n     */\n    var ErrorHandler = (function () {\n        function ErrorHandler(rethrowError) {\n            if (rethrowError === void 0) { rethrowError = true; }\n            /**\n             * @internal\n             */\n            this._console = console;\n            this.rethrowError = rethrowError;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var originalStack = this._findOriginalStack(error);\n            var context = this._findContext(error);\n            this._console.error(\"EXCEPTION: \" + this._extractMessage(error));\n            if (originalError) {\n                this._console.error(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalError));\n            }\n            if (originalStack) {\n                this._console.error('ORIGINAL STACKTRACE:');\n                this._console.error(originalStack);\n            }\n            if (context) {\n                this._console.error('ERROR CONTEXT:');\n                this._console.error(context);\n            }\n            // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n            // when an error happens. If we do not rethrow, bootstrap will always succeed.\n            if (this.rethrowError)\n                throw error;\n        };\n        /** @internal */\n        ErrorHandler.prototype._extractMessage = function (error) {\n            return error instanceof Error ? error.message : error.toString();\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return error.context ? error.context :\n                    this._findContext(error.originalError);\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = error.originalError;\n            while (e && e.originalError) {\n                e = e.originalError;\n            }\n            return e;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalStack = function (error) {\n            if (!(error instanceof Error))\n                return null;\n            var e = error;\n            var stack = e.stack;\n            while (e instanceof Error && e.originalError) {\n                e = e.originalError;\n                if (e instanceof Error && e.stack) {\n                    stack = e.stack;\n                }\n            }\n            return stack;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        StringMapWrapper.merge = function (m1, m2) {\n            var m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        StringMapWrapper.equals = function (m1, m2) {\n            var k1 = Object.keys(m1);\n            var k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var i = 0; i < k1.length; i++) {\n                var key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        ListWrapper.removeAll = function (list, items) {\n            for (var i = 0; i < items.length; ++i) {\n                var index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        ListWrapper.remove = function (list, el) {\n            var index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return flat.concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) &&\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new OpaqueToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this._done = false;\n            var asyncInitPromises = [];\n            if (appInits) {\n                for (var i = 0; i < appInits.length; i++) {\n                    var initResult = appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            this._donePromise = Promise.all(asyncInitPromises).then(function () { _this._done = true; });\n            if (asyncInitPromises.length === 0) {\n                this._done = true;\n            }\n        }\n        Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n            get: function () { return this._done; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n            get: function () { return this._donePromise; },\n            enumerable: true,\n            configurable: true\n        });\n        ApplicationInitStatus.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n        ];\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new OpaqueToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new OpaqueToken('Platform Initializer');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new OpaqueToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new OpaqueToken('Application Packages Root URL');\n\n    var Console = (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) { print(message); };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) { warn(message); };\n        Console.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Console.ctorParameters = [];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     *\n     * @stable\n     */\n    var ComponentStillLoadingError = (function (_super) {\n        __extends$4(ComponentStillLoadingError, _super);\n        function ComponentStillLoadingError(compType) {\n            _super.call(this, \"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n            this.compType = compType;\n        }\n        return ComponentStillLoadingError;\n    }(BaseError));\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     * @stable\n     */\n    var Compiler = (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents`\n         * have to be inlined. Otherwise throws a {@link ComponentStillLoadingError}.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new OpaqueToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @stable\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    var DefaultIterableDifferFactory = (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (cdRef, trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @stable\n     */\n    var DefaultIterableDiffer = (function () {\n        function DefaultIterableDiffer(_trackByFn) {\n            this._trackByFn = _trackByFn;\n            this._length = null;\n            this._collection = null;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = this._trackByFn || trackByIdentity;\n        }\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n            get: function () { return this._collection; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n            get: function () { return this._length; },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (isBlank(collection))\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + collection + \"'\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        // todo(vicb): optim for UnmodifiableListView (frozen arrays)\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                var list = collection;\n                this._length = collection.length;\n                for (var index_1 = 0; index_1 < this._length; index_1++) {\n                    item = list[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item /** TODO #9100 */) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this._length = index;\n            }\n            this._truncate(record);\n            this._collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new CollectionChangeRecord(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link CollectionChangeRecord}s from the previous collection\n         *\n         * - `record` The first excess {@link CollectionChangeRecord}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // todo(vicb)\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // todo(vicb)\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // todo(vicb)\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // todo(vicb)\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // todo(vicb)\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // todo(vicb)\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // todo(vicb)\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // todo(vicb)\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype.toString = function () {\n            var list = [];\n            this.forEachItem(function (record /** TODO #9100 */) { return list.push(record); });\n            var previous = [];\n            this.forEachPreviousItem(function (record /** TODO #9100 */) { return previous.push(record); });\n            var additions = [];\n            this.forEachAddedItem(function (record /** TODO #9100 */) { return additions.push(record); });\n            var moves = [];\n            this.forEachMovedItem(function (record /** TODO #9100 */) { return moves.push(record); });\n            var removals = [];\n            this.forEachRemovedItem(function (record /** TODO #9100 */) { return removals.push(record); });\n            var identityChanges = [];\n            this.forEachIdentityChange(function (record /** TODO #9100 */) { return identityChanges.push(record); });\n            return 'collection: ' + list.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'moves: ' + moves.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n' +\n                'identityChanges: ' + identityChanges.join(', ') + '\\n';\n        };\n        return DefaultIterableDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var CollectionChangeRecord = (function () {\n        function CollectionChangeRecord(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        CollectionChangeRecord.prototype.toString = function () {\n            return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                stringify(this.item) + '[' +\n                    stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n        };\n        return CollectionChangeRecord;\n    }());\n    // A linked list of CollectionChangeRecords with the same CollectionChangeRecord.item\n    var _DuplicateItemRecordList = (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // todo(vicb)\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a CollectionChangeRecord having CollectionChangeRecord.trackById == trackById and\n        // CollectionChangeRecord.currentIndex >= afterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, afterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((afterIndex === null || afterIndex < record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // todo(vicb)\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (CollectionChangeRecord cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the CollectionChangeRecord value may be one which we\n         * have already iterated over, we use the afterIndex to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the last `a` not the first or second.\n         */\n        _DuplicateMap.prototype.get = function (trackById, afterIndex) {\n            if (afterIndex === void 0) { afterIndex = null; }\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, afterIndex) : null;\n        };\n        /**\n         * Removes a {@link CollectionChangeRecord} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        _DuplicateMap.prototype.toString = function () { return '_DuplicateMap(' + stringify(this.map) + ')'; };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    var DefaultKeyValueDifferFactory = (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function (cdRef) { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + map + \"'\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var records = this._records;\n            var oldSeqRecord = this._mapHead;\n            var lastOldSeqRecord = null;\n            var lastNewSeqRecord = null;\n            var seqChanged = false;\n            this._forEach(map, function (value, key) {\n                var newSeqRecord;\n                if (oldSeqRecord && key === oldSeqRecord.key) {\n                    newSeqRecord = oldSeqRecord;\n                    _this._maybeAddToChanges(newSeqRecord, value);\n                }\n                else {\n                    seqChanged = true;\n                    if (oldSeqRecord !== null) {\n                        _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n                        _this._addToRemovals(oldSeqRecord);\n                    }\n                    if (records.has(key)) {\n                        newSeqRecord = records.get(key);\n                        _this._maybeAddToChanges(newSeqRecord, value);\n                    }\n                    else {\n                        newSeqRecord = new KeyValueChangeRecord(key);\n                        records.set(key, newSeqRecord);\n                        newSeqRecord.currentValue = value;\n                        _this._addToAdditions(newSeqRecord);\n                    }\n                }\n                if (seqChanged) {\n                    if (_this._isInRemovals(newSeqRecord)) {\n                        _this._removeFromRemovals(newSeqRecord);\n                    }\n                    if (lastNewSeqRecord == null) {\n                        _this._mapHead = newSeqRecord;\n                    }\n                    else {\n                        lastNewSeqRecord._next = newSeqRecord;\n                    }\n                }\n                lastOldSeqRecord = oldSeqRecord;\n                lastNewSeqRecord = newSeqRecord;\n                oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n            });\n            this._truncate(lastOldSeqRecord, oldSeqRecord);\n            return this.isDirty;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // Record the state of the mapping\n                for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = this._removalsTail = null;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._truncate = function (lastRecord, record) {\n            while (record !== null) {\n                if (lastRecord === null) {\n                    this._mapHead = null;\n                }\n                else {\n                    lastRecord._next = null;\n                }\n                var nextRecord = record._next;\n                this._addToRemovals(record);\n                lastRecord = record;\n                record = nextRecord;\n            }\n            for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {\n                rec.previousValue = rec.currentValue;\n                rec.currentValue = null;\n                this._records.delete(rec.key);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._isInRemovals = function (record) {\n            return record === this._removalsHead || record._nextRemoved !== null ||\n                record._prevRemoved !== null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToRemovals = function (record) {\n            if (this._removalsHead === null) {\n                this._removalsHead = this._removalsTail = record;\n            }\n            else {\n                this._removalsTail._nextRemoved = record;\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromSeq = function (prev, record) {\n            var next = record._next;\n            if (prev === null) {\n                this._mapHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            record._next = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._removeFromRemovals = function (record) {\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            record._prevRemoved = record._nextRemoved = null;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype.toString = function () {\n            var items = [];\n            var previous = [];\n            var changes = [];\n            var additions = [];\n            var removals = [];\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                items.push(stringify(record));\n            }\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                previous.push(stringify(record));\n            }\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                changes.push(stringify(record));\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                additions.push(stringify(record));\n            }\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                removals.push(stringify(record));\n            }\n            return 'map: ' + items.join(', ') + '\\n' +\n                'previous: ' + previous.join(', ') + '\\n' +\n                'additions: ' + additions.join(', ') + '\\n' +\n                'changes: ' + changes.join(', ') + '\\n' +\n                'removals: ' + removals.join(', ') + '\\n';\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    /**\n     * @stable\n     */\n    var KeyValueChangeRecord = (function () {\n        function KeyValueChangeRecord(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        KeyValueChangeRecord.prototype.toString = function () {\n            return looseIdentical(this.previousValue, this.currentValue) ?\n                stringify(this.key) :\n                (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n                    stringify(this.currentValue) + ']');\n        };\n        return KeyValueChangeRecord;\n    }());\n\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     * @stable\n     */\n    var IterableDiffers = (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new IterableDiffers(factories);\n            }\n            else {\n                return new IterableDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        return IterableDiffers;\n    }());\n\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     * @stable\n     */\n    var KeyValueDiffers = (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (isPresent(parent)) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n                return new KeyValueDiffers(factories);\n            }\n            else {\n                return new KeyValueDiffers(factories);\n            }\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * The following example shows how to extend an existing list of factories,\n               * which will only be applied to the injector for this component and its children.\n               * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ### Example\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (isPresent(factory)) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n            }\n        };\n        return KeyValueDiffers;\n    }());\n\n    var UNINITIALIZED = {\n        toString: function () { return 'CD_INIT_VALUE'; }\n    };\n    function devModeEqual(a, b) {\n        if (isListLikeIterable(a) && isListLikeIterable(b)) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else if (!isListLikeIterable(a) && !isPrimitive(a) && !isListLikeIterable(b) && !isPrimitive(b)) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference\n     * has not changed.\n     *\n     * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     * @stable\n     */\n    var WrappedValue = (function () {\n        function WrappedValue(wrapped) {\n            this.wrapped = wrapped;\n        }\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        return WrappedValue;\n    }());\n    /**\n     * Helper class for unwrapping WrappedValue s\n     */\n    var ValueUnwrapper = (function () {\n        function ValueUnwrapper() {\n            this.hasWrappedValue = false;\n        }\n        ValueUnwrapper.prototype.unwrap = function (value) {\n            if (value instanceof WrappedValue) {\n                this.hasWrappedValue = true;\n                return value.wrapped;\n            }\n            return value;\n        };\n        ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n        return ValueUnwrapper;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     * @stable\n     */\n    var SimpleChange = (function () {\n        function SimpleChange(previousValue, currentValue) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.previousValue === UNINITIALIZED; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @stable\n     */\n    var ChangeDetectorRef = (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @experimental\n     */\n    // TODO (matsko): add typing for the animation function\n    var RenderComponentType = (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    var RenderDebugInfo = (function () {\n        function RenderDebugInfo() {\n        }\n        Object.defineProperty(RenderDebugInfo.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"component\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"providerTokens\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"references\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RenderDebugInfo.prototype, \"source\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return RenderDebugInfo;\n    }());\n    /**\n     * @experimental\n     */\n    var Renderer = (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link #setElementProperty} or {@link #setElementAttribute}\n     * respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     * @experimental\n     */\n    var RootRenderer = (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n     * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n     * handled.\n     *\n     * See DomSanitizer for more details on security in Angular applications.\n     *\n     * @stable\n     */\n    exports.SecurityContext;\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @stable\n     */\n    var Sanitizer = (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * An error thrown if application changes model breaking the top-down data flow.\n     *\n     * This exception is only thrown in dev mode.\n     *\n     * <!-- TODO: Add a link once the dev mode option is configurable -->\n     *\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'parent',\n     *   template: '<child [prop]=\"parentProp\"></child>',\n     * })\n     * class Parent {\n     *   parentProp = 'init';\n     * }\n     *\n     * @Directive({selector: 'child', inputs: ['prop']})\n     * class Child {\n     *   constructor(public parent: Parent) {}\n     *\n     *   set prop(v) {\n     *     // this updates the parent property, which is disallowed during change detection\n     *     // this will result in ExpressionChangedAfterItHasBeenCheckedError\n     *     this.parent.parentProp = 'updated';\n     *   }\n     * }\n     * ```\n     * @stable\n     */\n    var ExpressionChangedAfterItHasBeenCheckedError = (function (_super) {\n        __extends$6(ExpressionChangedAfterItHasBeenCheckedError, _super);\n        function ExpressionChangedAfterItHasBeenCheckedError(oldValue, currValue) {\n            var msg = \"Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (oldValue === UNINITIALIZED) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            _super.call(this, msg);\n        }\n        return ExpressionChangedAfterItHasBeenCheckedError;\n    }(BaseError));\n    /**\n     * Thrown when an exception was raised during view creation, change detection or destruction.\n     *\n     * This error wraps the original exception to attach additional contextual information that can\n     * be useful for debugging.\n     * @stable\n     */\n    var ViewWrappedError = (function (_super) {\n        __extends$6(ViewWrappedError, _super);\n        function ViewWrappedError(originalError, context) {\n            _super.call(this, \"Error in \" + context.source, originalError);\n            this.context = context;\n        }\n        return ViewWrappedError;\n    }(WrappedError));\n    /**\n     * Thrown when a destroyed view is used.\n     *\n     * This error indicates a bug in the framework.\n     *\n     * This is an internal Angular error.\n     * @stable\n     */\n    var ViewDestroyedError = (function (_super) {\n        __extends$6(ViewDestroyedError, _super);\n        function ViewDestroyedError(details) {\n            _super.call(this, \"Attempt to use a destroyed view: \" + details);\n        }\n        return ViewDestroyedError;\n    }(BaseError));\n\n    var ViewUtils = (function () {\n        function ViewUtils(_renderer, sanitizer) {\n            this._renderer = _renderer;\n            this._nextCompTypeId = 0;\n            this.sanitizer = sanitizer;\n        }\n        /** @internal */\n        ViewUtils.prototype.renderComponent = function (renderComponentType) {\n            return this._renderer.renderComponent(renderComponentType);\n        };\n        ViewUtils.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ViewUtils.ctorParameters = [\n            { type: RootRenderer, },\n            { type: Sanitizer, },\n        ];\n        return ViewUtils;\n    }());\n    var nextRenderComponentTypeId = 0;\n    function createRenderComponentType(templateUrl, slotCount, encapsulation, styles, animations) {\n        return new RenderComponentType(\"\" + nextRenderComponentTypeId++, templateUrl, slotCount, encapsulation, styles, animations);\n    }\n    function addToArray(e, array) {\n        array.push(e);\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    function checkBinding(throwOnChange, oldValue, newValue) {\n        if (throwOnChange) {\n            if (!devModeEqual(oldValue, newValue)) {\n                throw new ExpressionChangedAfterItHasBeenCheckedError(oldValue, newValue);\n            }\n            return false;\n        }\n        else {\n            return !looseIdentical(oldValue, newValue);\n        }\n    }\n    function castByValue(input, value) {\n        return input;\n    }\n    var EMPTY_ARRAY = [];\n    var EMPTY_MAP = {};\n    function pureProxy1(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        return function (p0) {\n            if (!looseIdentical(v0, p0)) {\n                v0 = p0;\n                result = fn(p0);\n            }\n            return result;\n        };\n    }\n    function pureProxy2(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        return function (p0, p1) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1)) {\n                v0 = p0;\n                v1 = p1;\n                result = fn(p0, p1);\n            }\n            return result;\n        };\n    }\n    function pureProxy3(fn) {\n        var result;\n        var v0 = UNINITIALIZED;\n        var v1 = UNINITIALIZED;\n        var v2 = UNINITIALIZED;\n        return function (p0, p1, p2) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                result = fn(p0, p1, p2);\n            }\n            return result;\n        };\n    }\n    function pureProxy4(fn) {\n        var result;\n        var v0, v1, v2, v3;\n        v0 = v1 = v2 = v3 = UNINITIALIZED;\n        return function (p0, p1, p2, p3) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                result = fn(p0, p1, p2, p3);\n            }\n            return result;\n        };\n    }\n    function pureProxy5(fn) {\n        var result;\n        var v0, v1, v2, v3, v4;\n        v0 = v1 = v2 = v3 = v4 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                result = fn(p0, p1, p2, p3, p4);\n            }\n            return result;\n        };\n    }\n    function pureProxy6(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5;\n        v0 = v1 = v2 = v3 = v4 = v5 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                result = fn(p0, p1, p2, p3, p4, p5);\n            }\n            return result;\n        };\n    }\n    function pureProxy7(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                result = fn(p0, p1, p2, p3, p4, p5, p6);\n            }\n            return result;\n        };\n    }\n    function pureProxy8(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7);\n            }\n            return result;\n        };\n    }\n    function pureProxy9(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8);\n            }\n            return result;\n        };\n    }\n    function pureProxy10(fn) {\n        var result;\n        var v0, v1, v2, v3, v4, v5, v6, v7, v8, v9;\n        v0 = v1 = v2 = v3 = v4 = v5 = v6 = v7 = v8 = v9 = UNINITIALIZED;\n        return function (p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {\n            if (!looseIdentical(v0, p0) || !looseIdentical(v1, p1) || !looseIdentical(v2, p2) ||\n                !looseIdentical(v3, p3) || !looseIdentical(v4, p4) || !looseIdentical(v5, p5) ||\n                !looseIdentical(v6, p6) || !looseIdentical(v7, p7) || !looseIdentical(v8, p8) ||\n                !looseIdentical(v9, p9)) {\n                v0 = p0;\n                v1 = p1;\n                v2 = p2;\n                v3 = p3;\n                v4 = p4;\n                v5 = p5;\n                v6 = p6;\n                v7 = p7;\n                v8 = p8;\n                v9 = p9;\n                result = fn(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n            }\n            return result;\n        };\n    }\n    function setBindingDebugInfoForChanges(renderer, el, changes) {\n        Object.keys(changes).forEach(function (propName) {\n            setBindingDebugInfo(renderer, el, propName, changes[propName].currentValue);\n        });\n    }\n    function setBindingDebugInfo(renderer, el, propName, value) {\n        try {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), value ? value.toString() : null);\n        }\n        catch (e) {\n            renderer.setBindingDebugInfo(el, \"ng-reflect-\" + camelCaseToDashCase(propName), '[ERROR] Exception while trying to serialize the value');\n        }\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i - 0] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function createRenderElement(renderer, parentElement, name, attrs, debugInfo) {\n        var el = renderer.createElement(parentElement, name, debugInfo);\n        for (var i = 0; i < attrs.length; i += 2) {\n            renderer.setElementAttribute(el, attrs.get(i), attrs.get(i + 1));\n        }\n        return el;\n    }\n    function selectOrCreateRenderHostElement(renderer, elementName, attrs, rootSelectorOrNode, debugInfo) {\n        var hostElement;\n        if (isPresent(rootSelectorOrNode)) {\n            hostElement = renderer.selectRootElement(rootSelectorOrNode, debugInfo);\n            for (var i = 0; i < attrs.length; i += 2) {\n                renderer.setElementAttribute(hostElement, attrs.get(i), attrs.get(i + 1));\n            }\n        }\n        else {\n            hostElement = createRenderElement(renderer, null, elementName, attrs, debugInfo);\n        }\n        return hostElement;\n    }\n    function subscribeToRenderElement(view, element, eventNamesAndTargets, listener) {\n        var disposables = createEmptyInlineArray(eventNamesAndTargets.length / 2);\n        for (var i = 0; i < eventNamesAndTargets.length; i += 2) {\n            var eventName = eventNamesAndTargets.get(i);\n            var eventTarget = eventNamesAndTargets.get(i + 1);\n            var disposable = void 0;\n            if (eventTarget) {\n                disposable = view.renderer.listenGlobal(eventTarget, eventName, listener.bind(view, eventTarget + \":\" + eventName));\n            }\n            else {\n                disposable = view.renderer.listen(element, eventName, listener.bind(view, eventName));\n            }\n            disposables.set(i / 2, disposable);\n        }\n        return disposeInlineArray.bind(null, disposables);\n    }\n    function disposeInlineArray(disposables) {\n        for (var i = 0; i < disposables.length; i++) {\n            disposables.get(i)();\n        }\n    }\n    function noop() { }\n    function createEmptyInlineArray(length) {\n        var ctor;\n        if (length <= 2) {\n            ctor = InlineArray2;\n        }\n        else if (length <= 4) {\n            ctor = InlineArray4;\n        }\n        else if (length <= 8) {\n            ctor = InlineArray8;\n        }\n        else if (length <= 16) {\n            ctor = InlineArray16;\n        }\n        else {\n            ctor = InlineArrayDynamic;\n        }\n        return new ctor(length);\n    }\n    var InlineArray0 = (function () {\n        function InlineArray0() {\n            this.length = 0;\n        }\n        InlineArray0.prototype.get = function (index) { return undefined; };\n        InlineArray0.prototype.set = function (index, value) { };\n        return InlineArray0;\n    }());\n    var InlineArray2 = (function () {\n        function InlineArray2(length, _v0, _v1) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n        }\n        InlineArray2.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray2.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n            }\n        };\n        return InlineArray2;\n    }());\n    var InlineArray4 = (function () {\n        function InlineArray4(length, _v0, _v1, _v2, _v3) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n        }\n        InlineArray4.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray4.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n            }\n        };\n        return InlineArray4;\n    }());\n    var InlineArray8 = (function () {\n        function InlineArray8(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n        }\n        InlineArray8.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray8.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n            }\n        };\n        return InlineArray8;\n    }());\n    var InlineArray16 = (function () {\n        function InlineArray16(length, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8, _v9, _v10, _v11, _v12, _v13, _v14, _v15) {\n            this.length = length;\n            this._v0 = _v0;\n            this._v1 = _v1;\n            this._v2 = _v2;\n            this._v3 = _v3;\n            this._v4 = _v4;\n            this._v5 = _v5;\n            this._v6 = _v6;\n            this._v7 = _v7;\n            this._v8 = _v8;\n            this._v9 = _v9;\n            this._v10 = _v10;\n            this._v11 = _v11;\n            this._v12 = _v12;\n            this._v13 = _v13;\n            this._v14 = _v14;\n            this._v15 = _v15;\n        }\n        InlineArray16.prototype.get = function (index) {\n            switch (index) {\n                case 0:\n                    return this._v0;\n                case 1:\n                    return this._v1;\n                case 2:\n                    return this._v2;\n                case 3:\n                    return this._v3;\n                case 4:\n                    return this._v4;\n                case 5:\n                    return this._v5;\n                case 6:\n                    return this._v6;\n                case 7:\n                    return this._v7;\n                case 8:\n                    return this._v8;\n                case 9:\n                    return this._v9;\n                case 10:\n                    return this._v10;\n                case 11:\n                    return this._v11;\n                case 12:\n                    return this._v12;\n                case 13:\n                    return this._v13;\n                case 14:\n                    return this._v14;\n                case 15:\n                    return this._v15;\n                default:\n                    return undefined;\n            }\n        };\n        InlineArray16.prototype.set = function (index, value) {\n            switch (index) {\n                case 0:\n                    this._v0 = value;\n                    break;\n                case 1:\n                    this._v1 = value;\n                    break;\n                case 2:\n                    this._v2 = value;\n                    break;\n                case 3:\n                    this._v3 = value;\n                    break;\n                case 4:\n                    this._v4 = value;\n                    break;\n                case 5:\n                    this._v5 = value;\n                    break;\n                case 6:\n                    this._v6 = value;\n                    break;\n                case 7:\n                    this._v7 = value;\n                    break;\n                case 8:\n                    this._v8 = value;\n                    break;\n                case 9:\n                    this._v9 = value;\n                    break;\n                case 10:\n                    this._v10 = value;\n                    break;\n                case 11:\n                    this._v11 = value;\n                    break;\n                case 12:\n                    this._v12 = value;\n                    break;\n                case 13:\n                    this._v13 = value;\n                    break;\n                case 14:\n                    this._v14 = value;\n                    break;\n                case 15:\n                    this._v15 = value;\n                    break;\n            }\n        };\n        return InlineArray16;\n    }());\n    var InlineArrayDynamic = (function () {\n        // Note: We still take the length argument so this class can be created\n        // in the same ways as the other classes!\n        function InlineArrayDynamic(length) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            this.length = length;\n            this._values = values;\n        }\n        InlineArrayDynamic.prototype.get = function (index) { return this._values[index]; };\n        InlineArrayDynamic.prototype.set = function (index, value) { this._values[index] = value; };\n        return InlineArrayDynamic;\n    }());\n    var EMPTY_INLINE_ARRAY = new InlineArray0();\n\n\n    var view_utils = Object.freeze({\n        ViewUtils: ViewUtils,\n        createRenderComponentType: createRenderComponentType,\n        addToArray: addToArray,\n        interpolate: interpolate,\n        inlineInterpolate: inlineInterpolate,\n        checkBinding: checkBinding,\n        castByValue: castByValue,\n        EMPTY_ARRAY: EMPTY_ARRAY,\n        EMPTY_MAP: EMPTY_MAP,\n        pureProxy1: pureProxy1,\n        pureProxy2: pureProxy2,\n        pureProxy3: pureProxy3,\n        pureProxy4: pureProxy4,\n        pureProxy5: pureProxy5,\n        pureProxy6: pureProxy6,\n        pureProxy7: pureProxy7,\n        pureProxy8: pureProxy8,\n        pureProxy9: pureProxy9,\n        pureProxy10: pureProxy10,\n        setBindingDebugInfoForChanges: setBindingDebugInfoForChanges,\n        setBindingDebugInfo: setBindingDebugInfo,\n        createRenderElement: createRenderElement,\n        selectOrCreateRenderHostElement: selectOrCreateRenderHostElement,\n        subscribeToRenderElement: subscribeToRenderElement,\n        noop: noop,\n        InlineArray2: InlineArray2,\n        InlineArray4: InlineArray4,\n        InlineArray8: InlineArray8,\n        InlineArray16: InlineArray16,\n        InlineArrayDynamic: InlineArrayDynamic,\n        EMPTY_INLINE_ARRAY: EMPTY_INLINE_ARRAY\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     * @stable\n     */\n    var ComponentRef = (function () {\n        function ComponentRef() {\n        }\n        Object.defineProperty(ComponentRef.prototype, \"location\", {\n            /**\n             * Location of the Host Element of this Component Instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            /**\n             * The injector on which the component instance exists.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"instance\", {\n            /**\n             * The instance of the Component.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"hostView\", {\n            /**\n             * The {@link ViewRef} of the Host View of this Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef.prototype, \"changeDetectorRef\", {\n            /**\n             * The {@link ChangeDetectorRef} of the Component instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef.prototype, \"componentType\", {\n            /**\n             * The component type.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ComponentRef;\n    }());\n    var ComponentRef_ = (function (_super) {\n        __extends$5(ComponentRef_, _super);\n        function ComponentRef_(_index, _parentView, _nativeElement, _component) {\n            _super.call(this);\n            this._index = _index;\n            this._parentView = _parentView;\n            this._nativeElement = _nativeElement;\n            this._component = _component;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return this._parentView.injector(this._index); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n            get: function () { return this._component; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n            get: function () { return this._parentView.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._parentView.detachAndDestroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this.hostView.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    /**\n     * @stable\n     */\n    var ComponentFactory = (function () {\n        function ComponentFactory(selector, _viewClass, _componentType) {\n            this.selector = selector;\n            this._viewClass = _viewClass;\n            this._componentType = _componentType;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"componentType\", {\n            get: function () { return this._componentType; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            if (rootSelectorOrNode === void 0) { rootSelectorOrNode = null; }\n            var vu = injector.get(ViewUtils);\n            if (!projectableNodes) {\n                projectableNodes = [];\n            }\n            var hostView = new this._viewClass(vu, null, null, null);\n            return hostView.createHostView(rootSelectorOrNode, injector, projectableNodes);\n        };\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var NoComponentFactoryError = (function (_super) {\n        __extends$7(NoComponentFactoryError, _super);\n        function NoComponentFactoryError(component) {\n            _super.call(this, \"No component factory found for \" + stringify(component));\n            this.component = component;\n        }\n        return NoComponentFactoryError;\n    }(BaseError));\n    var _NullComponentFactoryResolver = (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw new NoComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @stable\n     */\n    var ComponentFactoryResolver = (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = (function () {\n        function CodegenComponentFactoryResolver(factories, _parent) {\n            this._parent = _parent;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var result = this._factories.get(component);\n            if (!result) {\n                result = this._parent.resolveComponentFactory(component);\n            }\n            return result;\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = global$1['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * @stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$8(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * ### Example\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo'.\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *       // reenter the Angular zone and display done\n     *       this._ngZone.run(() => {console.log('Outside Done!') });\n     *     }}));\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     * @experimental\n     */\n    var NgZone = (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this._hasPendingMicrotasks = false;\n            this._hasPendingMacrotasks = false;\n            this._isStable = true;\n            this._nesting = 0;\n            this._onUnstable = new EventEmitter(false);\n            this._onMicrotaskEmpty = new EventEmitter(false);\n            this._onStable = new EventEmitter(false);\n            this._onErrorEvents = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error('Angular requires Zone.js prolyfill.');\n            }\n            Zone.assertZonePatched();\n            this.outer = this.inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                this.inner = this.inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                this.inner = this.inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            this.forkInnerZoneWithAngularBehavior();\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn) { return this.inner.run(fn); };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn) { return this.inner.runGuarded(fn); };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) { return this.outer.run(fn); };\n        Object.defineProperty(NgZone.prototype, \"onUnstable\", {\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            get: function () { return this._onUnstable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onMicrotaskEmpty\", {\n            /**\n             * Notifies when there is no more microtasks enqueue in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            get: function () { return this._onMicrotaskEmpty; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onStable\", {\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            get: function () { return this._onStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"onError\", {\n            /**\n             * Notify that an error has been delivered.\n             */\n            get: function () { return this._onErrorEvents; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"isStable\", {\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            get: function () { return this._isStable; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMicrotasks\", {\n            get: function () { return this._hasPendingMicrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgZone.prototype, \"hasPendingMacrotasks\", {\n            get: function () { return this._hasPendingMacrotasks; },\n            enumerable: true,\n            configurable: true\n        });\n        NgZone.prototype.checkStable = function () {\n            var _this = this;\n            if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n                try {\n                    this._nesting++;\n                    this._onMicrotaskEmpty.emit(null);\n                }\n                finally {\n                    this._nesting--;\n                    if (!this._hasPendingMicrotasks) {\n                        try {\n                            this.runOutsideAngular(function () { return _this._onStable.emit(null); });\n                        }\n                        finally {\n                            this._isStable = true;\n                        }\n                    }\n                }\n            }\n        };\n        NgZone.prototype.forkInnerZoneWithAngularBehavior = function () {\n            var _this = this;\n            this.inner = this.inner.fork({\n                name: 'angular',\n                properties: { 'isAngularZone': true },\n                onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invokeTask(target, task, applyThis, applyArgs);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                    try {\n                        _this.onEnter();\n                        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                    }\n                    finally {\n                        _this.onLeave();\n                    }\n                },\n                onHasTask: function (delegate, current, target, hasTaskState) {\n                    delegate.hasTask(target, hasTaskState);\n                    if (current === target) {\n                        // We are only interested in hasTask events which originate from our zone\n                        // (A child hasTask event is not interesting to us)\n                        if (hasTaskState.change == 'microTask') {\n                            _this.setHasMicrotask(hasTaskState.microTask);\n                        }\n                        else if (hasTaskState.change == 'macroTask') {\n                            _this.setHasMacrotask(hasTaskState.macroTask);\n                        }\n                    }\n                },\n                onHandleError: function (delegate, current, target, error) {\n                    delegate.handleError(target, error);\n                    _this.triggerError(error);\n                    return false;\n                }\n            });\n        };\n        NgZone.prototype.onEnter = function () {\n            this._nesting++;\n            if (this._isStable) {\n                this._isStable = false;\n                this._onUnstable.emit(null);\n            }\n        };\n        NgZone.prototype.onLeave = function () {\n            this._nesting--;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMicrotask = function (hasMicrotasks) {\n            this._hasPendingMicrotasks = hasMicrotasks;\n            this.checkStable();\n        };\n        NgZone.prototype.setHasMacrotask = function (hasMacrotasks) { this._hasPendingMacrotasks = hasMacrotasks; };\n        NgZone.prototype.triggerError = function (error) { this._onErrorEvents.emit(error); };\n        return NgZone;\n    }());\n\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = (function () {\n        function Testability(_ngZone) {\n            this._ngZone = _ngZone;\n            /** @internal */\n            this._pendingCount = 0;\n            /** @internal */\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            /** @internal */\n            this._callbacks = [];\n            this._watchAngularEvents();\n        }\n        /** @internal */\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        /** @internal */\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        (_this._callbacks.pop())(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Not Ready\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.whenStable = function (callback) {\n            this._callbacks.push(callback);\n            this._runCallbacksIfReady();\n        };\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /** @deprecated use findProviders */\n        Testability.prototype.findBindings = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = [\n            { type: NgZone, },\n        ];\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem); };\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = [];\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @stable\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlaformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var marker = new OpaqueToken(\"Platform: \" + name);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            if (!getPlatform()) {\n                if (parentPlaformFactory) {\n                    parentPlaformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform\n     * which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when {@link bootstrap}() is called, or\n     * explicitly by calling {@link createPlatform}().\n     *\n     * @stable\n     */\n    var PlatformRef = (function () {\n        function PlatformRef() {\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            throw unimplemented();\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * ## Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         * @stable\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            throw unimplemented();\n        };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { throw unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return PlatformRef;\n    }());\n    function _callAndReportToErrorHandler(errorHandler, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    errorHandler.handleError(e);\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            errorHandler.handleError(e);\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    var PlatformRef_ = (function (_super) {\n        __extends$3(PlatformRef_, _super);\n        function PlatformRef_(_injector) {\n            _super.call(this);\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n            return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            if (!ngZone)\n                ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = ReflectiveInjector.resolveAndCreate([{ provide: NgZone, useValue: ngZone }], _this.injector);\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return ListWrapper.remove(_this._modules, moduleRef); });\n                ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n                return _callAndReportToErrorHandler(exceptionHandler, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n        };\n        PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone, componentFactoryCallback) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n            // ugly internal api hack: generate host component factories for all declared components and\n            // pass the factories into the callback - this is used by UpdateAdapter to get hold of all\n            // factories.\n            if (componentFactoryCallback) {\n                return compiler.compileModuleAndAllComponentsAsync(moduleType)\n                    .then(function (_a) {\n                    var ngModuleFactory = _a.ngModuleFactory, componentFactories = _a.componentFactories;\n                    componentFactoryCallback(componentFactories);\n                    return _this._bootstrapModuleFactoryWithZone(ngModuleFactory, ngZone);\n                });\n            }\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n        };\n        PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef.bootstrapFactories.length > 0) {\n                moduleRef.bootstrapFactories.forEach(function (compFactory) { return appRef.bootstrap(compFactory); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error((\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \") +\n                    \"Please define one of these.\");\n            }\n        };\n        PlatformRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        PlatformRef_.ctorParameters = [\n            { type: Injector, },\n        ];\n        return PlatformRef_;\n    }(PlatformRef));\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * For more about Angular applications, see the documentation for {@link bootstrap}.\n     *\n     * @stable\n     */\n    var ApplicationRef = (function () {\n        function ApplicationRef() {\n        }\n        Object.defineProperty(ApplicationRef.prototype, \"componentTypes\", {\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(ApplicationRef.prototype, \"components\", {\n            /**\n             * Get a list of components registered to this application.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ApplicationRef;\n    }());\n    var ApplicationRef_ = (function (_super) {\n        __extends$3(ApplicationRef_, _super);\n        function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus, _testabilityRegistry, _testability) {\n            var _this = this;\n            _super.call(this);\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._testabilityRegistry = _testabilityRegistry;\n            this._testability = _testability;\n            this._bootstrapListeners = [];\n            this._rootComponents = [];\n            this._rootComponentTypes = [];\n            this._changeDetectorRefs = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        }\n        ApplicationRef_.prototype.registerChangeDetector = function (changeDetector) {\n            this._changeDetectorRefs.push(changeDetector);\n        };\n        ApplicationRef_.prototype.unregisterChangeDetector = function (changeDetector) {\n            ListWrapper.remove(this._changeDetectorRefs, changeDetector);\n        };\n        ApplicationRef_.prototype.bootstrap = function (componentOrFactory) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this._rootComponentTypes.push(componentFactory.componentType);\n            var compRef = componentFactory.create(this._injector, [], componentFactory.selector);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular 2 is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /** @internal */\n        ApplicationRef_.prototype._loadComponent = function (componentRef) {\n            this._changeDetectorRefs.push(componentRef.changeDetectorRef);\n            this.tick();\n            this._rootComponents.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, [])\n                .concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        /** @internal */\n        ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n            if (this._rootComponents.indexOf(componentRef) == -1) {\n                return;\n            }\n            this.unregisterChangeDetector(componentRef.changeDetectorRef);\n            ListWrapper.remove(this._rootComponents, componentRef);\n        };\n        ApplicationRef_.prototype.tick = function () {\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_._tickScope();\n            try {\n                this._runningTick = true;\n                this._changeDetectorRefs.forEach(function (detector) { return detector.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._changeDetectorRefs.forEach(function (detector) { return detector.checkNoChanges(); });\n                }\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        ApplicationRef_.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._rootComponents.slice().forEach(function (component) { return component.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n            get: function () { return this._rootComponentTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n            get: function () { return this._rootComponents; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef_.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        ApplicationRef_.ctorParameters = [\n            { type: NgZone, },\n            { type: Console, },\n            { type: Injector, },\n            { type: ErrorHandler, },\n            { type: ComponentFactoryResolver, },\n            { type: ApplicationInitStatus, },\n            { type: TestabilityRegistry, decorators: [{ type: Optional },] },\n            { type: Testability, decorators: [{ type: Optional },] },\n        ];\n        return ApplicationRef_;\n    }(ApplicationRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @stable\n     */\n    var NgModuleRef = (function () {\n        function NgModuleRef() {\n        }\n        Object.defineProperty(NgModuleRef.prototype, \"injector\", {\n            /**\n             * The injector that contains all of the providers of the NgModule.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"componentFactoryResolver\", {\n            /**\n             * The ComponentFactoryResolver to get hold of the ComponentFactories\n             * declared in the `entryComponents` property of the module.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef.prototype, \"instance\", {\n            /**\n             * The NgModule instance.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = (function () {\n        function NgModuleFactory(_injectorClass, _moduleType) {\n            this._injectorClass = _injectorClass;\n            this._moduleType = _moduleType;\n        }\n        Object.defineProperty(NgModuleFactory.prototype, \"moduleType\", {\n            get: function () { return this._moduleType; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            if (!parentInjector) {\n                parentInjector = Injector.NULL;\n            }\n            var instance = new this._injectorClass(parentInjector);\n            instance.create();\n            return instance;\n        };\n        return NgModuleFactory;\n    }());\n    var _UNDEFINED = new Object();\n    var NgModuleInjector = (function (_super) {\n        __extends$9(NgModuleInjector, _super);\n        function NgModuleInjector(parent, factories, bootstrapFactories) {\n            _super.call(this, factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n            this.parent = parent;\n            this.bootstrapFactories = bootstrapFactories;\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        NgModuleInjector.prototype.create = function () { this.instance = this.createInternal(); };\n        NgModuleInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (token === Injector || token === ComponentFactoryResolver) {\n                return this;\n            }\n            var result = this.getInternal(token, _UNDEFINED);\n            return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n        };\n        Object.defineProperty(NgModuleInjector.prototype, \"injector\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleInjector.prototype, \"componentFactoryResolver\", {\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleInjector.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            this.destroyInternal();\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleInjector.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleInjector;\n    }(CodegenComponentFactoryResolver));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     * @stable\n     */\n    var NgModuleFactoryLoader = (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link Query} and {@link ViewQueryMetadata} provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     * @stable\n     */\n    var QueryList = (function () {\n        function QueryList() {\n            this._dirty = true;\n            this._results = [];\n            this._emitter = new EventEmitter();\n        }\n        Object.defineProperty(QueryList.prototype, \"changes\", {\n            get: function () { return this._emitter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"length\", {\n            get: function () { return this._results.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"first\", {\n            get: function () { return this._results[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList.prototype, \"last\", {\n            get: function () { return this._results[this.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) { return this._results.find(fn); };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = ListWrapper.flatten(res);\n            this._dirty = false;\n        };\n        QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this._dirty = true; };\n        Object.defineProperty(QueryList.prototype, \"dirty\", {\n            /** internal */\n            get: function () { return this._dirty; },\n            enumerable: true,\n            configurable: true\n        });\n        return QueryList;\n    }());\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable },\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = [\n            { type: Compiler, },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n        ];\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<template>` element (or\n     * directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into the\n     * constructor of the directive using the `TemplateRef` Token. Alternatively you can query for the\n     * `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use\n     * {@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n     * View Container.\n     * @stable\n     */\n    var TemplateRef = (function () {\n        function TemplateRef() {\n        }\n        Object.defineProperty(TemplateRef.prototype, \"elementRef\", {\n            /**\n             * The location in the View where the Embedded View logically belongs to.\n             *\n             * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n             * inherit from the contexts of this location.\n             *\n             * Typically new Embedded Views are attached to the View Container of this location, but in\n             * advanced use-cases, the View can be attached to a different container while keeping the\n             * data-binding and injection context from the original location.\n             *\n             */\n            // TODO(i): rename to anchor or location\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef;\n    }());\n    var TemplateRef_ = (function (_super) {\n        __extends$10(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _nodeIndex, _nativeElement) {\n            _super.call(this);\n            this._parentView = _parentView;\n            this._nodeIndex = _nodeIndex;\n            this._nativeElement = _nativeElement;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            var view = this._parentView.createEmbeddedViewInternal(this._nodeIndex);\n            view.create(context || {});\n            return view.ref;\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this._nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     * @stable\n     */\n    var ViewContainerRef = (function () {\n        function ViewContainerRef() {\n        }\n        Object.defineProperty(ViewContainerRef.prototype, \"element\", {\n            /**\n             * Anchor element that specifies the location of this container in the containing View.\n             * <!-- TODO: rename to anchorElement -->\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"injector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"parentInjector\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            /**\n             * Returns the number of Views currently attached to this container.\n             */\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return ViewContainerRef;\n    }());\n    var ViewContainerRef_ = (function () {\n        function ViewContainerRef_(_element) {\n            this._element = _element;\n            /** @internal */\n            this._createComponentInContainerScope = wtfCreateScope('ViewContainerRef#createComponent()');\n            /** @internal */\n            this._insertScope = wtfCreateScope('ViewContainerRef#insert()');\n            /** @internal */\n            this._removeScope = wtfCreateScope('ViewContainerRef#remove()');\n            /** @internal */\n            this._detachScope = wtfCreateScope('ViewContainerRef#detach()');\n        }\n        ViewContainerRef_.prototype.get = function (index) { return this._element.nestedViews[index].ref; };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () {\n                var views = this._element.nestedViews;\n                return isPresent(views) ? views.length : 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return this._element.elementRef; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return this._element.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () { return this._element.parentInjector; },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(rado): profile and decide whether bounds checks should be added\n        // to the methods below.\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            if (context === void 0) { context = null; }\n            if (index === void 0) { index = -1; }\n            var viewRef = templateRef.createEmbeddedView(context);\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes) {\n            if (index === void 0) { index = -1; }\n            if (injector === void 0) { injector = null; }\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            var s = this._createComponentInContainerScope();\n            var contextInjector = injector || this._element.parentInjector;\n            var componentRef = componentFactory.create(contextInjector, projectableNodes);\n            this.insert(componentRef.hostView, index);\n            return wtfLeave(s, componentRef);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (index === void 0) { index = -1; }\n            var s = this._insertScope();\n            if (index == -1)\n                index = this.length;\n            var viewRef_ = viewRef;\n            this._element.attachView(viewRef_.internalView, index);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            var s = this._insertScope();\n            if (currentIndex == -1)\n                return;\n            var viewRef_ = viewRef;\n            this._element.moveView(viewRef_.internalView, currentIndex);\n            return wtfLeave(s, viewRef_);\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._element.nestedViews.indexOf(viewRef.internalView);\n        };\n        // TODO(i): rename to destroy\n        ViewContainerRef_.prototype.remove = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._removeScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            view.destroy();\n            // view is intentionally not returned to the client.\n            wtfLeave(s);\n        };\n        // TODO(i): refactor insert+remove into move\n        ViewContainerRef_.prototype.detach = function (index) {\n            if (index === void 0) { index = -1; }\n            var s = this._detachScope();\n            if (index == -1)\n                index = this.length - 1;\n            var view = this._element.detachView(index);\n            return wtfLeave(s, view.ref);\n        };\n        ViewContainerRef_.prototype.clear = function () {\n            for (var i = this.length - 1; i >= 0; i--) {\n                this.remove(i);\n            }\n        };\n        return ViewContainerRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _queuedAnimations = [];\n    /** @internal */\n    function queueAnimationGlobally(player) {\n        _queuedAnimations.push(player);\n    }\n    /** @internal */\n    function triggerQueuedAnimations() {\n        // this code is wrapped into a single promise such that the\n        // onStart and onDone player callbacks are triggered outside\n        // of the digest cycle of animations\n        if (_queuedAnimations.length) {\n            Promise.resolve(null).then(_triggerAnimations);\n        }\n    }\n    function _triggerAnimations() {\n        for (var i = 0; i < _queuedAnimations.length; i++) {\n            var player = _queuedAnimations[i];\n            player.play();\n        }\n        _queuedAnimations = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @stable\n     */\n    var ViewRef = (function () {\n        function ViewRef() {\n        }\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        return ViewRef;\n    }());\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two {@link TemplateRef}s:\n     *\n     * Outer {@link TemplateRef}:\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <template ngFor let-item [ngForOf]=\"items\"></template>\n     * </ul>\n     * ```\n     *\n     * Inner {@link TemplateRef}:\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n     *\n     * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <template view-container-ref></template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = (function (_super) {\n        __extends$11(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(EmbeddedViewRef.prototype, \"context\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(EmbeddedViewRef.prototype, \"rootNodes\", {\n            get: function () { return unimplemented(); },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return EmbeddedViewRef;\n    }(ViewRef));\n    var ViewRef_ = (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._view = _view;\n            this._originalMode = this._view.cdMode;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"internalView\", {\n            get: function () { return this._view; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return this._view.flatRootNodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return this._view.destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { this._view.markPathToRootAsCheckOnce(); };\n        ViewRef_.prototype.detach = function () { this._view.cdMode = ChangeDetectorStatus.Detached; };\n        ViewRef_.prototype.detectChanges = function () {\n            this._view.detectChanges(false);\n            triggerQueuedAnimations();\n        };\n        ViewRef_.prototype.checkNoChanges = function () { this._view.detectChanges(true); };\n        ViewRef_.prototype.reattach = function () {\n            this._view.cdMode = this._originalMode;\n            this.markForCheck();\n        };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () { this._view.detachAndDestroy(); };\n        return ViewRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var EventListener = (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        ;\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = (function () {\n        function DebugNode(nativeNode, parent, _debugInfo) {\n            this._debugInfo = _debugInfo;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugInfo ? this._debugInfo.injector : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugInfo ? this._debugInfo.component : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugInfo ? this._debugInfo.context : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () {\n                return this._debugInfo ? this._debugInfo.references : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugInfo ? this._debugInfo.providerTokens : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"source\", {\n            get: function () { return this._debugInfo ? this._debugInfo.source : null; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = (function (_super) {\n        __extends$12(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugInfo) {\n            _super.call(this, nativeNode, parent, _debugInfo);\n            this.properties = {};\n            this.attributes = {};\n            this.classes = {};\n            this.styles = {};\n            this.childNodes = [];\n            this.nativeElement = nativeNode;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                var previousChildren = this.childNodes.slice(0, siblingIndex + 1);\n                var nextChildren = this.childNodes.slice(siblingIndex + 1);\n                this.childNodes = previousChildren.concat(newChildren, nextChildren);\n                for (var i = 0; i < newChildren.length; ++i) {\n                    var newChild = newChildren[i];\n                    if (newChild.parent) {\n                        newChild.parent.removeChild(newChild);\n                    }\n                    newChild.parent = this;\n                }\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode);\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    function _reflector() {\n        return reflector;\n    }\n    var _CORE_PLATFORM_PROVIDERS = [\n        PlatformRef_,\n        { provide: PlatformRef, useExisting: PlatformRef_ },\n        { provide: Reflector, useFactory: _reflector, deps: [] },\n        { provide: ReflectorReader, useExisting: Reflector },\n        TestabilityRegistry,\n        Console,\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new OpaqueToken('LocaleId');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new OpaqueToken('Translations');\n    /**\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new OpaqueToken('TranslationsFormat');\n\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = (function () {\n        function ApplicationModule() {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef_,\n                            { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            ViewUtils,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            { provide: LOCALE_ID, useValue: 'en-US' },\n                        ]\n                    },] },\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = [];\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FILL_STYLE_FLAG = 'true'; // TODO (matsko): change to boolean\n    var ANY_STATE = '*';\n    var DEFAULT_STATE = '*';\n    var EMPTY_STATE = 'void';\n\n    var AnimationGroupPlayer = (function () {\n        function AnimationGroupPlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            var count = 0;\n            var total = this._players.length;\n            if (total == 0) {\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else {\n                this._players.forEach(function (player) {\n                    player.parentPlayer = _this;\n                    player.onDone(function () {\n                        if (++count >= total) {\n                            _this._onFinish();\n                        }\n                    });\n                });\n            }\n        }\n        AnimationGroupPlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationGroupPlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._players.forEach(function (player) { return player.play(); });\n        };\n        AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n        AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n        AnimationGroupPlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationGroupPlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n            }\n        };\n        AnimationGroupPlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        AnimationGroupPlayer.prototype.setPosition = function (p /** TODO #9100 */) {\n            this._players.forEach(function (player) { player.setPosition(p); });\n        };\n        AnimationGroupPlayer.prototype.getPosition = function () {\n            var min = 0;\n            this._players.forEach(function (player) {\n                var p = player.getPosition();\n                min = Math.min(p, min);\n            });\n            return min;\n        };\n        return AnimationGroupPlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationKeyframe = (function () {\n        function AnimationKeyframe(offset, styles) {\n            this.offset = offset;\n            this.styles = styles;\n        }\n        return AnimationKeyframe;\n    }());\n\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationPlayer = (function () {\n        function AnimationPlayer() {\n        }\n        Object.defineProperty(AnimationPlayer.prototype, \"parentPlayer\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            set: function (player) { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationPlayer;\n    }());\n    var NoOpAnimationPlayer = (function () {\n        function NoOpAnimationPlayer() {\n            var _this = this;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._started = false;\n            this.parentPlayer = null;\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        /** @internal */\n        NoOpAnimationPlayer.prototype._onFinish = function () {\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        };\n        NoOpAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        NoOpAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        NoOpAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n        NoOpAnimationPlayer.prototype.init = function () { };\n        NoOpAnimationPlayer.prototype.play = function () {\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n            }\n            this._started = true;\n        };\n        NoOpAnimationPlayer.prototype.pause = function () { };\n        NoOpAnimationPlayer.prototype.restart = function () { };\n        NoOpAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n        NoOpAnimationPlayer.prototype.destroy = function () { };\n        NoOpAnimationPlayer.prototype.reset = function () { };\n        NoOpAnimationPlayer.prototype.setPosition = function (p /** TODO #9100 */) { };\n        NoOpAnimationPlayer.prototype.getPosition = function () { return 0; };\n        return NoOpAnimationPlayer;\n    }());\n\n    var AnimationSequencePlayer = (function () {\n        function AnimationSequencePlayer(_players) {\n            var _this = this;\n            this._players = _players;\n            this._currentIndex = 0;\n            this._onDoneFns = [];\n            this._onStartFns = [];\n            this._finished = false;\n            this._started = false;\n            this._destroyed = false;\n            this.parentPlayer = null;\n            this._players.forEach(function (player) { player.parentPlayer = _this; });\n            this._onNext(false);\n        }\n        AnimationSequencePlayer.prototype._onNext = function (start) {\n            var _this = this;\n            if (this._finished)\n                return;\n            if (this._players.length == 0) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                scheduleMicroTask(function () { return _this._onFinish(); });\n            }\n            else if (this._currentIndex >= this._players.length) {\n                this._activePlayer = new NoOpAnimationPlayer();\n                this._onFinish();\n            }\n            else {\n                var player = this._players[this._currentIndex++];\n                player.onDone(function () { return _this._onNext(true); });\n                this._activePlayer = player;\n                if (start) {\n                    player.play();\n                }\n            }\n        };\n        AnimationSequencePlayer.prototype._onFinish = function () {\n            if (!this._finished) {\n                this._finished = true;\n                this._onDoneFns.forEach(function (fn) { return fn(); });\n                this._onDoneFns = [];\n            }\n        };\n        AnimationSequencePlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n        AnimationSequencePlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n        AnimationSequencePlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n        AnimationSequencePlayer.prototype.hasStarted = function () { return this._started; };\n        AnimationSequencePlayer.prototype.play = function () {\n            if (!isPresent(this.parentPlayer)) {\n                this.init();\n            }\n            if (!this.hasStarted()) {\n                this._onStartFns.forEach(function (fn) { return fn(); });\n                this._onStartFns = [];\n                this._started = true;\n            }\n            this._activePlayer.play();\n        };\n        AnimationSequencePlayer.prototype.pause = function () { this._activePlayer.pause(); };\n        AnimationSequencePlayer.prototype.restart = function () {\n            this.reset();\n            if (this._players.length > 0) {\n                this._players[0].restart();\n            }\n        };\n        AnimationSequencePlayer.prototype.reset = function () {\n            this._players.forEach(function (player) { return player.reset(); });\n            this._destroyed = false;\n            this._finished = false;\n            this._started = false;\n        };\n        AnimationSequencePlayer.prototype.finish = function () {\n            this._onFinish();\n            this._players.forEach(function (player) { return player.finish(); });\n        };\n        AnimationSequencePlayer.prototype.destroy = function () {\n            if (!this._destroyed) {\n                this._onFinish();\n                this._players.forEach(function (player) { return player.destroy(); });\n                this._destroyed = true;\n                this._activePlayer = new NoOpAnimationPlayer();\n            }\n        };\n        AnimationSequencePlayer.prototype.setPosition = function (p /** TODO #9100 */) { this._players[0].setPosition(p); };\n        AnimationSequencePlayer.prototype.getPosition = function () { return this._players[0].getPosition(); };\n        return AnimationSequencePlayer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AUTO_STYLE = '*';\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link trigger trigger\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationEntryMetadata = (function () {\n        function AnimationEntryMetadata(name, definitions) {\n            this.name = name;\n            this.definitions = definitions;\n        }\n        return AnimationEntryMetadata;\n    }());\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateMetadata = (function () {\n        function AnimationStateMetadata() {\n        }\n        return AnimationStateMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link state state animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateDeclarationMetadata = (function (_super) {\n        __extends$13(AnimationStateDeclarationMetadata, _super);\n        function AnimationStateDeclarationMetadata(stateNameExpr, styles) {\n            _super.call(this);\n            this.stateNameExpr = stateNameExpr;\n            this.styles = styles;\n        }\n        return AnimationStateDeclarationMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the\n     * {@link transition transition animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStateTransitionMetadata = (function (_super) {\n        __extends$13(AnimationStateTransitionMetadata, _super);\n        function AnimationStateTransitionMetadata(stateChangeExpr, steps) {\n            _super.call(this);\n            this.stateChangeExpr = stateChangeExpr;\n            this.steps = steps;\n        }\n        return AnimationStateTransitionMetadata;\n    }(AnimationStateMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationMetadata = (function () {\n        function AnimationMetadata() {\n        }\n        return AnimationMetadata;\n    }());\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link keyframes keyframes\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationKeyframesSequenceMetadata = (function (_super) {\n        __extends$13(AnimationKeyframesSequenceMetadata, _super);\n        function AnimationKeyframesSequenceMetadata(steps) {\n            _super.call(this);\n            this.steps = steps;\n        }\n        return AnimationKeyframesSequenceMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link style style animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationStyleMetadata = (function (_super) {\n        __extends$13(AnimationStyleMetadata, _super);\n        function AnimationStyleMetadata(styles, offset) {\n            if (offset === void 0) { offset = null; }\n            _super.call(this);\n            this.styles = styles;\n            this.offset = offset;\n        }\n        return AnimationStyleMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link animate animate\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationAnimateMetadata = (function (_super) {\n        __extends$13(AnimationAnimateMetadata, _super);\n        function AnimationAnimateMetadata(timings, styles) {\n            _super.call(this);\n            this.timings = timings;\n            this.styles = styles;\n        }\n        return AnimationAnimateMetadata;\n    }(AnimationMetadata));\n    /**\n     * @experimental Animation support is experimental.\n     */\n    var AnimationWithStepsMetadata = (function (_super) {\n        __extends$13(AnimationWithStepsMetadata, _super);\n        function AnimationWithStepsMetadata() {\n            _super.call(this);\n        }\n        Object.defineProperty(AnimationWithStepsMetadata.prototype, \"steps\", {\n            get: function () { throw new Error('NOT IMPLEMENTED: Base Class'); },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationWithStepsMetadata;\n    }(AnimationMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link sequence sequence\n     * animation function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationSequenceMetadata = (function (_super) {\n        __extends$13(AnimationSequenceMetadata, _super);\n        function AnimationSequenceMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationSequenceMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationSequenceMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * Metadata representing the entry of animations.\n     * Instances of this class are provided via the animation DSL when the {@link group group animation\n     * function} is called.\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationGroupMetadata = (function (_super) {\n        __extends$13(AnimationGroupMetadata, _super);\n        function AnimationGroupMetadata(_steps) {\n            _super.call(this);\n            this._steps = _steps;\n        }\n        Object.defineProperty(AnimationGroupMetadata.prototype, \"steps\", {\n            get: function () { return this._steps; },\n            enumerable: true,\n            configurable: true\n        });\n        return AnimationGroupMetadata;\n    }(AnimationWithStepsMetadata));\n    /**\n     * `animate` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `animate` specifies an animation step that will apply the provided `styles` data for a given\n     * amount of\n     * time based on the provided `timing` expression value. Calls to `animate` are expected to be\n     * used within {@link sequence an animation sequence}, {@link group group}, or {@link transition\n     * transition}.\n     *\n     * ### Usage\n     *\n     * The `animate` function accepts two input parameters: `timing` and `styles`:\n     *\n     * - `timing` is a string based value that can be a combination of a duration with optional\n     * delay and easing values. The format for the expression breaks down to `duration delay easing`\n     * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n     * delay=100, easing=ease-out`.\n     * If a numeric value is provided then that will be used as the `duration` value in millisecond\n     * form.\n     * - `styles` is the style input data which can either be a call to {@link style style} or {@link\n     * keyframes keyframes}.\n     * If left empty then the styles from the destination state will be collected and used (this is\n     * useful when\n     * describing an animation step that will complete an animation by {@link\n     * transition#the-final-animate-call animating to the final state}).\n     *\n     * ```typescript\n     * // various functions for specifying timing data\n     * animate(500, style(...))\n     * animate(\"1s\", style(...))\n     * animate(\"100ms 0.5s\", style(...))\n     * animate(\"5s ease\", style(...))\n     * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n     *\n     * // either style() of keyframes() can be used\n     * animate(500, style({ background: \"red\" }))\n     * animate(500, keyframes([\n     *   style({ background: \"blue\" })),\n     *   style({ background: \"red\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function animate(timing, styles) {\n        if (styles === void 0) { styles = null; }\n        var stylesEntry = styles;\n        if (!isPresent(stylesEntry)) {\n            var EMPTY_STYLE = {};\n            stylesEntry = new AnimationStyleMetadata([EMPTY_STYLE], 1);\n        }\n        return new AnimationAnimateMetadata(timing, stylesEntry);\n    }\n    /**\n     * `group` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `group` specifies a list of animation steps that are all run in parallel. Grouped animations\n     * are useful when a series of styles must be animated/closed off\n     * at different statrting/ending times.\n     *\n     * The `group` function can either be used within a {@link sequence sequence} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once all of the inner animation steps\n     * have completed.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `group` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. Each call to `style()` or\n     * `animate()`\n     * within a group will be executed instantly (use {@link keyframes keyframes} or a\n     * {@link animate#usage animate() with a delay value} to offset styles to be applied at a later\n     * time).\n     *\n     * ```typescript\n     * group([\n     *   animate(\"1s\", { background: \"black\" }))\n     *   animate(\"2s\", { color: \"white\" }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function group(steps) {\n        return new AnimationGroupMetadata(steps);\n    }\n    /**\n     * `sequence` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used\n     * by default when an array is passed as animation data into {@link transition transition}.)\n     *\n     * The `sequence` function can either be used within a {@link group group} or a {@link transition\n     * transition}\n     * and it will only continue to the next instruction once each of the inner animation steps\n     * have completed.\n     *\n     * To perform animation styling in parallel with other animation steps then\n     * have a look at the {@link group group} animation function.\n     *\n     * ### Usage\n     *\n     * The `steps` data that is passed into the `sequence` animation function can either consist\n     * of {@link style style} or {@link animate animate} function calls. A call to `style()` will apply\n     * the\n     * provided styling data immediately while a call to `animate()` will apply its styling\n     * data over a given time depending on its timing data.\n     *\n     * ```typescript\n     * sequence([\n     *   style({ opacity: 0 })),\n     *   animate(\"1s\", { opacity: 1 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function sequence(steps) {\n        return new AnimationSequenceMetadata(steps);\n    }\n    /**\n     * `style` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `style` declares a key/value object containing CSS properties/styles that can then\n     * be used for {@link state animation states}, within an {@link sequence animation sequence}, or as\n     * styling data for both {@link animate animate} and {@link keyframes keyframes}.\n     *\n     * ### Usage\n     *\n     * `style` takes in a key/value string map as data and expects one or more CSS property/value\n     * pairs to be defined.\n     *\n     * ```typescript\n     * // string values are used for css properties\n     * style({ background: \"red\", color: \"blue\" })\n     *\n     * // numerical (pixel) values are also supported\n     * style({ width: 100, height: 0 })\n     * ```\n     *\n     * #### Auto-styles (using `*`)\n     *\n     * When an asterix (`*`) character is used as a value then it will be detected from the element\n     * being animated\n     * and applied as animation data when the animation starts.\n     *\n     * This feature proves useful for a state depending on layout and/or environment factors; in such\n     * cases\n     * the styles are calculated just before the animation starts.\n     *\n     * ```typescript\n     * // the steps below will animate from 0 to the\n     * // actual height of the element\n     * style({ height: 0 }),\n     * animate(\"1s\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function style(tokens) {\n        var input;\n        var offset = null;\n        if (typeof tokens === 'string') {\n            input = [tokens];\n        }\n        else {\n            if (Array.isArray(tokens)) {\n                input = tokens;\n            }\n            else {\n                input = [tokens];\n            }\n            input.forEach(function (entry) {\n                var entryOffset = entry['offset'];\n                if (isPresent(entryOffset)) {\n                    offset = offset == null ? parseFloat(entryOffset) : offset;\n                }\n            });\n        }\n        return new AnimationStyleMetadata(input, offset);\n    }\n    /**\n     * `state` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `state` declares an animation state within the given trigger. When a state is\n     * active within a component then its associated styles will persist on\n     * the element that the trigger is attached to (even when the animation ends).\n     *\n     * To animate between states, have a look at the animation {@link transition transition}\n     * DSL function. To register states to an animation trigger please have a look\n     * at the {@link trigger trigger} function.\n     *\n     * #### The `void` state\n     *\n     * The `void` state value is a reserved word that angular uses to determine when the element is not\n     * apart\n     * of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n     * associated element\n     * is void).\n     *\n     * #### The `*` (default) state\n     *\n     * The `*` state (when styled) is a fallback state that will be used if\n     * the state that is being animated is not declared within the trigger.\n     *\n     * ### Usage\n     *\n     * `state` will declare an animation state with its associated styles\n     * within the given trigger.\n     *\n     * - `stateNameExpr` can be one or more state names separated by commas.\n     * - `styles` refers to the {@link style styling data} that will be persisted on the element once\n     * the state\n     * has been reached.\n     *\n     * ```typescript\n     * // \"void\" is a reserved name for a state and is used to represent\n     * // the state in which an element is detached from from the application.\n     * state(\"void\", style({ height: 0 }))\n     *\n     * // user-defined states\n     * state(\"closed\", style({ height: 0 }))\n     * state(\"open, visible\", style({ height: \"*\" }))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function state(stateNameExpr, styles) {\n        return new AnimationStateDeclarationMetadata(stateNameExpr, styles);\n    }\n    /**\n     * `keyframes` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `keyframes` specifies a collection of {@link style style} entries each optionally characterized\n     * by an `offset` value.\n     *\n     * ### Usage\n     *\n     * The `keyframes` animation function is designed to be used alongside the {@link animate animate}\n     * animation function. Instead of applying animations from where they are\n     * currently to their destination, keyframes can describe how each style entry is applied\n     * and at what point within the animation arc (much like CSS Keyframe Animations do).\n     *\n     * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at\n     * what percentage of the animate time the styles will be applied.\n     *\n     * ```typescript\n     * // the provided offset values describe when each backgroundColor value is applied.\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\", offset: 0 }),\n     *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n     *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n     *   style({ backgroundColor: \"black\", offset: 1 })\n     * ]))\n     * ```\n     *\n     * Alternatively, if there are no `offset` values used within the style entries then the offsets\n     * will\n     * be calculated automatically.\n     *\n     * ```typescript\n     * animate(\"5s\", keyframes([\n     *   style({ backgroundColor: \"red\" }) // offset = 0\n     *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n     *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n     *   style({ backgroundColor: \"black\" }) // offset = 1\n     * ]))\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function keyframes(steps) {\n        return new AnimationKeyframesSequenceMetadata(steps);\n    }\n    /**\n     * `transition` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `transition` declares the {@link sequence sequence of animation steps} that will be run when the\n     * provided\n     * `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 => state2`\n     * which consists\n     * of two known states (use an asterix (`*`) to refer to a dynamic starting and/or ending state).\n     *\n     * Animation transitions are placed within an {@link trigger animation trigger}. For an transition\n     * to animate to\n     * a state value and persist its styles then one or more {@link state animation states} is expected\n     * to be defined.\n     *\n     * ### Usage\n     *\n     * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n     * what the\n     * previous state is and what the current state has become. In other words, if a transition is\n     * defined that\n     * matches the old/current state criteria then the associated animation will be triggered.\n     *\n     * ```typescript\n     * // all transition/state changes are defined within an animation trigger\n     * trigger(\"myAnimationTrigger\", [\n     *   // if a state is defined then its styles will be persisted when the\n     *   // animation has fully completed itself\n     *   state(\"on\", style({ background: \"green\" })),\n     *   state(\"off\", style({ background: \"grey\" })),\n     *\n     *   // a transition animation that will be kicked off when the state value\n     *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n     *   transition(\"on => off\", animate(500)),\n     *\n     *   // it is also possible to do run the same animation for both directions\n     *   transition(\"on <=> off\", animate(500)),\n     *\n     *   // or to define multiple states pairs separated by commas\n     *   transition(\"on => off, off => void\", animate(500)),\n     *\n     *   // this is a catch-all state change for when an element is inserted into\n     *   // the page and the destination state is unknown\n     *   transition(\"void => *\", [\n     *     style({ opacity: 0 }),\n     *     animate(500)\n     *   ]),\n     *\n     *   // this will capture a state change between any states\n     *   transition(\"* => *\", animate(\"1s 0s\")),\n     * ])\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * #### The final `animate` call\n     *\n     * If the final step within the transition steps is a call to `animate()` that **only**\n     * uses a timing value with **no style data** then it will be automatically used as the final\n     * animation\n     * arc for the element to animate itself to the final state. This involves an automatic mix of\n     * adding/removing CSS styles so that the element will be in the exact state it should be for the\n     * applied state to be presented correctly.\n     *\n     * ```\n     * // start off by hiding the element, but make sure that it animates properly to whatever state\n     * // is currently active for \"myAnimationTrigger\"\n     * transition(\"void => *\", [\n     *   style({ opacity: 0 }),\n     *   animate(500)\n     * ])\n     * ```\n     *\n     * ### Transition Aliases (`:enter` and `:leave`)\n     *\n     * Given that enter (insertion) and leave (removal) animations are so common,\n     * the `transition` function accepts both `:enter` and `:leave` values which\n     * are aliases for the `void => *` and `* => void` state changes.\n     *\n     * ```\n     * transition(\":enter\", [\n     *   style({ opacity: 0 }),\n     *   animate(500, style({ opacity: 1 }))\n     * ])\n     * transition(\":leave\", [\n     *   animate(500, style({ opacity: 0 }))\n     * ])\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function transition(stateChangeExpr, steps) {\n        var animationData = Array.isArray(steps) ? new AnimationSequenceMetadata(steps) : steps;\n        return new AnimationStateTransitionMetadata(stateChangeExpr, animationData);\n    }\n    /**\n     * `trigger` is an animation-specific function that is designed to be used inside of Angular2's\n     * animation\n     * DSL language. If this information is new, please navigate to the\n     * {@link Component#animations-anchor component animations metadata\n     * page} to gain a better understanding of how animations in Angular2 are used.\n     *\n     * `trigger` Creates an animation trigger which will a list of {@link state state} and {@link\n     * transition transition}\n     * entries that will be evaluated when the expression bound to the trigger changes.\n     *\n     * Triggers are registered within the component annotation data under the\n     * {@link Component#animations-anchor animations section}. An animation trigger can\n     * be placed on an element within a template by referencing the name of the\n     * trigger followed by the expression value that the trigger is bound to\n     * (in the form of `[@triggerName]=\"expression\"`.\n     *\n     * ### Usage\n     *\n     * `trigger` will create an animation trigger reference based on the provided `name` value.\n     * The provided `animation` value is expected to be an array consisting of {@link state state} and\n     * {@link transition transition}\n     * declarations.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-component',\n     *   templateUrl: 'my-component-tpl.html',\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *       state(...),\n     *       state(...),\n     *       transition(...),\n     *       transition(...)\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   myStatusExp = \"something\";\n     * }\n     * ```\n     *\n     * The template associated with this component will make use of the `myAnimationTrigger`\n     * animation trigger by binding to an element within its template code.\n     *\n     * ```html\n     * <!-- somewhere inside of my-component-tpl.html -->\n     * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n     * ```\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/Kez8XGWBxWue7qP7nNvF?p=preview))\n     *\n     * {@example core/animation/ts/dsl/animation_example.ts region='Component'}\n     *\n     * @experimental Animation support is experimental.\n     */\n    function trigger(name, animation) {\n        return new AnimationEntryMetadata(name, animation);\n    }\n\n    function prepareFinalAnimationStyles(previousStyles, newStyles, nullValue) {\n        if (nullValue === void 0) { nullValue = null; }\n        var finalStyles = {};\n        Object.keys(newStyles).forEach(function (prop) {\n            var value = newStyles[prop];\n            finalStyles[prop] = value == AUTO_STYLE ? nullValue : value.toString();\n        });\n        Object.keys(previousStyles).forEach(function (prop) {\n            if (!isPresent(finalStyles[prop])) {\n                finalStyles[prop] = nullValue;\n            }\n        });\n        return finalStyles;\n    }\n    function balanceAnimationKeyframes(collectedStyles, finalStateStyles, keyframes) {\n        var limit = keyframes.length - 1;\n        var firstKeyframe = keyframes[0];\n        // phase 1: copy all the styles from the first keyframe into the lookup map\n        var flatenedFirstKeyframeStyles = flattenStyles(firstKeyframe.styles.styles);\n        var extraFirstKeyframeStyles = {};\n        var hasExtraFirstStyles = false;\n        Object.keys(collectedStyles).forEach(function (prop) {\n            var value = collectedStyles[prop];\n            // if the style is already defined in the first keyframe then\n            // we do not replace it.\n            if (!flatenedFirstKeyframeStyles[prop]) {\n                flatenedFirstKeyframeStyles[prop] = value;\n                extraFirstKeyframeStyles[prop] = value;\n                hasExtraFirstStyles = true;\n            }\n        });\n        var keyframeCollectedStyles = StringMapWrapper.merge({}, flatenedFirstKeyframeStyles);\n        // phase 2: normalize the final keyframe\n        var finalKeyframe = keyframes[limit];\n        finalKeyframe.styles.styles.unshift(finalStateStyles);\n        var flatenedFinalKeyframeStyles = flattenStyles(finalKeyframe.styles.styles);\n        var extraFinalKeyframeStyles = {};\n        var hasExtraFinalStyles = false;\n        Object.keys(keyframeCollectedStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFinalKeyframeStyles[prop])) {\n                extraFinalKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFinalStyles = true;\n            }\n        });\n        if (hasExtraFinalStyles) {\n            finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);\n        }\n        Object.keys(flatenedFinalKeyframeStyles).forEach(function (prop) {\n            if (!isPresent(flatenedFirstKeyframeStyles[prop])) {\n                extraFirstKeyframeStyles[prop] = AUTO_STYLE;\n                hasExtraFirstStyles = true;\n            }\n        });\n        if (hasExtraFirstStyles) {\n            firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);\n        }\n        return keyframes;\n    }\n    function clearStyles(styles) {\n        var finalStyles = {};\n        Object.keys(styles).forEach(function (key) { finalStyles[key] = null; });\n        return finalStyles;\n    }\n    function collectAndResolveStyles(collection, styles) {\n        return styles.map(function (entry) {\n            var stylesObj = {};\n            Object.keys(entry).forEach(function (prop) {\n                var value = entry[prop];\n                if (value == FILL_STYLE_FLAG) {\n                    value = collection[prop];\n                    if (!isPresent(value)) {\n                        value = AUTO_STYLE;\n                    }\n                }\n                collection[prop] = value;\n                stylesObj[prop] = value;\n            });\n            return stylesObj;\n        });\n    }\n    function renderStyles(element, renderer, styles) {\n        Object.keys(styles).forEach(function (prop) { renderer.setElementStyle(element, prop, styles[prop]); });\n    }\n    function flattenStyles(styles) {\n        var finalStyles = {};\n        styles.forEach(function (entry) {\n            Object.keys(entry).forEach(function (prop) { finalStyles[prop] = entry[prop]; });\n        });\n        return finalStyles;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AnimationStyles = (function () {\n        function AnimationStyles(styles) {\n            this.styles = styles;\n        }\n        return AnimationStyles;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An instance of this class is returned as an event parameter when an animation\n     * callback is captured for an animation either during the start or done phase.\n     *\n     * ```typescript\n     * @Component({\n     *   host: {\n     *     '[@myAnimationTrigger]': 'someExpression',\n     *     '(@myAnimationTrigger.start)': 'captureStartEvent($event)',\n     *     '(@myAnimationTrigger.done)': 'captureDoneEvent($event)',\n     *   },\n     *   animations: [\n     *     trigger(\"myAnimationTrigger\", [\n     *        // ...\n     *     ])\n     *   ]\n     * })\n     * class MyComponent {\n     *   someExpression: any = false;\n     *   captureStartEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     *\n     *   captureDoneEvent(event: AnimationTransitionEvent) {\n     *     // the toState, fromState and totalTime data is accessible from the event variable\n     *   }\n     * }\n     * ```\n     *\n     * @experimental Animation support is experimental.\n     */\n    var AnimationTransitionEvent = (function () {\n        function AnimationTransitionEvent(_a) {\n            var fromState = _a.fromState, toState = _a.toState, totalTime = _a.totalTime, phaseName = _a.phaseName;\n            this.fromState = fromState;\n            this.toState = toState;\n            this.totalTime = totalTime;\n            this.phaseName = phaseName;\n        }\n        return AnimationTransitionEvent;\n    }());\n\n    var AnimationTransition = (function () {\n        function AnimationTransition(_player, _fromState, _toState, _totalTime) {\n            this._player = _player;\n            this._fromState = _fromState;\n            this._toState = _toState;\n            this._totalTime = _totalTime;\n        }\n        AnimationTransition.prototype._createEvent = function (phaseName) {\n            return new AnimationTransitionEvent({\n                fromState: this._fromState,\n                toState: this._toState,\n                totalTime: this._totalTime,\n                phaseName: phaseName\n            });\n        };\n        AnimationTransition.prototype.onStart = function (callback) {\n            var event = this._createEvent('start');\n            this._player.onStart(function () { return callback(event); });\n        };\n        AnimationTransition.prototype.onDone = function (callback) {\n            var event = this._createEvent('done');\n            this._player.onDone(function () { return callback(event); });\n        };\n        return AnimationTransition;\n    }());\n\n    var DebugDomRootRenderer = (function () {\n        function DebugDomRootRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRootRenderer.prototype.renderComponent = function (componentProto) {\n            return new DebugDomRenderer(this._delegate.renderComponent(componentProto));\n        };\n        return DebugDomRootRenderer;\n    }());\n    var DebugDomRenderer = (function () {\n        function DebugDomRenderer(_delegate) {\n            this._delegate = _delegate;\n        }\n        DebugDomRenderer.prototype.selectRootElement = function (selectorOrNode, debugInfo) {\n            var nativeEl = this._delegate.selectRootElement(selectorOrNode, debugInfo);\n            var debugEl = new DebugElement(nativeEl, null, debugInfo);\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createElement = function (parentElement, name, debugInfo) {\n            var nativeEl = this._delegate.createElement(parentElement, name, debugInfo);\n            var debugEl = new DebugElement(nativeEl, getDebugNode(parentElement), debugInfo);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n            return nativeEl;\n        };\n        DebugDomRenderer.prototype.createViewRoot = function (hostElement) { return this._delegate.createViewRoot(hostElement); };\n        DebugDomRenderer.prototype.createTemplateAnchor = function (parentElement, debugInfo) {\n            var comment = this._delegate.createTemplateAnchor(parentElement, debugInfo);\n            var debugEl = new DebugNode(comment, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return comment;\n        };\n        DebugDomRenderer.prototype.createText = function (parentElement, value, debugInfo) {\n            var text = this._delegate.createText(parentElement, value, debugInfo);\n            var debugEl = new DebugNode(text, getDebugNode(parentElement), debugInfo);\n            indexDebugNode(debugEl);\n            return text;\n        };\n        DebugDomRenderer.prototype.projectNodes = function (parentElement, nodes) {\n            var debugParent = getDebugNode(parentElement);\n            if (isPresent(debugParent) && debugParent instanceof DebugElement) {\n                var debugElement_1 = debugParent;\n                nodes.forEach(function (node) { debugElement_1.addChild(getDebugNode(node)); });\n            }\n            this._delegate.projectNodes(parentElement, nodes);\n        };\n        DebugDomRenderer.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var debugNode = getDebugNode(node);\n            if (isPresent(debugNode)) {\n                var debugParent = debugNode.parent;\n                if (viewRootNodes.length > 0 && isPresent(debugParent)) {\n                    var debugViewRootNodes_1 = [];\n                    viewRootNodes.forEach(function (rootNode) { return debugViewRootNodes_1.push(getDebugNode(rootNode)); });\n                    debugParent.insertChildrenAfter(debugNode, debugViewRootNodes_1);\n                }\n            }\n            this._delegate.attachViewAfter(node, viewRootNodes);\n        };\n        DebugDomRenderer.prototype.detachView = function (viewRootNodes) {\n            viewRootNodes.forEach(function (node) {\n                var debugNode = getDebugNode(node);\n                if (isPresent(debugNode) && isPresent(debugNode.parent)) {\n                    debugNode.parent.removeChild(debugNode);\n                }\n            });\n            this._delegate.detachView(viewRootNodes);\n        };\n        DebugDomRenderer.prototype.destroyView = function (hostElement, viewAllNodes) {\n            viewAllNodes = viewAllNodes || [];\n            viewAllNodes.forEach(function (node) { removeDebugNodeFromIndex(getDebugNode(node)); });\n            this._delegate.destroyView(hostElement, viewAllNodes);\n        };\n        DebugDomRenderer.prototype.listen = function (renderElement, name, callback) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl)) {\n                debugEl.listeners.push(new EventListener(name, callback));\n            }\n            return this._delegate.listen(renderElement, name, callback);\n        };\n        DebugDomRenderer.prototype.listenGlobal = function (target, name, callback) {\n            return this._delegate.listenGlobal(target, name, callback);\n        };\n        DebugDomRenderer.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.properties[propertyName] = propertyValue;\n            }\n            this._delegate.setElementProperty(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementAttribute = function (renderElement, attributeName, attributeValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.attributes[attributeName] = attributeValue;\n            }\n            this._delegate.setElementAttribute(renderElement, attributeName, attributeValue);\n        };\n        DebugDomRenderer.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) {\n            this._delegate.setBindingDebugInfo(renderElement, propertyName, propertyValue);\n        };\n        DebugDomRenderer.prototype.setElementClass = function (renderElement, className, isAdd) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.classes[className] = isAdd;\n            }\n            this._delegate.setElementClass(renderElement, className, isAdd);\n        };\n        DebugDomRenderer.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            var debugEl = getDebugNode(renderElement);\n            if (isPresent(debugEl) && debugEl instanceof DebugElement) {\n                debugEl.styles[styleName] = styleValue;\n            }\n            this._delegate.setElementStyle(renderElement, styleName, styleValue);\n        };\n        DebugDomRenderer.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            this._delegate.invokeElementMethod(renderElement, methodName, args);\n        };\n        DebugDomRenderer.prototype.setText = function (renderNode, text) { this._delegate.setText(renderNode, text); };\n        DebugDomRenderer.prototype.animate = function (element, startingStyles, keyframes, duration, delay, easing) {\n            return this._delegate.animate(element, startingStyles, keyframes, duration, delay, easing);\n        };\n        return DebugDomRenderer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewType;\n    (function (ViewType) {\n        // A view that contains the host element with bound component directive.\n        // Contains a COMPONENT view\n        ViewType[ViewType[\"HOST\"] = 0] = \"HOST\";\n        // The view of the component\n        // Can contain 0 to n EMBEDDED views\n        ViewType[ViewType[\"COMPONENT\"] = 1] = \"COMPONENT\";\n        // A view that is embedded into another View via a <template> element\n        // inside of a COMPONENT view\n        ViewType[ViewType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n    })(ViewType || (ViewType = {}));\n\n    var StaticNodeDebugInfo = (function () {\n        function StaticNodeDebugInfo(providerTokens, componentToken, refTokens) {\n            this.providerTokens = providerTokens;\n            this.componentToken = componentToken;\n            this.refTokens = refTokens;\n        }\n        return StaticNodeDebugInfo;\n    }());\n    var DebugContext = (function () {\n        function DebugContext(_view, _nodeIndex, _tplRow, _tplCol) {\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n            this._tplRow = _tplRow;\n            this._tplCol = _tplCol;\n        }\n        Object.defineProperty(DebugContext.prototype, \"_staticNodeInfo\", {\n            get: function () {\n                return isPresent(this._nodeIndex) ? this._view.staticNodeDebugInfos[this._nodeIndex] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"component\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo) && isPresent(staticNodeInfo.componentToken)) {\n                    return this.injector.get(staticNodeInfo.componentToken);\n                }\n                return null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"componentRenderElement\", {\n            get: function () {\n                var componentView = this._view;\n                while (isPresent(componentView.parentView) && componentView.type !== ViewType.COMPONENT) {\n                    componentView = componentView.parentView;\n                }\n                return componentView.parentElement;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"injector\", {\n            get: function () { return this._view.injector(this._nodeIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"renderNode\", {\n            get: function () {\n                if (isPresent(this._nodeIndex) && this._view.allNodes) {\n                    return this._view.allNodes[this._nodeIndex];\n                }\n                else {\n                    return null;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var staticNodeInfo = this._staticNodeInfo;\n                return isPresent(staticNodeInfo) ? staticNodeInfo.providerTokens : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"source\", {\n            get: function () {\n                return this._view.componentType.templateUrl + \":\" + this._tplRow + \":\" + this._tplCol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext.prototype, \"references\", {\n            get: function () {\n                var _this = this;\n                var varValues = {};\n                var staticNodeInfo = this._staticNodeInfo;\n                if (isPresent(staticNodeInfo)) {\n                    var refs_1 = staticNodeInfo.refTokens;\n                    Object.keys(refs_1).forEach(function (refName) {\n                        var refToken = refs_1[refName];\n                        var varValue;\n                        if (isBlank(refToken)) {\n                            varValue = _this._view.allNodes ? _this._view.allNodes[_this._nodeIndex] : null;\n                        }\n                        else {\n                            varValue = _this._view.injectorGet(refToken, _this._nodeIndex, null);\n                        }\n                        varValues[refName] = varValue;\n                    });\n                }\n                return varValues;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugContext;\n    }());\n\n    var ViewAnimationMap = (function () {\n        function ViewAnimationMap() {\n            this._map = new Map();\n            this._allPlayers = [];\n        }\n        ViewAnimationMap.prototype.find = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (isPresent(playersByAnimation)) {\n                return playersByAnimation[animationName];\n            }\n        };\n        ViewAnimationMap.prototype.findAllPlayersByElement = function (element) {\n            var el = this._map.get(element);\n            return el ? Object.keys(el).map(function (k) { return el[k]; }) : [];\n        };\n        ViewAnimationMap.prototype.set = function (element, animationName, player) {\n            var playersByAnimation = this._map.get(element);\n            if (!isPresent(playersByAnimation)) {\n                playersByAnimation = {};\n            }\n            var existingEntry = playersByAnimation[animationName];\n            if (isPresent(existingEntry)) {\n                this.remove(element, animationName);\n            }\n            playersByAnimation[animationName] = player;\n            this._allPlayers.push(player);\n            this._map.set(element, playersByAnimation);\n        };\n        ViewAnimationMap.prototype.getAllPlayers = function () { return this._allPlayers; };\n        ViewAnimationMap.prototype.remove = function (element, animationName) {\n            var playersByAnimation = this._map.get(element);\n            if (playersByAnimation) {\n                var player = playersByAnimation[animationName];\n                delete playersByAnimation[animationName];\n                var index = this._allPlayers.indexOf(player);\n                this._allPlayers.splice(index, 1);\n                if (Object.keys(playersByAnimation).length === 0) {\n                    this._map.delete(element);\n                }\n            }\n        };\n        return ViewAnimationMap;\n    }());\n\n    var AnimationViewContext = (function () {\n        function AnimationViewContext() {\n            this._players = new ViewAnimationMap();\n        }\n        AnimationViewContext.prototype.onAllActiveAnimationsDone = function (callback) {\n            var activeAnimationPlayers = this._players.getAllPlayers();\n            // we check for the length to avoid having GroupAnimationPlayer\n            // issue an unnecessary microtask when zero players are passed in\n            if (activeAnimationPlayers.length) {\n                new AnimationGroupPlayer(activeAnimationPlayers).onDone(function () { return callback(); });\n            }\n            else {\n                callback();\n            }\n        };\n        AnimationViewContext.prototype.queueAnimation = function (element, animationName, player) {\n            queueAnimationGlobally(player);\n            this._players.set(element, animationName, player);\n        };\n        AnimationViewContext.prototype.cancelActiveAnimation = function (element, animationName, removeAllAnimations) {\n            if (removeAllAnimations === void 0) { removeAllAnimations = false; }\n            if (removeAllAnimations) {\n                this._players.findAllPlayersByElement(element).forEach(function (player) { return player.destroy(); });\n            }\n            else {\n                var player = this._players.find(element, animationName);\n                if (player) {\n                    player.destroy();\n                }\n            }\n        };\n        return AnimationViewContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$15 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var ElementInjector = (function (_super) {\n        __extends$15(ElementInjector, _super);\n        function ElementInjector(_view, _nodeIndex) {\n            _super.call(this);\n            this._view = _view;\n            this._nodeIndex = _nodeIndex;\n        }\n        ElementInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._view.injectorGet(token, this._nodeIndex, notFoundValue);\n        };\n        return ElementInjector;\n    }(Injector));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$14 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var _scope_check = wtfCreateScope(\"AppView#check(ascii id)\");\n    /**\n     * @experimental\n     */\n    var EMPTY_CONTEXT$1 = new Object();\n    var UNDEFINED$1 = new Object();\n    /**\n     * Cost of making objects: http://jsperf.com/instantiate-size-of-object\n     *\n     */\n    var AppView = (function () {\n        function AppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentElement, cdMode, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            this.clazz = clazz;\n            this.componentType = componentType;\n            this.type = type;\n            this.viewUtils = viewUtils;\n            this.parentView = parentView;\n            this.parentIndex = parentIndex;\n            this.parentElement = parentElement;\n            this.cdMode = cdMode;\n            this.declaredViewContainer = declaredViewContainer;\n            this.viewContainer = null;\n            this.numberOfChecks = 0;\n            this.ref = new ViewRef_(this);\n            if (type === ViewType.COMPONENT || type === ViewType.HOST) {\n                this.renderer = viewUtils.renderComponent(componentType);\n            }\n            else {\n                this.renderer = parentView.renderer;\n            }\n            this._directRenderer = this.renderer.directRenderer;\n        }\n        Object.defineProperty(AppView.prototype, \"animationContext\", {\n            get: function () {\n                if (!this._animationContext) {\n                    this._animationContext = new AnimationViewContext();\n                }\n                return this._animationContext;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"destroyed\", {\n            get: function () { return this.cdMode === ChangeDetectorStatus.Destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.create = function (context) {\n            this.context = context;\n            return this.createInternal(null);\n        };\n        AppView.prototype.createHostView = function (rootSelectorOrNode, hostInjector, projectableNodes) {\n            this.context = EMPTY_CONTEXT$1;\n            this._hasExternalHostElement = isPresent(rootSelectorOrNode);\n            this._hostInjector = hostInjector;\n            this._hostProjectableNodes = projectableNodes;\n            return this.createInternal(rootSelectorOrNode);\n        };\n        /**\n         * Overwritten by implementations.\n         * Returns the ComponentRef for the host element for ViewType.HOST.\n         */\n        AppView.prototype.createInternal = function (rootSelectorOrNode) { return null; };\n        /**\n         * Overwritten by implementations.\n         */\n        AppView.prototype.createEmbeddedViewInternal = function (templateNodeIndex) { return null; };\n        AppView.prototype.init = function (lastRootNode, allNodes, disposables) {\n            this.lastRootNode = lastRootNode;\n            this.allNodes = allNodes;\n            this.disposables = disposables;\n            if (this.type === ViewType.COMPONENT) {\n                this.dirtyParentQueriesInternal();\n            }\n        };\n        AppView.prototype.injectorGet = function (token, nodeIndex, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            var result = UNDEFINED$1;\n            var view = this;\n            while (result === UNDEFINED$1) {\n                if (isPresent(nodeIndex)) {\n                    result = view.injectorGetInternal(token, nodeIndex, UNDEFINED$1);\n                }\n                if (result === UNDEFINED$1 && view.type === ViewType.HOST) {\n                    result = view._hostInjector.get(token, notFoundValue);\n                }\n                nodeIndex = view.parentIndex;\n                view = view.parentView;\n            }\n            return result;\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.injectorGetInternal = function (token, nodeIndex, notFoundResult) {\n            return notFoundResult;\n        };\n        AppView.prototype.injector = function (nodeIndex) { return new ElementInjector(this, nodeIndex); };\n        AppView.prototype.detachAndDestroy = function () {\n            if (this._hasExternalHostElement) {\n                this.detach();\n            }\n            else if (isPresent(this.viewContainer)) {\n                this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));\n            }\n            this.destroy();\n        };\n        AppView.prototype.destroy = function () {\n            var _this = this;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                return;\n            }\n            var hostElement = this.type === ViewType.COMPONENT ? this.parentElement : null;\n            if (this.disposables) {\n                for (var i = 0; i < this.disposables.length; i++) {\n                    this.disposables[i]();\n                }\n            }\n            this.destroyInternal();\n            this.dirtyParentQueriesInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this.renderer.destroyView(hostElement, _this.allNodes); });\n            }\n            else {\n                this.renderer.destroyView(hostElement, this.allNodes);\n            }\n            this.cdMode = ChangeDetectorStatus.Destroyed;\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.destroyInternal = function () { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detachInternal = function () { };\n        AppView.prototype.detach = function () {\n            var _this = this;\n            this.detachInternal();\n            if (this._animationContext) {\n                this._animationContext.onAllActiveAnimationsDone(function () { return _this._renderDetach(); });\n            }\n            else {\n                this._renderDetach();\n            }\n            if (this.declaredViewContainer && this.declaredViewContainer !== this.viewContainer) {\n                var projectedViews = this.declaredViewContainer.projectedViews;\n                var index = projectedViews.indexOf(this);\n                // perf: pop is faster than splice!\n                if (index >= projectedViews.length - 1) {\n                    projectedViews.pop();\n                }\n                else {\n                    projectedViews.splice(index, 1);\n                }\n            }\n            this.viewContainer = null;\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype._renderDetach = function () {\n            if (this._directRenderer) {\n                this.visitRootNodesInternal(this._directRenderer.remove, null);\n            }\n            else {\n                this.renderer.detachView(this.flatRootNodes);\n            }\n        };\n        AppView.prototype.attachAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.viewContainer = viewContainer;\n            if (this.declaredViewContainer && this.declaredViewContainer !== viewContainer) {\n                if (!this.declaredViewContainer.projectedViews) {\n                    this.declaredViewContainer.projectedViews = [];\n                }\n                this.declaredViewContainer.projectedViews.push(this);\n            }\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype.moveAfter = function (viewContainer, prevView) {\n            this._renderAttach(viewContainer, prevView);\n            this.dirtyParentQueriesInternal();\n        };\n        AppView.prototype._renderAttach = function (viewContainer, prevView) {\n            var prevNode = prevView ? prevView.lastRootNode : viewContainer.nativeElement;\n            if (this._directRenderer) {\n                var nextSibling = this._directRenderer.nextSibling(prevNode);\n                if (nextSibling) {\n                    this.visitRootNodesInternal(this._directRenderer.insertBefore, nextSibling);\n                }\n                else {\n                    this.visitRootNodesInternal(this._directRenderer.appendChild, this._directRenderer.parentElement(prevNode));\n                }\n            }\n            else {\n                this.renderer.attachViewAfter(prevNode, this.flatRootNodes);\n            }\n        };\n        Object.defineProperty(AppView.prototype, \"changeDetectorRef\", {\n            get: function () { return this.ref; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AppView.prototype, \"flatRootNodes\", {\n            get: function () {\n                var nodes = [];\n                this.visitRootNodesInternal(addToArray, nodes);\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AppView.prototype.projectNodes = function (parentElement, ngContentIndex) {\n            if (this._directRenderer) {\n                this.visitProjectedNodes(ngContentIndex, this._directRenderer.appendChild, parentElement);\n            }\n            else {\n                var nodes = [];\n                this.visitProjectedNodes(ngContentIndex, addToArray, nodes);\n                this.renderer.projectNodes(parentElement, nodes);\n            }\n        };\n        AppView.prototype.visitProjectedNodes = function (ngContentIndex, cb, c) {\n            switch (this.type) {\n                case ViewType.EMBEDDED:\n                    this.parentView.visitProjectedNodes(ngContentIndex, cb, c);\n                    break;\n                case ViewType.COMPONENT:\n                    if (this.parentView.type === ViewType.HOST) {\n                        var nodes = this.parentView._hostProjectableNodes[ngContentIndex] || [];\n                        for (var i = 0; i < nodes.length; i++) {\n                            cb(nodes[i], c);\n                        }\n                    }\n                    else {\n                        this.parentView.visitProjectableNodesInternal(this.parentIndex, ngContentIndex, cb, c);\n                    }\n                    break;\n            }\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.visitRootNodesInternal = function (cb, c) { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, c) { };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.dirtyParentQueriesInternal = function () { };\n        AppView.prototype.detectChanges = function (throwOnChange) {\n            var s = _scope_check(this.clazz);\n            if (this.cdMode === ChangeDetectorStatus.Checked ||\n                this.cdMode === ChangeDetectorStatus.Errored ||\n                this.cdMode === ChangeDetectorStatus.Detached)\n                return;\n            if (this.cdMode === ChangeDetectorStatus.Destroyed) {\n                this.throwDestroyedError('detectChanges');\n            }\n            this.detectChangesInternal(throwOnChange);\n            if (this.cdMode === ChangeDetectorStatus.CheckOnce)\n                this.cdMode = ChangeDetectorStatus.Checked;\n            this.numberOfChecks++;\n            wtfLeave(s);\n        };\n        /**\n         * Overwritten by implementations\n         */\n        AppView.prototype.detectChangesInternal = function (throwOnChange) { };\n        AppView.prototype.markAsCheckOnce = function () { this.cdMode = ChangeDetectorStatus.CheckOnce; };\n        AppView.prototype.markPathToRootAsCheckOnce = function () {\n            var c = this;\n            while (isPresent(c) && c.cdMode !== ChangeDetectorStatus.Detached) {\n                if (c.cdMode === ChangeDetectorStatus.Checked) {\n                    c.cdMode = ChangeDetectorStatus.CheckOnce;\n                }\n                if (c.type === ViewType.COMPONENT) {\n                    c = c.parentView;\n                }\n                else {\n                    c = c.viewContainer ? c.viewContainer.parentView : null;\n                }\n            }\n        };\n        AppView.prototype.eventHandler = function (cb) {\n            return cb;\n        };\n        AppView.prototype.throwDestroyedError = function (details) { throw new ViewDestroyedError(details); };\n        return AppView;\n    }());\n    var DebugAppView = (function (_super) {\n        __extends$14(DebugAppView, _super);\n        function DebugAppView(clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, staticNodeDebugInfos, declaredViewContainer) {\n            if (declaredViewContainer === void 0) { declaredViewContainer = null; }\n            _super.call(this, clazz, componentType, type, viewUtils, parentView, parentIndex, parentNode, cdMode, declaredViewContainer);\n            this.staticNodeDebugInfos = staticNodeDebugInfos;\n            this._currentDebugContext = null;\n        }\n        DebugAppView.prototype.create = function (context) {\n            this._resetDebug();\n            try {\n                return _super.prototype.create.call(this, context);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.createHostView = function (rootSelectorOrNode, injector, projectableNodes) {\n            if (projectableNodes === void 0) { projectableNodes = null; }\n            this._resetDebug();\n            try {\n                return _super.prototype.createHostView.call(this, rootSelectorOrNode, injector, projectableNodes);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.injectorGet = function (token, nodeIndex, notFoundResult) {\n            this._resetDebug();\n            try {\n                return _super.prototype.injectorGet.call(this, token, nodeIndex, notFoundResult);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detach = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.detach.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.destroy = function () {\n            this._resetDebug();\n            try {\n                _super.prototype.destroy.call(this);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype.detectChanges = function (throwOnChange) {\n            this._resetDebug();\n            try {\n                _super.prototype.detectChanges.call(this, throwOnChange);\n            }\n            catch (e) {\n                this._rethrowWithContext(e);\n                throw e;\n            }\n        };\n        DebugAppView.prototype._resetDebug = function () { this._currentDebugContext = null; };\n        DebugAppView.prototype.debug = function (nodeIndex, rowNum, colNum) {\n            return this._currentDebugContext = new DebugContext(this, nodeIndex, rowNum, colNum);\n        };\n        DebugAppView.prototype._rethrowWithContext = function (e) {\n            if (!(e instanceof ViewWrappedError)) {\n                if (!(e instanceof ExpressionChangedAfterItHasBeenCheckedError)) {\n                    this.cdMode = ChangeDetectorStatus.Errored;\n                }\n                if (isPresent(this._currentDebugContext)) {\n                    throw new ViewWrappedError(e, this._currentDebugContext);\n                }\n            }\n        };\n        DebugAppView.prototype.eventHandler = function (cb) {\n            var _this = this;\n            var superHandler = _super.prototype.eventHandler.call(this, cb);\n            return function (eventName, event) {\n                _this._resetDebug();\n                try {\n                    return superHandler.call(_this, eventName, event);\n                }\n                catch (e) {\n                    _this._rethrowWithContext(e);\n                    throw e;\n                }\n            };\n        };\n        return DebugAppView;\n    }(AppView));\n\n    /**\n     * A ViewContainer is created for elements that have a ViewContainerRef\n     * to keep track of the nested views.\n     */\n    var ViewContainer = (function () {\n        function ViewContainer(index, parentIndex, parentView, nativeElement) {\n            this.index = index;\n            this.parentIndex = parentIndex;\n            this.parentView = parentView;\n            this.nativeElement = nativeElement;\n        }\n        Object.defineProperty(ViewContainer.prototype, \"elementRef\", {\n            get: function () { return new ElementRef(this.nativeElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"vcRef\", {\n            get: function () { return new ViewContainerRef_(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"parentInjector\", {\n            get: function () { return this.parentView.injector(this.parentIndex); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainer.prototype, \"injector\", {\n            get: function () { return this.parentView.injector(this.index); },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainer.prototype.detectChangesInNestedViews = function (throwOnChange) {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].detectChanges(throwOnChange);\n                }\n            }\n        };\n        ViewContainer.prototype.destroyNestedViews = function () {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].destroy();\n                }\n            }\n        };\n        ViewContainer.prototype.visitNestedViewRootNodes = function (cb, c) {\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    this.nestedViews[i].visitRootNodesInternal(cb, c);\n                }\n            }\n        };\n        ViewContainer.prototype.mapNestedViews = function (nestedViewClass, callback) {\n            var result = [];\n            if (this.nestedViews) {\n                for (var i = 0; i < this.nestedViews.length; i++) {\n                    var nestedView = this.nestedViews[i];\n                    if (nestedView.clazz === nestedViewClass) {\n                        result.push(callback(nestedView));\n                    }\n                }\n            }\n            if (this.projectedViews) {\n                for (var i = 0; i < this.projectedViews.length; i++) {\n                    var projectedView = this.projectedViews[i];\n                    if (projectedView.clazz === nestedViewClass) {\n                        result.push(callback(projectedView));\n                    }\n                }\n            }\n            return result;\n        };\n        ViewContainer.prototype.moveView = function (view, currentIndex) {\n            var previousIndex = this.nestedViews.indexOf(view);\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            nestedViews.splice(previousIndex, 1);\n            nestedViews.splice(currentIndex, 0, view);\n            var prevView = currentIndex > 0 ? nestedViews[currentIndex - 1] : null;\n            view.moveAfter(this, prevView);\n        };\n        ViewContainer.prototype.attachView = function (view, viewIndex) {\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            var nestedViews = this.nestedViews;\n            if (nestedViews == null) {\n                nestedViews = [];\n                this.nestedViews = nestedViews;\n            }\n            // perf: array.push is faster than array.splice!\n            if (viewIndex >= nestedViews.length) {\n                nestedViews.push(view);\n            }\n            else {\n                nestedViews.splice(viewIndex, 0, view);\n            }\n            var prevView = viewIndex > 0 ? nestedViews[viewIndex - 1] : null;\n            view.attachAfter(this, prevView);\n        };\n        ViewContainer.prototype.detachView = function (viewIndex) {\n            var view = this.nestedViews[viewIndex];\n            // perf: array.pop is faster than array.splice!\n            if (viewIndex >= this.nestedViews.length - 1) {\n                this.nestedViews.pop();\n            }\n            else {\n                this.nestedViews.splice(viewIndex, 1);\n            }\n            if (view.type === ViewType.COMPONENT) {\n                throw new Error(\"Component views can't be moved!\");\n            }\n            view.detach();\n            return view;\n        };\n        return ViewContainer;\n    }());\n\n    var __core_private__ = {\n        isDefaultChangeDetectionStrategy: isDefaultChangeDetectionStrategy,\n        ChangeDetectorStatus: ChangeDetectorStatus,\n        constructDependencies: constructDependencies,\n        LifecycleHooks: LifecycleHooks,\n        LIFECYCLE_HOOKS_VALUES: LIFECYCLE_HOOKS_VALUES,\n        ReflectorReader: ReflectorReader,\n        CodegenComponentFactoryResolver: CodegenComponentFactoryResolver,\n        ComponentRef_: ComponentRef_,\n        ViewContainer: ViewContainer,\n        AppView: AppView,\n        DebugAppView: DebugAppView,\n        NgModuleInjector: NgModuleInjector,\n        registerModuleFactory: registerModuleFactory,\n        ViewType: ViewType,\n        view_utils: view_utils,\n        ViewMetadata: ViewMetadata,\n        DebugContext: DebugContext,\n        StaticNodeDebugInfo: StaticNodeDebugInfo,\n        devModeEqual: devModeEqual,\n        UNINITIALIZED: UNINITIALIZED,\n        ValueUnwrapper: ValueUnwrapper,\n        RenderDebugInfo: RenderDebugInfo,\n        TemplateRef_: TemplateRef_,\n        ReflectionCapabilities: ReflectionCapabilities,\n        makeDecorator: makeDecorator,\n        DebugDomRootRenderer: DebugDomRootRenderer,\n        Console: Console,\n        reflector: reflector,\n        Reflector: Reflector,\n        NoOpAnimationPlayer: NoOpAnimationPlayer,\n        AnimationPlayer: AnimationPlayer,\n        AnimationSequencePlayer: AnimationSequencePlayer,\n        AnimationGroupPlayer: AnimationGroupPlayer,\n        AnimationKeyframe: AnimationKeyframe,\n        prepareFinalAnimationStyles: prepareFinalAnimationStyles,\n        balanceAnimationKeyframes: balanceAnimationKeyframes,\n        flattenStyles: flattenStyles,\n        clearStyles: clearStyles,\n        renderStyles: renderStyles,\n        collectAndResolveStyles: collectAndResolveStyles,\n        APP_ID_RANDOM_PROVIDER: APP_ID_RANDOM_PROVIDER,\n        AnimationStyles: AnimationStyles,\n        ANY_STATE: ANY_STATE,\n        DEFAULT_STATE: DEFAULT_STATE,\n        EMPTY_STATE: EMPTY_STATE,\n        FILL_STYLE_FLAG: FILL_STYLE_FLAG,\n        ComponentStillLoadingError: ComponentStillLoadingError,\n        isPromise: isPromise,\n        AnimationTransition: AnimationTransition\n    };\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.AnimationTransitionEvent = AnimationTransitionEvent;\n    exports.AnimationPlayer = AnimationPlayer;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.AfterContentChecked = AfterContentChecked;\n    exports.AfterContentInit = AfterContentInit;\n    exports.AfterViewChecked = AfterViewChecked;\n    exports.AfterViewInit = AfterViewInit;\n    exports.DoCheck = DoCheck;\n    exports.OnChanges = OnChanges;\n    exports.OnDestroy = OnDestroy;\n    exports.OnInit = OnInit;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Class = Class;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.OpaqueToken = OpaqueToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Injectable = Injectable;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.CollectionChangeRecord = CollectionChangeRecord;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueChangeRecord = KeyValueChangeRecord;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.__core_private__ = __core_private__;\n    exports.AUTO_STYLE = AUTO_STYLE;\n    exports.AnimationEntryMetadata = AnimationEntryMetadata;\n    exports.AnimationStateMetadata = AnimationStateMetadata;\n    exports.AnimationStateDeclarationMetadata = AnimationStateDeclarationMetadata;\n    exports.AnimationStateTransitionMetadata = AnimationStateTransitionMetadata;\n    exports.AnimationMetadata = AnimationMetadata;\n    exports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\n    exports.AnimationStyleMetadata = AnimationStyleMetadata;\n    exports.AnimationAnimateMetadata = AnimationAnimateMetadata;\n    exports.AnimationWithStepsMetadata = AnimationWithStepsMetadata;\n    exports.AnimationSequenceMetadata = AnimationSequenceMetadata;\n    exports.AnimationGroupMetadata = AnimationGroupMetadata;\n    exports.animate = animate;\n    exports.group = group;\n    exports.sequence = sequence;\n    exports.style = style;\n    exports.state = state;\n    exports.keyframes = keyframes;\n    exports.transition = transition;\n    exports.trigger = trigger;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/core/bundles/core.umd.js\n// module id = 2\n// module chunks = 0 1 4","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subject.js\n// module id = 3\n// module chunks = 0 1 4 5","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Registers handlers for handling emitted values, error and completions from the observable, and\n     *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n     * @method subscribe\n     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled\n     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this);\n        }\n        else {\n            sink.add(this._subscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.$$observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observable.js\n// module id = 4\n// module chunks = 0 1 4 5","\"use strict\";\nvar objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n};\nexports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);\nvar freeGlobal = objectTypes[typeof global] && global;\nif (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    exports.root = freeGlobal;\n}\n//# sourceMappingURL=root.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/root.js\n// module id = 5\n// module chunks = 0 1 4 5","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber();\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/toSubscriber.js\n// module id = 6\n// module chunks = 0 1 4 5","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parent, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parent = _parent;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            context = observerOrNext;\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (isFunction_1.isFunction(context.unsubscribe)) {\n                this.add(context.unsubscribe.bind(context));\n            }\n            context.unsubscribe = this.unsubscribe.bind(this);\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parent = this._parent;\n            if (!_parent.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parent, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._error) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parent.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parent.syncErrorValue = err;\n                _parent.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parent = this._parent;\n            if (this._complete) {\n                if (!_parent.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parent, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parent = this._parent;\n        this._context = null;\n        this._parent = null;\n        _parent.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscriber.js\n// module id = 7\n// module chunks = 0 1 4 5","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isFunction.js\n// module id = 8\n// module chunks = 0 1 4 5","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this._subscriptions = null;\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                (errors = errors || []).push(errorObject_1.errorObject.e);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(err.errors);\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var sub = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                sub = new Subscription(teardown);\n            case 'object':\n                if (sub.closed || typeof sub.unsubscribe !== 'function') {\n                    break;\n                }\n                else if (this.closed) {\n                    sub.unsubscribe();\n                }\n                else {\n                    (this._subscriptions || (this._subscriptions = [])).push(sub);\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        return sub;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        // HACK: This might be redundant because of the logic in `add()`\n        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {\n            return;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\n//# sourceMappingURL=Subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Subscription.js\n// module id = 9\n// module chunks = 0 1 4 5","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isArray.js\n// module id = 10\n// module chunks = 0 1 4 5","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isObject.js\n// module id = 11\n// module chunks = 0 1 4 5","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/tryCatch.js\n// module id = 12\n// module chunks = 0 1 4 5","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/errorObject.js\n// module id = 13\n// module chunks = 0 1 4 5","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/UnsubscriptionError.js\n// module id = 14\n// module chunks = 0 1 4 5","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Observer.js\n// module id = 15\n// module chunks = 0 1 4 5","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n//# sourceMappingURL=rxSubscriber.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/rxSubscriber.js\n// module id = 16\n// module chunks = 0 1 4 5","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.$$observable = getSymbolObservable(root_1.root);\n//# sourceMappingURL=observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/symbol/observable.js\n// module id = 17\n// module chunks = 0 1 4 5","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ObjectUnsubscribedError.js\n// module id = 18\n// module chunks = 0 1 4 5","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/SubjectSubscription.js\n// module id = 19\n// module chunks = 0 1 4 5","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar common_1 = require('@angular/common');\r\nvar paginate_pipe_1 = require('./paginate.pipe');\r\nvar pagination_service_1 = require('./pagination.service');\r\nvar pagination_controls_component_1 = require('./pagination-controls.component');\r\nvar pagination_controls_directive_1 = require('./pagination-controls.directive');\r\nvar pagination_service_2 = require('./pagination.service');\r\nexports.PaginationService = pagination_service_2.PaginationService;\r\nvar pagination_controls_component_2 = require('./pagination-controls.component');\r\nexports.PaginationControlsComponent = pagination_controls_component_2.PaginationControlsComponent;\r\nvar pagination_controls_directive_2 = require('./pagination-controls.directive');\r\nexports.PaginationControlsDirective = pagination_controls_directive_2.PaginationControlsDirective;\r\nvar paginate_pipe_2 = require('./paginate.pipe');\r\nexports.PaginatePipe = paginate_pipe_2.PaginatePipe;\r\nvar Ng2PaginationModule = (function () {\r\n    function Ng2PaginationModule() {\r\n    }\r\n    Ng2PaginationModule.decorators = [\r\n        { type: core_1.NgModule, args: [{\r\n                    imports: [common_1.CommonModule],\r\n                    declarations: [\r\n                        paginate_pipe_1.PaginatePipe,\r\n                        pagination_controls_component_1.PaginationControlsComponent,\r\n                        pagination_controls_directive_1.PaginationControlsDirective\r\n                    ],\r\n                    providers: [pagination_service_1.PaginationService],\r\n                    exports: [paginate_pipe_1.PaginatePipe, pagination_controls_component_1.PaginationControlsComponent, pagination_controls_directive_1.PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Ng2PaginationModule.ctorParameters = [];\r\n    return Ng2PaginationModule;\r\n}());\r\nexports.Ng2PaginationModule = Ng2PaginationModule;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/ng2-pagination.js\n// module id = 254\n// module chunks = 4","\"use strict\";\r\nvar core_1 = require(\"@angular/core\");\r\nvar pagination_service_1 = require(\"./pagination.service\");\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems !== undefined;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: config.itemsPerPage || 0,\r\n            currentPage: config.currentPage || 1,\r\n            totalItems: config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !config.hasOwnProperty(prop); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: core_1.Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = [\r\n        { type: pagination_service_1.PaginationService, },\r\n    ];\r\n    return PaginatePipe;\r\n}());\r\nexports.PaginatePipe = PaginatePipe;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/paginate.pipe.js\n// module id = 255\n// module chunks = 4","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new core_1.EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\r\nexports.PaginationService = PaginationService;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination.service.js\n// module id = 256\n// module chunks = 4","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar template_1 = require('./template');\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.pageChange = new core_1.EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: core_1.Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: template_1.DEFAULT_TEMPLATE,\r\n                    styles: [template_1.DEFAULT_STYLES],\r\n                    changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = [];\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: core_1.Input },],\r\n        'maxSize': [{ type: core_1.Input },],\r\n        'directionLinks': [{ type: core_1.Input },],\r\n        'autoHide': [{ type: core_1.Input },],\r\n        'pageChange': [{ type: core_1.Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\r\nexports.PaginationControlsComponent = PaginationControlsComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination-controls.component.js\n// module id = 257\n// module chunks = 4","/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\n\"use strict\";\r\nexports.DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ng2-pagination\\\" \\n        role=\\\"navigation\\\" \\n        aria-label=\\\"Pagination\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" aria-label=\\\"Next page\\\">\\n                Previous <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">Previous <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">Page</span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">You're on page</span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" aria-label=\\\"Next page\\\">\\n                Next <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">Next <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nexports.DEFAULT_STYLES = \"\\n.ng2-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ng2-pagination::before, .ng2-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ng2-pagination::after {\\n    clear: both; }\\n  .ng2-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    font-size: 0.875rem;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ng2-pagination li {\\n    display: inline-block; }\\n  .ng2-pagination a,\\n  .ng2-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ng2-pagination a:hover,\\n    .ng2-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ng2-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ng2-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ng2-pagination .disabled:hover {\\n      background: transparent; }\\n  .ng2-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n\\n.ng2-pagination .pagination-previous a::before,\\n.ng2-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ng2-pagination .pagination-next a::after,\\n.ng2-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ng2-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/template.js\n// module id = 258\n// module chunks = 4","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar pagination_service_1 = require('./pagination.service');\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new core_1.EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: core_1.Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = [\r\n        { type: pagination_service_1.PaginationService, },\r\n        { type: core_1.ChangeDetectorRef, },\r\n    ];\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: core_1.Input },],\r\n        'maxSize': [{ type: core_1.Input },],\r\n        'pageChange': [{ type: core_1.Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\r\nexports.PaginationControlsDirective = PaginationControlsDirective;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-pagination/dist/pagination-controls.directive.js\n// module id = 259\n// module chunks = 4"],"sourceRoot":""}